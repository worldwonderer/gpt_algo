[
    {
        "_id": "two-sum",
        "title_cn": "两数之和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "1",
        "title_slug": "two-sum"
    },
    {
        "_id": "add-two-numbers",
        "title_cn": "两数相加",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "43.4%",
        "frontend_id": "2",
        "title_slug": "add-two-numbers"
    },
    {
        "_id": "longest-substring-without-repeating-characters",
        "title_cn": "无重复字符的最长子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "39.6%",
        "frontend_id": "3",
        "title_slug": "longest-substring-without-repeating-characters"
    },
    {
        "_id": "median-of-two-sorted-arrays",
        "title_cn": "寻找两个正序数组的中位数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "4",
        "title_slug": "median-of-two-sorted-arrays"
    },
    {
        "_id": "longest-palindromic-substring",
        "title_cn": "最长回文子串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "5",
        "title_slug": "longest-palindromic-substring"
    },
    {
        "_id": "zigzag-conversion",
        "title_cn": "Z 字形变换",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "6",
        "title_slug": "zigzag-conversion"
    },
    {
        "_id": "reverse-integer",
        "title_cn": "整数反转",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "35.5%",
        "frontend_id": "7",
        "title_slug": "reverse-integer"
    },
    {
        "_id": "string-to-integer-atoi",
        "title_cn": "字符串转换整数 (atoi)",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "21.2%",
        "frontend_id": "8",
        "title_slug": "string-to-integer-atoi"
    },
    {
        "_id": "palindrome-number",
        "title_cn": "回文数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "9",
        "title_slug": "palindrome-number"
    },
    {
        "_id": "regular-expression-matching",
        "title_cn": "正则表达式匹配",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "30.7%",
        "frontend_id": "10",
        "title_slug": "regular-expression-matching"
    },
    {
        "_id": "container-with-most-water",
        "title_cn": "盛最多水的容器",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "11",
        "title_slug": "container-with-most-water"
    },
    {
        "_id": "integer-to-roman",
        "title_cn": "整数转罗马数字",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "12",
        "title_slug": "integer-to-roman"
    },
    {
        "_id": "roman-to-integer",
        "title_cn": "罗马数字转整数",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "62.7%",
        "frontend_id": "13",
        "title_slug": "roman-to-integer"
    },
    {
        "_id": "longest-common-prefix",
        "title_cn": "最长公共前缀",
        "difficulty": 1,
        "tags_q": [
            "trie",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "14",
        "title_slug": "longest-common-prefix"
    },
    {
        "_id": "3sum",
        "title_cn": "三数之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "15",
        "title_slug": "3sum"
    },
    {
        "_id": "3sum-closest",
        "title_cn": "最接近的三数之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "16",
        "title_slug": "3sum-closest"
    },
    {
        "_id": "letter-combinations-of-a-phone-number",
        "title_cn": "电话号码的字母组合",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "17",
        "title_slug": "letter-combinations-of-a-phone-number"
    },
    {
        "_id": "4sum",
        "title_cn": "四数之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.6%",
        "frontend_id": "18",
        "title_slug": "4sum"
    },
    {
        "_id": "remove-nth-node-from-end-of-list",
        "title_cn": "删除链表的倒数第 N 个结点",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "19",
        "title_slug": "remove-nth-node-from-end-of-list"
    },
    {
        "_id": "valid-parentheses",
        "title_cn": "有效的括号",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "20",
        "title_slug": "valid-parentheses"
    },
    {
        "_id": "merge-two-sorted-lists",
        "title_cn": "合并两个有序链表",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "21",
        "title_slug": "merge-two-sorted-lists"
    },
    {
        "_id": "generate-parentheses",
        "title_cn": "括号生成",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "77.6%",
        "frontend_id": "22",
        "title_slug": "generate-parentheses"
    },
    {
        "_id": "merge-k-sorted-lists",
        "title_cn": "合并 K 个升序链表",
        "difficulty": 3,
        "tags_q": [
            "linked-list",
            "divide-and-conquer",
            "heap-priority-queue",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "23",
        "title_slug": "merge-k-sorted-lists"
    },
    {
        "_id": "swap-nodes-in-pairs",
        "title_cn": "两两交换链表中的节点",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "72.1%",
        "frontend_id": "24",
        "title_slug": "swap-nodes-in-pairs"
    },
    {
        "_id": "reverse-nodes-in-k-group",
        "title_cn": "K 个一组翻转链表",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "67.8%",
        "frontend_id": "25",
        "title_slug": "reverse-nodes-in-k-group"
    },
    {
        "_id": "remove-duplicates-from-sorted-array",
        "title_cn": "删除有序数组中的重复项",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "26",
        "title_slug": "remove-duplicates-from-sorted-array"
    },
    {
        "_id": "remove-element",
        "title_cn": "移除元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "59.4%",
        "frontend_id": "27",
        "title_slug": "remove-element"
    },
    {
        "_id": "find-the-index-of-the-first-occurrence-in-a-string",
        "title_cn": "找出字符串中第一个匹配项的下标",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "43.5%",
        "frontend_id": "28",
        "title_slug": "find-the-index-of-the-first-occurrence-in-a-string"
    },
    {
        "_id": "divide-two-integers",
        "title_cn": "两数相除",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "22.3%",
        "frontend_id": "29",
        "title_slug": "divide-two-integers"
    },
    {
        "_id": "substring-with-concatenation-of-all-words",
        "title_cn": "串联所有单词的子串",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "39.1%",
        "frontend_id": "30",
        "title_slug": "substring-with-concatenation-of-all-words"
    },
    {
        "_id": "next-permutation",
        "title_cn": "下一个排列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "39.1%",
        "frontend_id": "31",
        "title_slug": "next-permutation"
    },
    {
        "_id": "longest-valid-parentheses",
        "title_cn": "最长有效括号",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "32",
        "title_slug": "longest-valid-parentheses"
    },
    {
        "_id": "search-in-rotated-sorted-array",
        "title_cn": "搜索旋转排序数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.2%",
        "frontend_id": "33",
        "title_slug": "search-in-rotated-sorted-array"
    },
    {
        "_id": "find-first-and-last-position-of-element-in-sorted-array",
        "title_cn": "在排序数组中查找元素的第一个和最后一个位置",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "34",
        "title_slug": "find-first-and-last-position-of-element-in-sorted-array"
    },
    {
        "_id": "search-insert-position",
        "title_cn": "搜索插入位置",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "35",
        "title_slug": "search-insert-position"
    },
    {
        "_id": "valid-sudoku",
        "title_cn": "有效的数独",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.3%",
        "frontend_id": "36",
        "title_slug": "valid-sudoku"
    },
    {
        "_id": "sudoku-solver",
        "title_cn": "解数独",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "37",
        "title_slug": "sudoku-solver"
    },
    {
        "_id": "count-and-say",
        "title_cn": "外观数列",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "38",
        "title_slug": "count-and-say"
    },
    {
        "_id": "combination-sum",
        "title_cn": "组合总和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "39",
        "title_slug": "combination-sum"
    },
    {
        "_id": "combination-sum-ii",
        "title_cn": "组合总和 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "40",
        "title_slug": "combination-sum-ii"
    },
    {
        "_id": "first-missing-positive",
        "title_cn": "缺失的第一个正数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "41",
        "title_slug": "first-missing-positive"
    },
    {
        "_id": "trapping-rain-water",
        "title_cn": "接雨水",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "two-pointers",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "63.3%",
        "frontend_id": "42",
        "title_slug": "trapping-rain-water"
    },
    {
        "_id": "multiply-strings",
        "title_cn": "字符串相乘",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "43",
        "title_slug": "multiply-strings"
    },
    {
        "_id": "wildcard-matching",
        "title_cn": "通配符匹配",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "recursion",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "34.0%",
        "frontend_id": "44",
        "title_slug": "wildcard-matching"
    },
    {
        "_id": "jump-game-ii",
        "title_cn": "跳跃游戏 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "45",
        "title_slug": "jump-game-ii"
    },
    {
        "_id": "permutations",
        "title_cn": "全排列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "79.1%",
        "frontend_id": "46",
        "title_slug": "permutations"
    },
    {
        "_id": "permutations-ii",
        "title_cn": "全排列 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "47",
        "title_slug": "permutations-ii"
    },
    {
        "_id": "rotate-image",
        "title_cn": "旋转图像",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "75.8%",
        "frontend_id": "48",
        "title_slug": "rotate-image"
    },
    {
        "_id": "group-anagrams",
        "title_cn": "字母异位词分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.9%",
        "frontend_id": "49",
        "title_slug": "group-anagrams"
    },
    {
        "_id": "powx-n",
        "title_cn": "Pow(x, n)",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "50",
        "title_slug": "powx-n"
    },
    {
        "_id": "n-queens",
        "title_cn": "N 皇后",
        "difficulty": 3,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "73.9%",
        "frontend_id": "51",
        "title_slug": "n-queens"
    },
    {
        "_id": "n-queens-ii",
        "title_cn": "N 皇后 II",
        "difficulty": 3,
        "tags_q": [
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "82.3%",
        "frontend_id": "52",
        "title_slug": "n-queens-ii"
    },
    {
        "_id": "maximum-subarray",
        "title_cn": "最大子数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "53",
        "title_slug": "maximum-subarray"
    },
    {
        "_id": "spiral-matrix",
        "title_cn": "螺旋矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "54",
        "title_slug": "spiral-matrix"
    },
    {
        "_id": "jump-game",
        "title_cn": "跳跃游戏",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "43.3%",
        "frontend_id": "55",
        "title_slug": "jump-game"
    },
    {
        "_id": "merge-intervals",
        "title_cn": "合并区间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "56",
        "title_slug": "merge-intervals"
    },
    {
        "_id": "insert-interval",
        "title_cn": "插入区间",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "42.7%",
        "frontend_id": "57",
        "title_slug": "insert-interval"
    },
    {
        "_id": "length-of-last-word",
        "title_cn": "最后一个单词的长度",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "45.2%",
        "frontend_id": "58",
        "title_slug": "length-of-last-word"
    },
    {
        "_id": "spiral-matrix-ii",
        "title_cn": "螺旋矩阵 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "59",
        "title_slug": "spiral-matrix-ii"
    },
    {
        "_id": "permutation-sequence",
        "title_cn": "排列序列",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "60",
        "title_slug": "permutation-sequence"
    },
    {
        "_id": "rotate-list",
        "title_cn": "旋转链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "61",
        "title_slug": "rotate-list"
    },
    {
        "_id": "unique-paths",
        "title_cn": "不同路径",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "62",
        "title_slug": "unique-paths"
    },
    {
        "_id": "unique-paths-ii",
        "title_cn": "不同路径 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "63",
        "title_slug": "unique-paths-ii"
    },
    {
        "_id": "minimum-path-sum",
        "title_cn": "最小路径和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "64",
        "title_slug": "minimum-path-sum"
    },
    {
        "_id": "valid-number",
        "title_cn": "有效数字",
        "difficulty": 3,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "27.7%",
        "frontend_id": "65",
        "title_slug": "valid-number"
    },
    {
        "_id": "plus-one",
        "title_cn": "加一",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "66",
        "title_slug": "plus-one"
    },
    {
        "_id": "add-binary",
        "title_cn": "二进制求和",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "67",
        "title_slug": "add-binary"
    },
    {
        "_id": "text-justification",
        "title_cn": "文本左右对齐",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "68",
        "title_slug": "text-justification"
    },
    {
        "_id": "sqrtx",
        "title_cn": "x 的平方根 ",
        "difficulty": 1,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "69",
        "title_slug": "sqrtx"
    },
    {
        "_id": "climbing-stairs",
        "title_cn": "爬楼梯",
        "difficulty": 1,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.4%",
        "frontend_id": "70",
        "title_slug": "climbing-stairs"
    },
    {
        "_id": "simplify-path",
        "title_cn": "简化路径",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "71",
        "title_slug": "simplify-path"
    },
    {
        "_id": "edit-distance",
        "title_cn": "编辑距离",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "62.8%",
        "frontend_id": "72",
        "title_slug": "edit-distance"
    },
    {
        "_id": "set-matrix-zeroes",
        "title_cn": "矩阵置零",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "73",
        "title_slug": "set-matrix-zeroes"
    },
    {
        "_id": "search-a-2d-matrix",
        "title_cn": "搜索二维矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "49.5%",
        "frontend_id": "74",
        "title_slug": "search-a-2d-matrix"
    },
    {
        "_id": "sort-colors",
        "title_cn": "颜色分类",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "75",
        "title_slug": "sort-colors"
    },
    {
        "_id": "minimum-window-substring",
        "title_cn": "最小覆盖子串",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "76",
        "title_slug": "minimum-window-substring"
    },
    {
        "_id": "combinations",
        "title_cn": "组合",
        "difficulty": 2,
        "tags_q": [
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "77",
        "title_slug": "combinations"
    },
    {
        "_id": "subsets",
        "title_cn": "子集",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "81.3%",
        "frontend_id": "78",
        "title_slug": "subsets"
    },
    {
        "_id": "word-search",
        "title_cn": "单词搜索",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "79",
        "title_slug": "word-search"
    },
    {
        "_id": "remove-duplicates-from-sorted-array-ii",
        "title_cn": "删除有序数组中的重复项 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "80",
        "title_slug": "remove-duplicates-from-sorted-array-ii"
    },
    {
        "_id": "search-in-rotated-sorted-array-ii",
        "title_cn": "搜索旋转排序数组 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "41.0%",
        "frontend_id": "81",
        "title_slug": "search-in-rotated-sorted-array-ii"
    },
    {
        "_id": "remove-duplicates-from-sorted-list-ii",
        "title_cn": "删除排序链表中的重复元素 II",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "82",
        "title_slug": "remove-duplicates-from-sorted-list-ii"
    },
    {
        "_id": "remove-duplicates-from-sorted-list",
        "title_cn": "删除排序链表中的重复元素",
        "difficulty": 1,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "83",
        "title_slug": "remove-duplicates-from-sorted-list"
    },
    {
        "_id": "largest-rectangle-in-histogram",
        "title_cn": "柱状图中最大的矩形",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "84",
        "title_slug": "largest-rectangle-in-histogram"
    },
    {
        "_id": "maximal-rectangle",
        "title_cn": "最大矩形",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "matrix",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "55.0%",
        "frontend_id": "85",
        "title_slug": "maximal-rectangle"
    },
    {
        "_id": "partition-list",
        "title_cn": "分隔链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "86",
        "title_slug": "partition-list"
    },
    {
        "_id": "scramble-string",
        "title_cn": "扰乱字符串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "87",
        "title_slug": "scramble-string"
    },
    {
        "_id": "merge-sorted-array",
        "title_cn": "合并两个有序数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "88",
        "title_slug": "merge-sorted-array"
    },
    {
        "_id": "gray-code",
        "title_cn": "格雷编码",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "75.4%",
        "frontend_id": "89",
        "title_slug": "gray-code"
    },
    {
        "_id": "subsets-ii",
        "title_cn": "子集 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "90",
        "title_slug": "subsets-ii"
    },
    {
        "_id": "decode-ways",
        "title_cn": "解码方法",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "33.6%",
        "frontend_id": "91",
        "title_slug": "decode-ways"
    },
    {
        "_id": "reverse-linked-list-ii",
        "title_cn": "反转链表 II",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "92",
        "title_slug": "reverse-linked-list-ii"
    },
    {
        "_id": "restore-ip-addresses",
        "title_cn": "复原 IP 地址",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "93",
        "title_slug": "restore-ip-addresses"
    },
    {
        "_id": "binary-tree-inorder-traversal",
        "title_cn": "二叉树的中序遍历",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "94",
        "title_slug": "binary-tree-inorder-traversal"
    },
    {
        "_id": "unique-binary-search-trees-ii",
        "title_cn": "不同的二叉搜索树 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "dynamic-programming",
            "backtracking",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "95",
        "title_slug": "unique-binary-search-trees-ii"
    },
    {
        "_id": "unique-binary-search-trees",
        "title_cn": "不同的二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "math",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "71.0%",
        "frontend_id": "96",
        "title_slug": "unique-binary-search-trees"
    },
    {
        "_id": "interleaving-string",
        "title_cn": "交错字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "97",
        "title_slug": "interleaving-string"
    },
    {
        "_id": "validate-binary-search-tree",
        "title_cn": "验证二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "98",
        "title_slug": "validate-binary-search-tree"
    },
    {
        "_id": "recover-binary-search-tree",
        "title_cn": "恢复二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "99",
        "title_slug": "recover-binary-search-tree"
    },
    {
        "_id": "same-tree",
        "title_cn": "相同的树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "61.1%",
        "frontend_id": "100",
        "title_slug": "same-tree"
    },
    {
        "_id": "symmetric-tree",
        "title_cn": "对称二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "101",
        "title_slug": "symmetric-tree"
    },
    {
        "_id": "binary-tree-level-order-traversal",
        "title_cn": "二叉树的层序遍历",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "67.0%",
        "frontend_id": "102",
        "title_slug": "binary-tree-level-order-traversal"
    },
    {
        "_id": "binary-tree-zigzag-level-order-traversal",
        "title_cn": "二叉树的锯齿形层序遍历",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "103",
        "title_slug": "binary-tree-zigzag-level-order-traversal"
    },
    {
        "_id": "maximum-depth-of-binary-tree",
        "title_cn": "二叉树的最大深度",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "77.4%",
        "frontend_id": "104",
        "title_slug": "maximum-depth-of-binary-tree"
    },
    {
        "_id": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "title_cn": "从前序与中序遍历序列构造二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "array",
            "hash-table",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "71.5%",
        "frontend_id": "105",
        "title_slug": "construct-binary-tree-from-preorder-and-inorder-traversal"
    },
    {
        "_id": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "title_cn": "从中序与后序遍历序列构造二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "array",
            "hash-table",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "72.2%",
        "frontend_id": "106",
        "title_slug": "construct-binary-tree-from-inorder-and-postorder-traversal"
    },
    {
        "_id": "binary-tree-level-order-traversal-ii",
        "title_cn": "二叉树的层序遍历 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "107",
        "title_slug": "binary-tree-level-order-traversal-ii"
    },
    {
        "_id": "convert-sorted-array-to-binary-search-tree",
        "title_cn": "将有序数组转换为二叉搜索树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "array",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "78.3%",
        "frontend_id": "108",
        "title_slug": "convert-sorted-array-to-binary-search-tree"
    },
    {
        "_id": "convert-sorted-list-to-binary-search-tree",
        "title_cn": "有序链表转换二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "linked-list",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.6%",
        "frontend_id": "109",
        "title_slug": "convert-sorted-list-to-binary-search-tree"
    },
    {
        "_id": "balanced-binary-tree",
        "title_cn": "平衡二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "110",
        "title_slug": "balanced-binary-tree"
    },
    {
        "_id": "minimum-depth-of-binary-tree",
        "title_cn": "二叉树的最小深度",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "111",
        "title_slug": "minimum-depth-of-binary-tree"
    },
    {
        "_id": "path-sum",
        "title_cn": "路径总和",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "54.1%",
        "frontend_id": "112",
        "title_slug": "path-sum"
    },
    {
        "_id": "path-sum-ii",
        "title_cn": "路径总和 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "backtracking",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "63.2%",
        "frontend_id": "113",
        "title_slug": "path-sum-ii"
    },
    {
        "_id": "flatten-binary-tree-to-linked-list",
        "title_cn": "二叉树展开为链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.6%",
        "frontend_id": "114",
        "title_slug": "flatten-binary-tree-to-linked-list"
    },
    {
        "_id": "distinct-subsequences",
        "title_cn": "不同的子序列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "115",
        "title_slug": "distinct-subsequences"
    },
    {
        "_id": "populating-next-right-pointers-in-each-node",
        "title_cn": "填充每个节点的下一个右侧节点指针",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "116",
        "title_slug": "populating-next-right-pointers-in-each-node"
    },
    {
        "_id": "populating-next-right-pointers-in-each-node-ii",
        "title_cn": "填充每个节点的下一个右侧节点指针 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "117",
        "title_slug": "populating-next-right-pointers-in-each-node-ii"
    },
    {
        "_id": "pascals-triangle",
        "title_cn": "杨辉三角",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "75.8%",
        "frontend_id": "118",
        "title_slug": "pascals-triangle"
    },
    {
        "_id": "pascals-triangle-ii",
        "title_cn": "杨辉三角 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "119",
        "title_slug": "pascals-triangle-ii"
    },
    {
        "_id": "triangle",
        "title_cn": "三角形最小路径和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "120",
        "title_slug": "triangle"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock",
        "title_cn": "买卖股票的最佳时机",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "121",
        "title_slug": "best-time-to-buy-and-sell-stock"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock-ii",
        "title_cn": "买卖股票的最佳时机 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "122",
        "title_slug": "best-time-to-buy-and-sell-stock-ii"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock-iii",
        "title_cn": "买卖股票的最佳时机 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.4%",
        "frontend_id": "123",
        "title_slug": "best-time-to-buy-and-sell-stock-iii"
    },
    {
        "_id": "binary-tree-maximum-path-sum",
        "title_cn": "二叉树中的最大路径和",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "124",
        "title_slug": "binary-tree-maximum-path-sum"
    },
    {
        "_id": "valid-palindrome",
        "title_cn": "验证回文串",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "125",
        "title_slug": "valid-palindrome"
    },
    {
        "_id": "word-ladder-ii",
        "title_cn": "单词接龙 II",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "126",
        "title_slug": "word-ladder-ii"
    },
    {
        "_id": "word-ladder",
        "title_cn": "单词接龙",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "127",
        "title_slug": "word-ladder"
    },
    {
        "_id": "longest-consecutive-sequence",
        "title_cn": "最长连续序列",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "128",
        "title_slug": "longest-consecutive-sequence"
    },
    {
        "_id": "sum-root-to-leaf-numbers",
        "title_cn": "求根节点到叶节点数字之和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "129",
        "title_slug": "sum-root-to-leaf-numbers"
    },
    {
        "_id": "surrounded-regions",
        "title_cn": "被围绕的区域",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "130",
        "title_slug": "surrounded-regions"
    },
    {
        "_id": "palindrome-partitioning",
        "title_cn": "分割回文串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "73.5%",
        "frontend_id": "131",
        "title_slug": "palindrome-partitioning"
    },
    {
        "_id": "palindrome-partitioning-ii",
        "title_cn": "分割回文串 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.8%",
        "frontend_id": "132",
        "title_slug": "palindrome-partitioning-ii"
    },
    {
        "_id": "clone-graph",
        "title_cn": "克隆图",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "133",
        "title_slug": "clone-graph"
    },
    {
        "_id": "gas-station",
        "title_cn": "加油站",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "48.2%",
        "frontend_id": "134",
        "title_slug": "gas-station"
    },
    {
        "_id": "candy",
        "title_cn": "分发糖果",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "135",
        "title_slug": "candy"
    },
    {
        "_id": "single-number",
        "title_cn": "只出现一次的数字",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "73.4%",
        "frontend_id": "136",
        "title_slug": "single-number"
    },
    {
        "_id": "single-number-ii",
        "title_cn": "只出现一次的数字 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "72.3%",
        "frontend_id": "137",
        "title_slug": "single-number-ii"
    },
    {
        "_id": "copy-list-with-random-pointer",
        "title_cn": "随机链表的复制",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "138",
        "title_slug": "copy-list-with-random-pointer"
    },
    {
        "_id": "word-break",
        "title_cn": "单词拆分",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "memoization",
            "array",
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "139",
        "title_slug": "word-break"
    },
    {
        "_id": "linked-list-cycle",
        "title_cn": "环形链表",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "52.2%",
        "frontend_id": "141",
        "title_slug": "linked-list-cycle"
    },
    {
        "_id": "linked-list-cycle-ii",
        "title_cn": "环形链表 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "142",
        "title_slug": "linked-list-cycle-ii"
    },
    {
        "_id": "reorder-list",
        "title_cn": "重排链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "66.1%",
        "frontend_id": "143",
        "title_slug": "reorder-list"
    },
    {
        "_id": "binary-tree-preorder-traversal",
        "title_cn": "二叉树的前序遍历",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "71.8%",
        "frontend_id": "144",
        "title_slug": "binary-tree-preorder-traversal"
    },
    {
        "_id": "binary-tree-postorder-traversal",
        "title_cn": "二叉树的后序遍历",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.6%",
        "frontend_id": "145",
        "title_slug": "binary-tree-postorder-traversal"
    },
    {
        "_id": "lru-cache",
        "title_cn": "LRU 缓存",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "linked-list",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "146",
        "title_slug": "lru-cache"
    },
    {
        "_id": "insertion-sort-list",
        "title_cn": "对链表进行插入排序",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.7%",
        "frontend_id": "147",
        "title_slug": "insertion-sort-list"
    },
    {
        "_id": "sort-list",
        "title_cn": "排序链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers",
            "divide-and-conquer",
            "sorting",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "148",
        "title_slug": "sort-list"
    },
    {
        "_id": "max-points-on-a-line",
        "title_cn": "直线上最多的点数",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "149",
        "title_slug": "max-points-on-a-line"
    },
    {
        "_id": "evaluate-reverse-polish-notation",
        "title_cn": "逆波兰表达式求值",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "54.0%",
        "frontend_id": "150",
        "title_slug": "evaluate-reverse-polish-notation"
    },
    {
        "_id": "reverse-words-in-a-string",
        "title_cn": "反转字符串中的单词",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "151",
        "title_slug": "reverse-words-in-a-string"
    },
    {
        "_id": "maximum-product-subarray",
        "title_cn": "乘积最大子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "152",
        "title_slug": "maximum-product-subarray"
    },
    {
        "_id": "find-minimum-in-rotated-sorted-array",
        "title_cn": "寻找旋转排序数组中的最小值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "153",
        "title_slug": "find-minimum-in-rotated-sorted-array"
    },
    {
        "_id": "find-minimum-in-rotated-sorted-array-ii",
        "title_cn": "寻找旋转排序数组中的最小值 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "52.2%",
        "frontend_id": "154",
        "title_slug": "find-minimum-in-rotated-sorted-array-ii"
    },
    {
        "_id": "min-stack",
        "title_cn": "最小栈",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "design"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "155",
        "title_slug": "min-stack"
    },
    {
        "_id": "binary-tree-upside-down",
        "title_cn": "上下翻转二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "73.3%",
        "frontend_id": "156",
        "title_slug": "binary-tree-upside-down"
    },
    {
        "_id": "read-n-characters-given-read4",
        "title_cn": "用 Read4 读取 N 个字符",
        "difficulty": 1,
        "tags_q": [
            "array",
            "interactive",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "54.6%",
        "frontend_id": "157",
        "title_slug": "read-n-characters-given-read4"
    },
    {
        "_id": "read-n-characters-given-read4-ii-call-multiple-times",
        "title_cn": "用 Read4 读取 N 个字符 II - 多次调用",
        "difficulty": 3,
        "tags_q": [
            "array",
            "interactive",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "60.0%",
        "frontend_id": "158",
        "title_slug": "read-n-characters-given-read4-ii-call-multiple-times"
    },
    {
        "_id": "longest-substring-with-at-most-two-distinct-characters",
        "title_cn": "至多包含两个不同字符的最长子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "56.1%",
        "frontend_id": "159",
        "title_slug": "longest-substring-with-at-most-two-distinct-characters"
    },
    {
        "_id": "intersection-of-two-linked-lists",
        "title_cn": "相交链表",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "160",
        "title_slug": "intersection-of-two-linked-lists"
    },
    {
        "_id": "one-edit-distance",
        "title_cn": "相隔为 1 的编辑距离",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "34.0%",
        "frontend_id": "161",
        "title_slug": "one-edit-distance"
    },
    {
        "_id": "find-peak-element",
        "title_cn": "寻找峰值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "49.5%",
        "frontend_id": "162",
        "title_slug": "find-peak-element"
    },
    {
        "_id": "missing-ranges",
        "title_cn": "缺失的区间",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": true,
        "ac_rate": "35.9%",
        "frontend_id": "163",
        "title_slug": "missing-ranges"
    },
    {
        "_id": "maximum-gap",
        "title_cn": "最大间距",
        "difficulty": 2,
        "tags_q": [
            "array",
            "bucket-sort",
            "radix-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "164",
        "title_slug": "maximum-gap"
    },
    {
        "_id": "compare-version-numbers",
        "title_cn": "比较版本号",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.1%",
        "frontend_id": "165",
        "title_slug": "compare-version-numbers"
    },
    {
        "_id": "fraction-to-recurring-decimal",
        "title_cn": "分数到小数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "33.5%",
        "frontend_id": "166",
        "title_slug": "fraction-to-recurring-decimal"
    },
    {
        "_id": "two-sum-ii-input-array-is-sorted",
        "title_cn": "两数之和 II - 输入有序数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "167",
        "title_slug": "two-sum-ii-input-array-is-sorted"
    },
    {
        "_id": "excel-sheet-column-title",
        "title_cn": "Excel表列名称",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "168",
        "title_slug": "excel-sheet-column-title"
    },
    {
        "_id": "majority-element",
        "title_cn": "多数元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "divide-and-conquer",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "169",
        "title_slug": "majority-element"
    },
    {
        "_id": "excel-sheet-column-number",
        "title_cn": "Excel 表列序号",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.5%",
        "frontend_id": "171",
        "title_slug": "excel-sheet-column-number"
    },
    {
        "_id": "factorial-trailing-zeroes",
        "title_cn": "阶乘后的零",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "50.3%",
        "frontend_id": "172",
        "title_slug": "factorial-trailing-zeroes"
    },
    {
        "_id": "binary-search-tree-iterator",
        "title_cn": "二叉搜索树迭代器",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "design",
            "binary-search-tree",
            "binary-tree",
            "iterator"
        ],
        "paid_only": false,
        "ac_rate": "81.9%",
        "frontend_id": "173",
        "title_slug": "binary-search-tree-iterator"
    },
    {
        "_id": "dungeon-game",
        "title_cn": "地下城游戏",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "174",
        "title_slug": "dungeon-game"
    },
    {
        "_id": "largest-number",
        "title_cn": "最大数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.0%",
        "frontend_id": "179",
        "title_slug": "largest-number"
    },
    {
        "_id": "reverse-words-in-a-string-ii",
        "title_cn": "反转字符串中的单词 II",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "76.1%",
        "frontend_id": "186",
        "title_slug": "reverse-words-in-a-string-ii"
    },
    {
        "_id": "repeated-dna-sequences",
        "title_cn": "重复的DNA序列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "sliding-window",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "187",
        "title_slug": "repeated-dna-sequences"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock-iv",
        "title_cn": "买卖股票的最佳时机 IV",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.3%",
        "frontend_id": "188",
        "title_slug": "best-time-to-buy-and-sell-stock-iv"
    },
    {
        "_id": "rotate-array",
        "title_cn": "轮转数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "44.7%",
        "frontend_id": "189",
        "title_slug": "rotate-array"
    },
    {
        "_id": "reverse-bits",
        "title_cn": "颠倒二进制位",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "190",
        "title_slug": "reverse-bits"
    },
    {
        "_id": "number-of-1-bits",
        "title_cn": "位1的个数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "77.1%",
        "frontend_id": "191",
        "title_slug": "number-of-1-bits"
    },
    {
        "_id": "word-frequency",
        "title_cn": "统计词频",
        "difficulty": 2,
        "tags_q": [
            "shell"
        ],
        "paid_only": false,
        "ac_rate": "35.4%",
        "frontend_id": "192",
        "title_slug": "word-frequency"
    },
    {
        "_id": "valid-phone-numbers",
        "title_cn": "有效电话号码",
        "difficulty": 1,
        "tags_q": [
            "shell"
        ],
        "paid_only": false,
        "ac_rate": "33.5%",
        "frontend_id": "193",
        "title_slug": "valid-phone-numbers"
    },
    {
        "_id": "tenth-line",
        "title_cn": "第十行",
        "difficulty": 1,
        "tags_q": [
            "shell"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "195",
        "title_slug": "tenth-line"
    },
    {
        "_id": "house-robber",
        "title_cn": "打家劫舍",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "198",
        "title_slug": "house-robber"
    },
    {
        "_id": "binary-tree-right-side-view",
        "title_cn": "二叉树的右视图",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "199",
        "title_slug": "binary-tree-right-side-view"
    },
    {
        "_id": "number-of-islands",
        "title_cn": "岛屿数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "200",
        "title_slug": "number-of-islands"
    },
    {
        "_id": "bitwise-and-of-numbers-range",
        "title_cn": "数字范围按位与",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "201",
        "title_slug": "bitwise-and-of-numbers-range"
    },
    {
        "_id": "happy-number",
        "title_cn": "快乐数",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "math",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "202",
        "title_slug": "happy-number"
    },
    {
        "_id": "remove-linked-list-elements",
        "title_cn": "移除链表元素",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "203",
        "title_slug": "remove-linked-list-elements"
    },
    {
        "_id": "count-primes",
        "title_cn": "计数质数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "enumeration",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "204",
        "title_slug": "count-primes"
    },
    {
        "_id": "isomorphic-strings",
        "title_cn": "同构字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.3%",
        "frontend_id": "205",
        "title_slug": "isomorphic-strings"
    },
    {
        "_id": "reverse-linked-list",
        "title_cn": "反转链表",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "74.2%",
        "frontend_id": "206",
        "title_slug": "reverse-linked-list"
    },
    {
        "_id": "course-schedule",
        "title_cn": "课程表",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "53.9%",
        "frontend_id": "207",
        "title_slug": "course-schedule"
    },
    {
        "_id": "implement-trie-prefix-tree",
        "title_cn": "实现 Trie (前缀树)",
        "difficulty": 2,
        "tags_q": [
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "208",
        "title_slug": "implement-trie-prefix-tree"
    },
    {
        "_id": "minimum-size-subarray-sum",
        "title_cn": "长度最小的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "209",
        "title_slug": "minimum-size-subarray-sum"
    },
    {
        "_id": "course-schedule-ii",
        "title_cn": "课程表 II",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "210",
        "title_slug": "course-schedule-ii"
    },
    {
        "_id": "design-add-and-search-words-data-structure",
        "title_cn": "添加与搜索单词 - 数据结构设计",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "design",
            "trie",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "211",
        "title_slug": "design-add-and-search-words-data-structure"
    },
    {
        "_id": "word-search-ii",
        "title_cn": "单词搜索 II",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "212",
        "title_slug": "word-search-ii"
    },
    {
        "_id": "house-robber-ii",
        "title_cn": "打家劫舍 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.9%",
        "frontend_id": "213",
        "title_slug": "house-robber-ii"
    },
    {
        "_id": "shortest-palindrome",
        "title_cn": "最短回文串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "40.4%",
        "frontend_id": "214",
        "title_slug": "shortest-palindrome"
    },
    {
        "_id": "kth-largest-element-in-an-array",
        "title_cn": "数组中的第K个最大元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "215",
        "title_slug": "kth-largest-element-in-an-array"
    },
    {
        "_id": "combination-sum-iii",
        "title_cn": "组合总和 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "216",
        "title_slug": "combination-sum-iii"
    },
    {
        "_id": "contains-duplicate",
        "title_cn": "存在重复元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "217",
        "title_slug": "contains-duplicate"
    },
    {
        "_id": "the-skyline-problem",
        "title_cn": "天际线问题",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "divide-and-conquer",
            "ordered-set",
            "line-sweep",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "218",
        "title_slug": "the-skyline-problem"
    },
    {
        "_id": "contains-duplicate-ii",
        "title_cn": "存在重复元素 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "219",
        "title_slug": "contains-duplicate-ii"
    },
    {
        "_id": "contains-duplicate-iii",
        "title_cn": "存在重复元素 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "bucket-sort",
            "ordered-set",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "30.5%",
        "frontend_id": "220",
        "title_slug": "contains-duplicate-iii"
    },
    {
        "_id": "maximal-square",
        "title_cn": "最大正方形",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "221",
        "title_slug": "maximal-square"
    },
    {
        "_id": "count-complete-tree-nodes",
        "title_cn": "完全二叉树的节点个数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "binary-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "81.5%",
        "frontend_id": "222",
        "title_slug": "count-complete-tree-nodes"
    },
    {
        "_id": "rectangle-area",
        "title_cn": "矩形面积",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "54.0%",
        "frontend_id": "223",
        "title_slug": "rectangle-area"
    },
    {
        "_id": "basic-calculator",
        "title_cn": "基本计算器",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "recursion",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "42.6%",
        "frontend_id": "224",
        "title_slug": "basic-calculator"
    },
    {
        "_id": "implement-stack-using-queues",
        "title_cn": "用队列实现栈",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "design",
            "queue"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "225",
        "title_slug": "implement-stack-using-queues"
    },
    {
        "_id": "invert-binary-tree",
        "title_cn": "翻转二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "80.2%",
        "frontend_id": "226",
        "title_slug": "invert-binary-tree"
    },
    {
        "_id": "basic-calculator-ii",
        "title_cn": "基本计算器 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "227",
        "title_slug": "basic-calculator-ii"
    },
    {
        "_id": "summary-ranges",
        "title_cn": "汇总区间",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "228",
        "title_slug": "summary-ranges"
    },
    {
        "_id": "majority-element-ii",
        "title_cn": "多数元素 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "229",
        "title_slug": "majority-element-ii"
    },
    {
        "_id": "kth-smallest-element-in-a-bst",
        "title_cn": "二叉搜索树中第K小的元素",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "77.0%",
        "frontend_id": "230",
        "title_slug": "kth-smallest-element-in-a-bst"
    },
    {
        "_id": "power-of-two",
        "title_cn": "2 的幂",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.8%",
        "frontend_id": "231",
        "title_slug": "power-of-two"
    },
    {
        "_id": "implement-queue-using-stacks",
        "title_cn": "用栈实现队列",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "design",
            "queue"
        ],
        "paid_only": false,
        "ac_rate": "68.2%",
        "frontend_id": "232",
        "title_slug": "implement-queue-using-stacks"
    },
    {
        "_id": "number-of-digit-one",
        "title_cn": "数字 1 的个数",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "233",
        "title_slug": "number-of-digit-one"
    },
    {
        "_id": "palindrome-linked-list",
        "title_cn": "回文链表",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "234",
        "title_slug": "palindrome-linked-list"
    },
    {
        "_id": "lowest-common-ancestor-of-a-binary-search-tree",
        "title_cn": "二叉搜索树的最近公共祖先",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.0%",
        "frontend_id": "235",
        "title_slug": "lowest-common-ancestor-of-a-binary-search-tree"
    },
    {
        "_id": "lowest-common-ancestor-of-a-binary-tree",
        "title_cn": "二叉树的最近公共祖先",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "236",
        "title_slug": "lowest-common-ancestor-of-a-binary-tree"
    },
    {
        "_id": "delete-node-in-a-linked-list",
        "title_cn": "删除链表中的节点",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "86.3%",
        "frontend_id": "237",
        "title_slug": "delete-node-in-a-linked-list"
    },
    {
        "_id": "product-of-array-except-self",
        "title_cn": "除自身以外数组的乘积",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "75.3%",
        "frontend_id": "238",
        "title_slug": "product-of-array-except-self"
    },
    {
        "_id": "sliding-window-maximum",
        "title_cn": "滑动窗口最大值",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "239",
        "title_slug": "sliding-window-maximum"
    },
    {
        "_id": "search-a-2d-matrix-ii",
        "title_cn": "搜索二维矩阵 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "divide-and-conquer",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "240",
        "title_slug": "search-a-2d-matrix-ii"
    },
    {
        "_id": "different-ways-to-add-parentheses",
        "title_cn": "为运算表达式设计优先级",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "memoization",
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "75.6%",
        "frontend_id": "241",
        "title_slug": "different-ways-to-add-parentheses"
    },
    {
        "_id": "valid-anagram",
        "title_cn": "有效的字母异位词",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "242",
        "title_slug": "valid-anagram"
    },
    {
        "_id": "shortest-word-distance",
        "title_cn": "最短单词距离",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "67.5%",
        "frontend_id": "243",
        "title_slug": "shortest-word-distance"
    },
    {
        "_id": "shortest-word-distance-ii",
        "title_cn": "最短单词距离 II",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "60.6%",
        "frontend_id": "244",
        "title_slug": "shortest-word-distance-ii"
    },
    {
        "_id": "shortest-word-distance-iii",
        "title_cn": "最短单词距离 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "58.1%",
        "frontend_id": "245",
        "title_slug": "shortest-word-distance-iii"
    },
    {
        "_id": "strobogrammatic-number",
        "title_cn": "中心对称数",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "47.4%",
        "frontend_id": "246",
        "title_slug": "strobogrammatic-number"
    },
    {
        "_id": "strobogrammatic-number-ii",
        "title_cn": "中心对称数 II",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "54.7%",
        "frontend_id": "247",
        "title_slug": "strobogrammatic-number-ii"
    },
    {
        "_id": "strobogrammatic-number-iii",
        "title_cn": "中心对称数 III",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "48.9%",
        "frontend_id": "248",
        "title_slug": "strobogrammatic-number-iii"
    },
    {
        "_id": "group-shifted-strings",
        "title_cn": "移位字符串分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "65.4%",
        "frontend_id": "249",
        "title_slug": "group-shifted-strings"
    },
    {
        "_id": "count-univalue-subtrees",
        "title_cn": "统计同值子树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "64.7%",
        "frontend_id": "250",
        "title_slug": "count-univalue-subtrees"
    },
    {
        "_id": "flatten-2d-vector",
        "title_cn": "展开二维向量",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "two-pointers",
            "iterator"
        ],
        "paid_only": true,
        "ac_rate": "55.4%",
        "frontend_id": "251",
        "title_slug": "flatten-2d-vector"
    },
    {
        "_id": "meeting-rooms",
        "title_cn": "会议室",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "58.2%",
        "frontend_id": "252",
        "title_slug": "meeting-rooms"
    },
    {
        "_id": "meeting-rooms-ii",
        "title_cn": "会议室 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "prefix-sum",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "52.4%",
        "frontend_id": "253",
        "title_slug": "meeting-rooms-ii"
    },
    {
        "_id": "factor-combinations",
        "title_cn": "因子的组合",
        "difficulty": 2,
        "tags_q": [
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "57.0%",
        "frontend_id": "254",
        "title_slug": "factor-combinations"
    },
    {
        "_id": "verify-preorder-sequence-in-binary-search-tree",
        "title_cn": "验证二叉搜索树的前序遍历序列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "binary-search-tree",
            "recursion",
            "array",
            "binary-tree",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "49.7%",
        "frontend_id": "255",
        "title_slug": "verify-preorder-sequence-in-binary-search-tree"
    },
    {
        "_id": "paint-house",
        "title_cn": "粉刷房子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "70.9%",
        "frontend_id": "256",
        "title_slug": "paint-house"
    },
    {
        "_id": "binary-tree-paths",
        "title_cn": "二叉树的所有路径",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "backtracking",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "257",
        "title_slug": "binary-tree-paths"
    },
    {
        "_id": "add-digits",
        "title_cn": "各位相加",
        "difficulty": 1,
        "tags_q": [
            "math",
            "number-theory",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "258",
        "title_slug": "add-digits"
    },
    {
        "_id": "3sum-smaller",
        "title_cn": "较小的三数之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "55.0%",
        "frontend_id": "259",
        "title_slug": "3sum-smaller"
    },
    {
        "_id": "single-number-iii",
        "title_cn": "只出现一次的数字 III",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "72.0%",
        "frontend_id": "260",
        "title_slug": "single-number-iii"
    },
    {
        "_id": "graph-valid-tree",
        "title_cn": "以图判树",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": true,
        "ac_rate": "51.4%",
        "frontend_id": "261",
        "title_slug": "graph-valid-tree"
    },
    {
        "_id": "ugly-number",
        "title_cn": "丑数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "263",
        "title_slug": "ugly-number"
    },
    {
        "_id": "ugly-number-ii",
        "title_cn": "丑数 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "264",
        "title_slug": "ugly-number-ii"
    },
    {
        "_id": "paint-house-ii",
        "title_cn": "粉刷房子 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "64.4%",
        "frontend_id": "265",
        "title_slug": "paint-house-ii"
    },
    {
        "_id": "palindrome-permutation",
        "title_cn": "回文排列",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "70.9%",
        "frontend_id": "266",
        "title_slug": "palindrome-permutation"
    },
    {
        "_id": "palindrome-permutation-ii",
        "title_cn": "回文排列 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "46.7%",
        "frontend_id": "267",
        "title_slug": "palindrome-permutation-ii"
    },
    {
        "_id": "missing-number",
        "title_cn": "丢失的数字",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "math",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "268",
        "title_slug": "missing-number"
    },
    {
        "_id": "alien-dictionary",
        "title_cn": "火星词典",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "37.3%",
        "frontend_id": "269",
        "title_slug": "alien-dictionary"
    },
    {
        "_id": "closest-binary-search-tree-value",
        "title_cn": "最接近的二叉搜索树值",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "53.7%",
        "frontend_id": "270",
        "title_slug": "closest-binary-search-tree-value"
    },
    {
        "_id": "encode-and-decode-strings",
        "title_cn": "字符串的编码与解码",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "58.6%",
        "frontend_id": "271",
        "title_slug": "encode-and-decode-strings"
    },
    {
        "_id": "closest-binary-search-tree-value-ii",
        "title_cn": "最接近的二叉搜索树值 II",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "two-pointers",
            "binary-tree",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "66.3%",
        "frontend_id": "272",
        "title_slug": "closest-binary-search-tree-value-ii"
    },
    {
        "_id": "integer-to-english-words",
        "title_cn": "整数转换英文表示",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "273",
        "title_slug": "integer-to-english-words"
    },
    {
        "_id": "h-index",
        "title_cn": "H 指数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "counting-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "274",
        "title_slug": "h-index"
    },
    {
        "_id": "h-index-ii",
        "title_cn": "H 指数 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "275",
        "title_slug": "h-index-ii"
    },
    {
        "_id": "paint-fence",
        "title_cn": "栅栏涂色",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "54.9%",
        "frontend_id": "276",
        "title_slug": "paint-fence"
    },
    {
        "_id": "find-the-celebrity",
        "title_cn": "搜寻名人",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "two-pointers",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "57.8%",
        "frontend_id": "277",
        "title_slug": "find-the-celebrity"
    },
    {
        "_id": "first-bad-version",
        "title_cn": "第一个错误的版本",
        "difficulty": 1,
        "tags_q": [
            "binary-search",
            "interactive"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "278",
        "title_slug": "first-bad-version"
    },
    {
        "_id": "perfect-squares",
        "title_cn": "完全平方数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "279",
        "title_slug": "perfect-squares"
    },
    {
        "_id": "wiggle-sort",
        "title_cn": "摆动排序",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "69.2%",
        "frontend_id": "280",
        "title_slug": "wiggle-sort"
    },
    {
        "_id": "zigzag-iterator",
        "title_cn": "锯齿迭代器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "iterator"
        ],
        "paid_only": true,
        "ac_rate": "76.8%",
        "frontend_id": "281",
        "title_slug": "zigzag-iterator"
    },
    {
        "_id": "expression-add-operators",
        "title_cn": "给表达式添加运算符",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "282",
        "title_slug": "expression-add-operators"
    },
    {
        "_id": "move-zeroes",
        "title_cn": "移动零",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "283",
        "title_slug": "move-zeroes"
    },
    {
        "_id": "peeking-iterator",
        "title_cn": "窥视迭代器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "iterator"
        ],
        "paid_only": false,
        "ac_rate": "76.5%",
        "frontend_id": "284",
        "title_slug": "peeking-iterator"
    },
    {
        "_id": "inorder-successor-in-bst",
        "title_cn": "二叉搜索树中的中序后继",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "64.6%",
        "frontend_id": "285",
        "title_slug": "inorder-successor-in-bst"
    },
    {
        "_id": "walls-and-gates",
        "title_cn": "墙与门",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "55.3%",
        "frontend_id": "286",
        "title_slug": "walls-and-gates"
    },
    {
        "_id": "find-the-duplicate-number",
        "title_cn": "寻找重复数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "287",
        "title_slug": "find-the-duplicate-number"
    },
    {
        "_id": "unique-word-abbreviation",
        "title_cn": "单词的唯一缩写",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "50.0%",
        "frontend_id": "288",
        "title_slug": "unique-word-abbreviation"
    },
    {
        "_id": "game-of-life",
        "title_cn": "生命游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "76.1%",
        "frontend_id": "289",
        "title_slug": "game-of-life"
    },
    {
        "_id": "word-pattern",
        "title_cn": "单词规律",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "290",
        "title_slug": "word-pattern"
    },
    {
        "_id": "word-pattern-ii",
        "title_cn": "单词规律 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "51.8%",
        "frontend_id": "291",
        "title_slug": "word-pattern-ii"
    },
    {
        "_id": "nim-game",
        "title_cn": "Nim 游戏",
        "difficulty": 1,
        "tags_q": [
            "brainteaser",
            "math",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "70.8%",
        "frontend_id": "292",
        "title_slug": "nim-game"
    },
    {
        "_id": "flip-game",
        "title_cn": "翻转游戏",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": true,
        "ac_rate": "72.9%",
        "frontend_id": "293",
        "title_slug": "flip-game"
    },
    {
        "_id": "flip-game-ii",
        "title_cn": "翻转游戏 II",
        "difficulty": 2,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming",
            "backtracking",
            "game-theory"
        ],
        "paid_only": true,
        "ac_rate": "59.1%",
        "frontend_id": "294",
        "title_slug": "flip-game-ii"
    },
    {
        "_id": "find-median-from-data-stream",
        "title_cn": "数据流的中位数",
        "difficulty": 3,
        "tags_q": [
            "design",
            "two-pointers",
            "data-stream",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "295",
        "title_slug": "find-median-from-data-stream"
    },
    {
        "_id": "best-meeting-point",
        "title_cn": "最佳的碰头地点",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "matrix",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "61.3%",
        "frontend_id": "296",
        "title_slug": "best-meeting-point"
    },
    {
        "_id": "serialize-and-deserialize-binary-tree",
        "title_cn": "二叉树的序列化与反序列化",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "59.1%",
        "frontend_id": "297",
        "title_slug": "serialize-and-deserialize-binary-tree"
    },
    {
        "_id": "binary-tree-longest-consecutive-sequence",
        "title_cn": "二叉树最长连续序列",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "59.8%",
        "frontend_id": "298",
        "title_slug": "binary-tree-longest-consecutive-sequence"
    },
    {
        "_id": "bulls-and-cows",
        "title_cn": "猜数字游戏",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "299",
        "title_slug": "bulls-and-cows"
    },
    {
        "_id": "longest-increasing-subsequence",
        "title_cn": "最长递增子序列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "300",
        "title_slug": "longest-increasing-subsequence"
    },
    {
        "_id": "remove-invalid-parentheses",
        "title_cn": "删除无效的括号",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "301",
        "title_slug": "remove-invalid-parentheses"
    },
    {
        "_id": "smallest-rectangle-enclosing-black-pixels",
        "title_cn": "包含全部黑色像素的最小矩形",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "67.5%",
        "frontend_id": "302",
        "title_slug": "smallest-rectangle-enclosing-black-pixels"
    },
    {
        "_id": "range-sum-query-immutable",
        "title_cn": "区域和检索 - 数组不可变",
        "difficulty": 1,
        "tags_q": [
            "design",
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "78.3%",
        "frontend_id": "303",
        "title_slug": "range-sum-query-immutable"
    },
    {
        "_id": "range-sum-query-2d-immutable",
        "title_cn": "二维区域和检索 - 矩阵不可变",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "304",
        "title_slug": "range-sum-query-2d-immutable"
    },
    {
        "_id": "number-of-islands-ii",
        "title_cn": "岛屿数量 II",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "42.1%",
        "frontend_id": "305",
        "title_slug": "number-of-islands-ii"
    },
    {
        "_id": "additive-number",
        "title_cn": "累加数",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "306",
        "title_slug": "additive-number"
    },
    {
        "_id": "range-sum-query-mutable",
        "title_cn": "区域和检索 - 数组可修改",
        "difficulty": 2,
        "tags_q": [
            "design",
            "binary-indexed-tree",
            "segment-tree",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "307",
        "title_slug": "range-sum-query-mutable"
    },
    {
        "_id": "range-sum-query-2d-mutable",
        "title_cn": "二维区域和检索 - 可变",
        "difficulty": 3,
        "tags_q": [
            "design",
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "63.8%",
        "frontend_id": "308",
        "title_slug": "range-sum-query-2d-mutable"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock-with-cooldown",
        "title_cn": "买卖股票的最佳时机含冷冻期",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "309",
        "title_slug": "best-time-to-buy-and-sell-stock-with-cooldown"
    },
    {
        "_id": "minimum-height-trees",
        "title_cn": "最小高度树",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "310",
        "title_slug": "minimum-height-trees"
    },
    {
        "_id": "sparse-matrix-multiplication",
        "title_cn": "稀疏矩阵的乘法",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "75.6%",
        "frontend_id": "311",
        "title_slug": "sparse-matrix-multiplication"
    },
    {
        "_id": "burst-balloons",
        "title_cn": "戳气球",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.0%",
        "frontend_id": "312",
        "title_slug": "burst-balloons"
    },
    {
        "_id": "super-ugly-number",
        "title_cn": "超级丑数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "313",
        "title_slug": "super-ugly-number"
    },
    {
        "_id": "binary-tree-vertical-order-traversal",
        "title_cn": "二叉树的垂直遍历",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "56.3%",
        "frontend_id": "314",
        "title_slug": "binary-tree-vertical-order-traversal"
    },
    {
        "_id": "remove-duplicate-letters",
        "title_cn": "去除重复字母",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "48.9%",
        "frontend_id": "316",
        "title_slug": "remove-duplicate-letters"
    },
    {
        "_id": "shortest-distance-from-all-buildings",
        "title_cn": "离建筑物最近的距离",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "47.5%",
        "frontend_id": "317",
        "title_slug": "shortest-distance-from-all-buildings"
    },
    {
        "_id": "maximum-product-of-word-lengths",
        "title_cn": "最大单词长度乘积",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "318",
        "title_slug": "maximum-product-of-word-lengths"
    },
    {
        "_id": "bulb-switcher",
        "title_cn": "灯泡开关",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "57.8%",
        "frontend_id": "319",
        "title_slug": "bulb-switcher"
    },
    {
        "_id": "generalized-abbreviation",
        "title_cn": "列举单词的全部缩写",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "70.0%",
        "frontend_id": "320",
        "title_slug": "generalized-abbreviation"
    },
    {
        "_id": "coin-change",
        "title_cn": "零钱兑换",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "322",
        "title_slug": "coin-change"
    },
    {
        "_id": "number-of-connected-components-in-an-undirected-graph",
        "title_cn": "无向图中连通分量的数目",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": true,
        "ac_rate": "65.3%",
        "frontend_id": "323",
        "title_slug": "number-of-connected-components-in-an-undirected-graph"
    },
    {
        "_id": "wiggle-sort-ii",
        "title_cn": "摆动排序 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "quickselect",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "40.9%",
        "frontend_id": "324",
        "title_slug": "wiggle-sort-ii"
    },
    {
        "_id": "maximum-size-subarray-sum-equals-k",
        "title_cn": "和等于 k 的最长子数组长度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "51.6%",
        "frontend_id": "325",
        "title_slug": "maximum-size-subarray-sum-equals-k"
    },
    {
        "_id": "count-of-range-sum",
        "title_cn": "区间和的个数",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "40.5%",
        "frontend_id": "327",
        "title_slug": "count-of-range-sum"
    },
    {
        "_id": "odd-even-linked-list",
        "title_cn": "奇偶链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "328",
        "title_slug": "odd-even-linked-list"
    },
    {
        "_id": "patching-array",
        "title_cn": "按要求补齐数组",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "330",
        "title_slug": "patching-array"
    },
    {
        "_id": "verify-preorder-serialization-of-a-binary-tree",
        "title_cn": "验证二叉树的前序序列化",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "331",
        "title_slug": "verify-preorder-serialization-of-a-binary-tree"
    },
    {
        "_id": "reconstruct-itinerary",
        "title_cn": "重新安排行程",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "eulerian-circuit"
        ],
        "paid_only": false,
        "ac_rate": "45.8%",
        "frontend_id": "332",
        "title_slug": "reconstruct-itinerary"
    },
    {
        "_id": "largest-bst-subtree",
        "title_cn": "最大二叉搜索子树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "49.2%",
        "frontend_id": "333",
        "title_slug": "largest-bst-subtree"
    },
    {
        "_id": "increasing-triplet-subsequence",
        "title_cn": "递增的三元子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "42.8%",
        "frontend_id": "334",
        "title_slug": "increasing-triplet-subsequence"
    },
    {
        "_id": "self-crossing",
        "title_cn": "路径交叉",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "335",
        "title_slug": "self-crossing"
    },
    {
        "_id": "palindrome-pairs",
        "title_cn": "回文对",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "38.0%",
        "frontend_id": "336",
        "title_slug": "palindrome-pairs"
    },
    {
        "_id": "house-robber-iii",
        "title_cn": "打家劫舍 III",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "337",
        "title_slug": "house-robber-iii"
    },
    {
        "_id": "counting-bits",
        "title_cn": "比特位计数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "78.7%",
        "frontend_id": "338",
        "title_slug": "counting-bits"
    },
    {
        "_id": "nested-list-weight-sum",
        "title_cn": "嵌套列表加权和",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search"
        ],
        "paid_only": true,
        "ac_rate": "83.6%",
        "frontend_id": "339",
        "title_slug": "nested-list-weight-sum"
    },
    {
        "_id": "longest-substring-with-at-most-k-distinct-characters",
        "title_cn": "至多包含 K 个不同字符的最长子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "51.2%",
        "frontend_id": "340",
        "title_slug": "longest-substring-with-at-most-k-distinct-characters"
    },
    {
        "_id": "flatten-nested-list-iterator",
        "title_cn": "扁平化嵌套列表迭代器",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "design",
            "queue",
            "iterator"
        ],
        "paid_only": false,
        "ac_rate": "72.8%",
        "frontend_id": "341",
        "title_slug": "flatten-nested-list-iterator"
    },
    {
        "_id": "integer-break",
        "title_cn": "整数拆分",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "343",
        "title_slug": "integer-break"
    },
    {
        "_id": "reverse-string",
        "title_cn": "反转字符串",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "80.2%",
        "frontend_id": "344",
        "title_slug": "reverse-string"
    },
    {
        "_id": "reverse-vowels-of-a-string",
        "title_cn": "反转字符串中的元音字母",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.8%",
        "frontend_id": "345",
        "title_slug": "reverse-vowels-of-a-string"
    },
    {
        "_id": "moving-average-from-data-stream",
        "title_cn": "数据流中的移动平均值",
        "difficulty": 1,
        "tags_q": [
            "design",
            "queue",
            "array",
            "data-stream"
        ],
        "paid_only": true,
        "ac_rate": "73.1%",
        "frontend_id": "346",
        "title_slug": "moving-average-from-data-stream"
    },
    {
        "_id": "top-k-frequent-elements",
        "title_cn": "前 K 个高频元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "divide-and-conquer",
            "bucket-sort",
            "counting",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "347",
        "title_slug": "top-k-frequent-elements"
    },
    {
        "_id": "design-tic-tac-toe",
        "title_cn": "设计井字棋",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "59.4%",
        "frontend_id": "348",
        "title_slug": "design-tic-tac-toe"
    },
    {
        "_id": "intersection-of-two-arrays",
        "title_cn": "两个数组的交集",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.5%",
        "frontend_id": "349",
        "title_slug": "intersection-of-two-arrays"
    },
    {
        "_id": "intersection-of-two-arrays-ii",
        "title_cn": "两个数组的交集 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "350",
        "title_slug": "intersection-of-two-arrays-ii"
    },
    {
        "_id": "android-unlock-patterns",
        "title_cn": "安卓系统手势解锁",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "61.7%",
        "frontend_id": "351",
        "title_slug": "android-unlock-patterns"
    },
    {
        "_id": "data-stream-as-disjoint-intervals",
        "title_cn": "将数据流变为多个不相交区间",
        "difficulty": 3,
        "tags_q": [
            "design",
            "binary-search",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "352",
        "title_slug": "data-stream-as-disjoint-intervals"
    },
    {
        "_id": "design-snake-game",
        "title_cn": "贪吃蛇",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "43.1%",
        "frontend_id": "353",
        "title_slug": "design-snake-game"
    },
    {
        "_id": "russian-doll-envelopes",
        "title_cn": "俄罗斯套娃信封问题",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.1%",
        "frontend_id": "354",
        "title_slug": "russian-doll-envelopes"
    },
    {
        "_id": "design-twitter",
        "title_cn": "设计推特",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "linked-list",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "41.2%",
        "frontend_id": "355",
        "title_slug": "design-twitter"
    },
    {
        "_id": "line-reflection",
        "title_cn": "直线镜像",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "36.9%",
        "frontend_id": "356",
        "title_slug": "line-reflection"
    },
    {
        "_id": "rearrange-string-k-distance-apart",
        "title_cn": "K 距离间隔重排字符串",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "37.5%",
        "frontend_id": "358",
        "title_slug": "rearrange-string-k-distance-apart"
    },
    {
        "_id": "logger-rate-limiter",
        "title_cn": "日志速率限制器",
        "difficulty": 1,
        "tags_q": [
            "design",
            "hash-table",
            "data-stream"
        ],
        "paid_only": true,
        "ac_rate": "75.1%",
        "frontend_id": "359",
        "title_slug": "logger-rate-limiter"
    },
    {
        "_id": "sort-transformed-array",
        "title_cn": "有序转化数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "two-pointers",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "62.4%",
        "frontend_id": "360",
        "title_slug": "sort-transformed-array"
    },
    {
        "_id": "bomb-enemy",
        "title_cn": "轰炸敌人",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "59.8%",
        "frontend_id": "361",
        "title_slug": "bomb-enemy"
    },
    {
        "_id": "design-hit-counter",
        "title_cn": "敲击计数器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "binary-search",
            "data-stream"
        ],
        "paid_only": true,
        "ac_rate": "69.2%",
        "frontend_id": "362",
        "title_slug": "design-hit-counter"
    },
    {
        "_id": "max-sum-of-rectangle-no-larger-than-k",
        "title_cn": "矩形区域不超过 K 的最大数值和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "matrix",
            "ordered-set",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "48.2%",
        "frontend_id": "363",
        "title_slug": "max-sum-of-rectangle-no-larger-than-k"
    },
    {
        "_id": "nested-list-weight-sum-ii",
        "title_cn": "嵌套列表加权和 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "depth-first-search",
            "breadth-first-search"
        ],
        "paid_only": true,
        "ac_rate": "64.7%",
        "frontend_id": "364",
        "title_slug": "nested-list-weight-sum-ii"
    },
    {
        "_id": "find-leaves-of-binary-tree",
        "title_cn": "寻找二叉树的叶子节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "80.5%",
        "frontend_id": "366",
        "title_slug": "find-leaves-of-binary-tree"
    },
    {
        "_id": "valid-perfect-square",
        "title_cn": "有效的完全平方数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.9%",
        "frontend_id": "367",
        "title_slug": "valid-perfect-square"
    },
    {
        "_id": "largest-divisible-subset",
        "title_cn": "最大整除子集",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "368",
        "title_slug": "largest-divisible-subset"
    },
    {
        "_id": "plus-one-linked-list",
        "title_cn": "给单链表加一",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "62.0%",
        "frontend_id": "369",
        "title_slug": "plus-one-linked-list"
    },
    {
        "_id": "range-addition",
        "title_cn": "区间加法",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "77.2%",
        "frontend_id": "370",
        "title_slug": "range-addition"
    },
    {
        "_id": "sum-of-two-integers",
        "title_cn": "两整数之和",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "62.5%",
        "frontend_id": "371",
        "title_slug": "sum-of-two-integers"
    },
    {
        "_id": "super-pow",
        "title_cn": "超级次方",
        "difficulty": 2,
        "tags_q": [
            "math",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "372",
        "title_slug": "super-pow"
    },
    {
        "_id": "find-k-pairs-with-smallest-sums",
        "title_cn": "查找和最小的 K 对数字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "40.8%",
        "frontend_id": "373",
        "title_slug": "find-k-pairs-with-smallest-sums"
    },
    {
        "_id": "guess-number-higher-or-lower",
        "title_cn": "猜数字大小",
        "difficulty": 1,
        "tags_q": [
            "binary-search",
            "interactive"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "374",
        "title_slug": "guess-number-higher-or-lower"
    },
    {
        "_id": "guess-number-higher-or-lower-ii",
        "title_cn": "猜数字大小 II",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "375",
        "title_slug": "guess-number-higher-or-lower-ii"
    },
    {
        "_id": "wiggle-subsequence",
        "title_cn": "摆动序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "376",
        "title_slug": "wiggle-subsequence"
    },
    {
        "_id": "combination-sum-iv",
        "title_cn": "组合总和 Ⅳ",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "377",
        "title_slug": "combination-sum-iv"
    },
    {
        "_id": "kth-smallest-element-in-a-sorted-matrix",
        "title_cn": "有序矩阵中第 K 小的元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "matrix",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "378",
        "title_slug": "kth-smallest-element-in-a-sorted-matrix"
    },
    {
        "_id": "design-phone-directory",
        "title_cn": "电话目录管理系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "hash-table",
            "linked-list"
        ],
        "paid_only": true,
        "ac_rate": "61.3%",
        "frontend_id": "379",
        "title_slug": "design-phone-directory"
    },
    {
        "_id": "insert-delete-getrandom-o1",
        "title_cn": "O(1) 时间插入、删除和获取随机元素",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "52.3%",
        "frontend_id": "380",
        "title_slug": "insert-delete-getrandom-o1"
    },
    {
        "_id": "insert-delete-getrandom-o1-duplicates-allowed",
        "title_cn": "O(1) 时间插入、删除和获取随机元素 - 允许重复",
        "difficulty": 3,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "41.9%",
        "frontend_id": "381",
        "title_slug": "insert-delete-getrandom-o1-duplicates-allowed"
    },
    {
        "_id": "linked-list-random-node",
        "title_cn": "链表随机节点",
        "difficulty": 2,
        "tags_q": [
            "reservoir-sampling",
            "linked-list",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "72.7%",
        "frontend_id": "382",
        "title_slug": "linked-list-random-node"
    },
    {
        "_id": "ransom-note",
        "title_cn": "赎金信",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "383",
        "title_slug": "ransom-note"
    },
    {
        "_id": "shuffle-an-array",
        "title_cn": "打乱数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "384",
        "title_slug": "shuffle-an-array"
    },
    {
        "_id": "mini-parser",
        "title_cn": "迷你语法分析器",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "depth-first-search",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "385",
        "title_slug": "mini-parser"
    },
    {
        "_id": "lexicographical-numbers",
        "title_cn": "字典序排数",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "trie"
        ],
        "paid_only": false,
        "ac_rate": "74.6%",
        "frontend_id": "386",
        "title_slug": "lexicographical-numbers"
    },
    {
        "_id": "first-unique-character-in-a-string",
        "title_cn": "字符串中的第一个唯一字符",
        "difficulty": 1,
        "tags_q": [
            "queue",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "387",
        "title_slug": "first-unique-character-in-a-string"
    },
    {
        "_id": "longest-absolute-file-path",
        "title_cn": "文件的最长绝对路径",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "depth-first-search",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "388",
        "title_slug": "longest-absolute-file-path"
    },
    {
        "_id": "find-the-difference",
        "title_cn": "找不同",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "389",
        "title_slug": "find-the-difference"
    },
    {
        "_id": "elimination-game",
        "title_cn": "消除游戏",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "390",
        "title_slug": "elimination-game"
    },
    {
        "_id": "perfect-rectangle",
        "title_cn": "完美矩形",
        "difficulty": 3,
        "tags_q": [
            "array",
            "line-sweep"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "391",
        "title_slug": "perfect-rectangle"
    },
    {
        "_id": "is-subsequence",
        "title_cn": "判断子序列",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "392",
        "title_slug": "is-subsequence"
    },
    {
        "_id": "utf-8-validation",
        "title_cn": "UTF-8 编码验证",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "43.7%",
        "frontend_id": "393",
        "title_slug": "utf-8-validation"
    },
    {
        "_id": "decode-string",
        "title_cn": "字符串解码",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "394",
        "title_slug": "decode-string"
    },
    {
        "_id": "longest-substring-with-at-least-k-repeating-characters",
        "title_cn": "至少有 K 个重复字符的最长子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "divide-and-conquer",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "395",
        "title_slug": "longest-substring-with-at-least-k-repeating-characters"
    },
    {
        "_id": "rotate-function",
        "title_cn": "旋转函数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "396",
        "title_slug": "rotate-function"
    },
    {
        "_id": "integer-replacement",
        "title_cn": "整数替换",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.3%",
        "frontend_id": "397",
        "title_slug": "integer-replacement"
    },
    {
        "_id": "random-pick-index",
        "title_cn": "随机数索引",
        "difficulty": 2,
        "tags_q": [
            "reservoir-sampling",
            "hash-table",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "398",
        "title_slug": "random-pick-index"
    },
    {
        "_id": "evaluate-division",
        "title_cn": "除法求值",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "array",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "58.7%",
        "frontend_id": "399",
        "title_slug": "evaluate-division"
    },
    {
        "_id": "nth-digit",
        "title_cn": "第 N 位数字",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "400",
        "title_slug": "nth-digit"
    },
    {
        "_id": "binary-watch",
        "title_cn": "二进制手表",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "62.8%",
        "frontend_id": "401",
        "title_slug": "binary-watch"
    },
    {
        "_id": "remove-k-digits",
        "title_cn": "移掉 K 位数字",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "31.9%",
        "frontend_id": "402",
        "title_slug": "remove-k-digits"
    },
    {
        "_id": "frog-jump",
        "title_cn": "青蛙过河",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "403",
        "title_slug": "frog-jump"
    },
    {
        "_id": "sum-of-left-leaves",
        "title_cn": "左叶子之和",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.7%",
        "frontend_id": "404",
        "title_slug": "sum-of-left-leaves"
    },
    {
        "_id": "convert-a-number-to-hexadecimal",
        "title_cn": "数字转换为十六进制数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "405",
        "title_slug": "convert-a-number-to-hexadecimal"
    },
    {
        "_id": "queue-reconstruction-by-height",
        "title_cn": "根据身高重建队列",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "76.4%",
        "frontend_id": "406",
        "title_slug": "queue-reconstruction-by-height"
    },
    {
        "_id": "valid-word-abbreviation",
        "title_cn": "有效单词缩写",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "36.1%",
        "frontend_id": "408",
        "title_slug": "valid-word-abbreviation"
    },
    {
        "_id": "longest-palindrome",
        "title_cn": "最长回文串",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.7%",
        "frontend_id": "409",
        "title_slug": "longest-palindrome"
    },
    {
        "_id": "split-array-largest-sum",
        "title_cn": "分割数组的最大值",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "410",
        "title_slug": "split-array-largest-sum"
    },
    {
        "_id": "minimum-unique-word-abbreviation",
        "title_cn": "最短独占单词缩写",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "49.5%",
        "frontend_id": "411",
        "title_slug": "minimum-unique-word-abbreviation"
    },
    {
        "_id": "fizz-buzz",
        "title_cn": "Fizz Buzz",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "412",
        "title_slug": "fizz-buzz"
    },
    {
        "_id": "arithmetic-slices",
        "title_cn": "等差数列划分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "413",
        "title_slug": "arithmetic-slices"
    },
    {
        "_id": "third-maximum-number",
        "title_cn": "第三大的数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "414",
        "title_slug": "third-maximum-number"
    },
    {
        "_id": "add-strings",
        "title_cn": "字符串相加",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "415",
        "title_slug": "add-strings"
    },
    {
        "_id": "partition-equal-subset-sum",
        "title_cn": "分割等和子集",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "416",
        "title_slug": "partition-equal-subset-sum"
    },
    {
        "_id": "pacific-atlantic-water-flow",
        "title_cn": "太平洋大西洋水流问题",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "56.2%",
        "frontend_id": "417",
        "title_slug": "pacific-atlantic-water-flow"
    },
    {
        "_id": "sentence-screen-fitting",
        "title_cn": "屏幕可显示句子的数量",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "39.3%",
        "frontend_id": "418",
        "title_slug": "sentence-screen-fitting"
    },
    {
        "_id": "battleships-in-a-board",
        "title_cn": "甲板上的战舰",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "77.8%",
        "frontend_id": "419",
        "title_slug": "battleships-in-a-board"
    },
    {
        "_id": "strong-password-checker",
        "title_cn": "强密码检验器",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "string",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "38.8%",
        "frontend_id": "420",
        "title_slug": "strong-password-checker"
    },
    {
        "_id": "valid-word-square",
        "title_cn": "有效的单词方块",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "44.5%",
        "frontend_id": "422",
        "title_slug": "valid-word-square"
    },
    {
        "_id": "reconstruct-original-digits-from-english",
        "title_cn": "从英文中重建数字",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "60.6%",
        "frontend_id": "423",
        "title_slug": "reconstruct-original-digits-from-english"
    },
    {
        "_id": "longest-repeating-character-replacement",
        "title_cn": "替换后的最长重复字符",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "424",
        "title_slug": "longest-repeating-character-replacement"
    },
    {
        "_id": "word-squares",
        "title_cn": "单词方块",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "62.5%",
        "frontend_id": "425",
        "title_slug": "word-squares"
    },
    {
        "_id": "all-oone-data-structure",
        "title_cn": "全 O(1) 的数据结构",
        "difficulty": 3,
        "tags_q": [
            "design",
            "hash-table",
            "linked-list",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "432",
        "title_slug": "all-oone-data-structure"
    },
    {
        "_id": "minimum-genetic-mutation",
        "title_cn": "最小基因变化",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "433",
        "title_slug": "minimum-genetic-mutation"
    },
    {
        "_id": "number-of-segments-in-a-string",
        "title_cn": "字符串中的单词数",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "434",
        "title_slug": "number-of-segments-in-a-string"
    },
    {
        "_id": "non-overlapping-intervals",
        "title_cn": "无重叠区间",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "435",
        "title_slug": "non-overlapping-intervals"
    },
    {
        "_id": "find-right-interval",
        "title_cn": "寻找右区间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.0%",
        "frontend_id": "436",
        "title_slug": "find-right-interval"
    },
    {
        "_id": "path-sum-iii",
        "title_cn": "路径总和 III",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.1%",
        "frontend_id": "437",
        "title_slug": "path-sum-iii"
    },
    {
        "_id": "find-all-anagrams-in-a-string",
        "title_cn": "找到字符串中所有字母异位词",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "438",
        "title_slug": "find-all-anagrams-in-a-string"
    },
    {
        "_id": "ternary-expression-parser",
        "title_cn": "三元表达式解析器",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "62.1%",
        "frontend_id": "439",
        "title_slug": "ternary-expression-parser"
    },
    {
        "_id": "k-th-smallest-in-lexicographical-order",
        "title_cn": "字典序的第K小数字",
        "difficulty": 3,
        "tags_q": [
            "trie"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "440",
        "title_slug": "k-th-smallest-in-lexicographical-order"
    },
    {
        "_id": "arranging-coins",
        "title_cn": "排列硬币",
        "difficulty": 1,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "45.1%",
        "frontend_id": "441",
        "title_slug": "arranging-coins"
    },
    {
        "_id": "find-all-duplicates-in-an-array",
        "title_cn": "数组中重复的数据",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "75.1%",
        "frontend_id": "442",
        "title_slug": "find-all-duplicates-in-an-array"
    },
    {
        "_id": "string-compression",
        "title_cn": "压缩字符串",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "443",
        "title_slug": "string-compression"
    },
    {
        "_id": "sequence-reconstruction",
        "title_cn": "序列重建",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "32.4%",
        "frontend_id": "444",
        "title_slug": "sequence-reconstruction"
    },
    {
        "_id": "add-two-numbers-ii",
        "title_cn": "两数相加 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "445",
        "title_slug": "add-two-numbers-ii"
    },
    {
        "_id": "arithmetic-slices-ii-subsequence",
        "title_cn": "等差数列划分 II - 子序列",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "446",
        "title_slug": "arithmetic-slices-ii-subsequence"
    },
    {
        "_id": "number-of-boomerangs",
        "title_cn": "回旋镖的数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "68.2%",
        "frontend_id": "447",
        "title_slug": "number-of-boomerangs"
    },
    {
        "_id": "find-all-numbers-disappeared-in-an-array",
        "title_cn": "找到所有数组中消失的数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "65.8%",
        "frontend_id": "448",
        "title_slug": "find-all-numbers-disappeared-in-an-array"
    },
    {
        "_id": "serialize-and-deserialize-bst",
        "title_cn": "序列化和反序列化二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "binary-search-tree",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "449",
        "title_slug": "serialize-and-deserialize-bst"
    },
    {
        "_id": "delete-node-in-a-bst",
        "title_cn": "删除二叉搜索树中的节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "52.3%",
        "frontend_id": "450",
        "title_slug": "delete-node-in-a-bst"
    },
    {
        "_id": "sort-characters-by-frequency",
        "title_cn": "根据字符出现频率排序",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "bucket-sort",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "72.1%",
        "frontend_id": "451",
        "title_slug": "sort-characters-by-frequency"
    },
    {
        "_id": "minimum-number-of-arrows-to-burst-balloons",
        "title_cn": "用最少数量的箭引爆气球",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "452",
        "title_slug": "minimum-number-of-arrows-to-burst-balloons"
    },
    {
        "_id": "minimum-moves-to-equal-array-elements",
        "title_cn": "最小操作次数使数组元素相等",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "453",
        "title_slug": "minimum-moves-to-equal-array-elements"
    },
    {
        "_id": "4sum-ii",
        "title_cn": "四数相加 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "64.4%",
        "frontend_id": "454",
        "title_slug": "4sum-ii"
    },
    {
        "_id": "assign-cookies",
        "title_cn": "分发饼干",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.2%",
        "frontend_id": "455",
        "title_slug": "assign-cookies"
    },
    {
        "_id": "132-pattern",
        "title_cn": "132 模式",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "binary-search",
            "ordered-set",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "456",
        "title_slug": "132-pattern"
    },
    {
        "_id": "circular-array-loop",
        "title_cn": "环形数组是否存在循环",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "43.4%",
        "frontend_id": "457",
        "title_slug": "circular-array-loop"
    },
    {
        "_id": "poor-pigs",
        "title_cn": "可怜的小猪",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "458",
        "title_slug": "poor-pigs"
    },
    {
        "_id": "repeated-substring-pattern",
        "title_cn": "重复的子字符串",
        "difficulty": 1,
        "tags_q": [
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "51.4%",
        "frontend_id": "459",
        "title_slug": "repeated-substring-pattern"
    },
    {
        "_id": "lfu-cache",
        "title_cn": "LFU 缓存",
        "difficulty": 3,
        "tags_q": [
            "design",
            "hash-table",
            "linked-list",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "460",
        "title_slug": "lfu-cache"
    },
    {
        "_id": "hamming-distance",
        "title_cn": "汉明距离",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "81.8%",
        "frontend_id": "461",
        "title_slug": "hamming-distance"
    },
    {
        "_id": "minimum-moves-to-equal-array-elements-ii",
        "title_cn": "最小操作次数使数组元素相等 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "62.5%",
        "frontend_id": "462",
        "title_slug": "minimum-moves-to-equal-array-elements-ii"
    },
    {
        "_id": "island-perimeter",
        "title_cn": "岛屿的周长",
        "difficulty": 1,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "70.1%",
        "frontend_id": "463",
        "title_slug": "island-perimeter"
    },
    {
        "_id": "can-i-win",
        "title_cn": "我能赢吗",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "math",
            "dynamic-programming",
            "bitmask",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "40.8%",
        "frontend_id": "464",
        "title_slug": "can-i-win"
    },
    {
        "_id": "optimal-account-balancing",
        "title_cn": "最优账单平衡",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "54.9%",
        "frontend_id": "465",
        "title_slug": "optimal-account-balancing"
    },
    {
        "_id": "count-the-repetitions",
        "title_cn": "统计重复个数",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "41.7%",
        "frontend_id": "466",
        "title_slug": "count-the-repetitions"
    },
    {
        "_id": "unique-substrings-in-wraparound-string",
        "title_cn": "环绕字符串中唯一的子字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "467",
        "title_slug": "unique-substrings-in-wraparound-string"
    },
    {
        "_id": "validate-ip-address",
        "title_cn": "验证IP地址",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "28.2%",
        "frontend_id": "468",
        "title_slug": "validate-ip-address"
    },
    {
        "_id": "encode-string-with-shortest-length",
        "title_cn": "编码最短长度的字符串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "58.9%",
        "frontend_id": "471",
        "title_slug": "encode-string-with-shortest-length"
    },
    {
        "_id": "concatenated-words",
        "title_cn": "连接词",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "trie",
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "472",
        "title_slug": "concatenated-words"
    },
    {
        "_id": "matchsticks-to-square",
        "title_cn": "火柴拼正方形",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "473",
        "title_slug": "matchsticks-to-square"
    },
    {
        "_id": "ones-and-zeroes",
        "title_cn": "一和零",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "474",
        "title_slug": "ones-and-zeroes"
    },
    {
        "_id": "heaters",
        "title_cn": "供暖器",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "475",
        "title_slug": "heaters"
    },
    {
        "_id": "number-complement",
        "title_cn": "数字的补数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "476",
        "title_slug": "number-complement"
    },
    {
        "_id": "total-hamming-distance",
        "title_cn": "汉明距离总和",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.6%",
        "frontend_id": "477",
        "title_slug": "total-hamming-distance"
    },
    {
        "_id": "largest-palindrome-product",
        "title_cn": "最大回文数乘积",
        "difficulty": 3,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "479",
        "title_slug": "largest-palindrome-product"
    },
    {
        "_id": "magical-string",
        "title_cn": "神奇字符串",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.9%",
        "frontend_id": "481",
        "title_slug": "magical-string"
    },
    {
        "_id": "license-key-formatting",
        "title_cn": "密钥格式化",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "482",
        "title_slug": "license-key-formatting"
    },
    {
        "_id": "smallest-good-base",
        "title_cn": "最小好进制",
        "difficulty": 3,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "58.7%",
        "frontend_id": "483",
        "title_slug": "smallest-good-base"
    },
    {
        "_id": "find-permutation",
        "title_cn": "寻找排列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "60.1%",
        "frontend_id": "484",
        "title_slug": "find-permutation"
    },
    {
        "_id": "max-consecutive-ones",
        "title_cn": "最大连续 1 的个数",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "485",
        "title_slug": "max-consecutive-ones"
    },
    {
        "_id": "max-consecutive-ones-ii",
        "title_cn": "最大连续1的个数 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "57.1%",
        "frontend_id": "487",
        "title_slug": "max-consecutive-ones-ii"
    },
    {
        "_id": "zuma-game",
        "title_cn": "祖玛游戏",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "breadth-first-search",
            "memoization",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "488",
        "title_slug": "zuma-game"
    },
    {
        "_id": "kth-smallest-instructions",
        "title_cn": "第 K 条最小指令",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "48.9%",
        "frontend_id": "1643",
        "title_slug": "kth-smallest-instructions"
    },
    {
        "_id": "the-maze",
        "title_cn": "迷宫",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "51.3%",
        "frontend_id": "490",
        "title_slug": "the-maze"
    },
    {
        "_id": "non-decreasing-subsequences",
        "title_cn": "非递减子序列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "491",
        "title_slug": "non-decreasing-subsequences"
    },
    {
        "_id": "construct-the-rectangle",
        "title_cn": "构造矩形",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "492",
        "title_slug": "construct-the-rectangle"
    },
    {
        "_id": "reverse-pairs",
        "title_cn": "翻转对",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "493",
        "title_slug": "reverse-pairs"
    },
    {
        "_id": "target-sum",
        "title_cn": "目标和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "494",
        "title_slug": "target-sum"
    },
    {
        "_id": "teemo-attacking",
        "title_cn": "提莫攻击",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "59.4%",
        "frontend_id": "495",
        "title_slug": "teemo-attacking"
    },
    {
        "_id": "next-greater-element-i",
        "title_cn": "下一个更大元素 I",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "array",
            "hash-table",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "496",
        "title_slug": "next-greater-element-i"
    },
    {
        "_id": "diagonal-traverse",
        "title_cn": "对角线遍历",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "498",
        "title_slug": "diagonal-traverse"
    },
    {
        "_id": "the-maze-iii",
        "title_cn": "迷宫 III",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "array",
            "string",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "44.7%",
        "frontend_id": "499",
        "title_slug": "the-maze-iii"
    },
    {
        "_id": "keyboard-row",
        "title_cn": "键盘行",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.9%",
        "frontend_id": "500",
        "title_slug": "keyboard-row"
    },
    {
        "_id": "find-mode-in-binary-search-tree",
        "title_cn": "二叉搜索树中的众数",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "55.1%",
        "frontend_id": "501",
        "title_slug": "find-mode-in-binary-search-tree"
    },
    {
        "_id": "ipo",
        "title_cn": "IPO",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.2%",
        "frontend_id": "502",
        "title_slug": "ipo"
    },
    {
        "_id": "next-greater-element-ii",
        "title_cn": "下一个更大元素 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "67.3%",
        "frontend_id": "503",
        "title_slug": "next-greater-element-ii"
    },
    {
        "_id": "base-7",
        "title_cn": "七进制数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "504",
        "title_slug": "base-7"
    },
    {
        "_id": "the-maze-ii",
        "title_cn": "迷宫 II",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "array",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "51.9%",
        "frontend_id": "505",
        "title_slug": "the-maze-ii"
    },
    {
        "_id": "relative-ranks",
        "title_cn": "相对名次",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "506",
        "title_slug": "relative-ranks"
    },
    {
        "_id": "perfect-number",
        "title_cn": "完美数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "507",
        "title_slug": "perfect-number"
    },
    {
        "_id": "most-frequent-subtree-sum",
        "title_cn": "出现次数最多的子树元素和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "75.6%",
        "frontend_id": "508",
        "title_slug": "most-frequent-subtree-sum"
    },
    {
        "_id": "inorder-successor-in-bst-ii",
        "title_cn": "二叉搜索树中的中序后继 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "60.8%",
        "frontend_id": "510",
        "title_slug": "inorder-successor-in-bst-ii"
    },
    {
        "_id": "count-subarrays-with-more-ones-than-zeros",
        "title_cn": "1 比 0 多的子数组个数",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": true,
        "ac_rate": "54.0%",
        "frontend_id": "2031",
        "title_slug": "count-subarrays-with-more-ones-than-zeros"
    },
    {
        "_id": "all-paths-from-source-lead-to-destination",
        "title_cn": "从始点到终点的所有路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "graph"
        ],
        "paid_only": true,
        "ac_rate": "35.2%",
        "frontend_id": "1059",
        "title_slug": "all-paths-from-source-lead-to-destination"
    },
    {
        "_id": "maximum-alternating-subarray-sum",
        "title_cn": "最大交替子数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "41.9%",
        "frontend_id": "2036",
        "title_slug": "maximum-alternating-subarray-sum"
    },
    {
        "_id": "find-bottom-left-tree-value",
        "title_cn": "找树左下角的值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "513",
        "title_slug": "find-bottom-left-tree-value"
    },
    {
        "_id": "freedom-trail",
        "title_cn": "自由之路",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "514",
        "title_slug": "freedom-trail"
    },
    {
        "_id": "find-largest-value-in-each-tree-row",
        "title_cn": "在每个树行中找最大值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "515",
        "title_slug": "find-largest-value-in-each-tree-row"
    },
    {
        "_id": "longest-palindromic-subsequence",
        "title_cn": "最长回文子序列",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "516",
        "title_slug": "longest-palindromic-subsequence"
    },
    {
        "_id": "super-washing-machines",
        "title_cn": "超级洗衣机",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "517",
        "title_slug": "super-washing-machines"
    },
    {
        "_id": "coin-change-ii",
        "title_cn": "零钱兑换 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "71.3%",
        "frontend_id": "518",
        "title_slug": "coin-change-ii"
    },
    {
        "_id": "widest-pair-of-indices-with-equal-range-sum",
        "title_cn": "范围和相等的最宽索引对",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "50.1%",
        "frontend_id": "1983",
        "title_slug": "widest-pair-of-indices-with-equal-range-sum"
    },
    {
        "_id": "detect-capital",
        "title_cn": "检测大写字母",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "520",
        "title_slug": "detect-capital"
    },
    {
        "_id": "longest-uncommon-subsequence-i",
        "title_cn": "最长特殊序列 Ⅰ",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "521",
        "title_slug": "longest-uncommon-subsequence-i"
    },
    {
        "_id": "longest-uncommon-subsequence-ii",
        "title_cn": "最长特殊序列 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.9%",
        "frontend_id": "522",
        "title_slug": "longest-uncommon-subsequence-ii"
    },
    {
        "_id": "continuous-subarray-sum",
        "title_cn": "连续的子数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "28.8%",
        "frontend_id": "523",
        "title_slug": "continuous-subarray-sum"
    },
    {
        "_id": "longest-word-in-dictionary-through-deleting",
        "title_cn": "通过删除字母匹配到字典里最长单词",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "524",
        "title_slug": "longest-word-in-dictionary-through-deleting"
    },
    {
        "_id": "contiguous-array",
        "title_cn": "连续数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "54.6%",
        "frontend_id": "525",
        "title_slug": "contiguous-array"
    },
    {
        "_id": "beautiful-arrangement",
        "title_cn": "优美的排列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "526",
        "title_slug": "beautiful-arrangement"
    },
    {
        "_id": "word-abbreviation",
        "title_cn": "单词缩写",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "trie",
            "array",
            "string",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "60.2%",
        "frontend_id": "527",
        "title_slug": "word-abbreviation"
    },
    {
        "_id": "swapping-nodes-in-a-linked-list",
        "title_cn": "交换链表中的节点",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "1721",
        "title_slug": "swapping-nodes-in-a-linked-list"
    },
    {
        "_id": "minesweeper",
        "title_cn": "扫雷游戏",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.9%",
        "frontend_id": "529",
        "title_slug": "minesweeper"
    },
    {
        "_id": "minimum-absolute-difference-in-bst",
        "title_cn": "二叉搜索树的最小绝对差",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "530",
        "title_slug": "minimum-absolute-difference-in-bst"
    },
    {
        "_id": "lonely-pixel-i",
        "title_cn": "孤独像素 I",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "64.2%",
        "frontend_id": "531",
        "title_slug": "lonely-pixel-i"
    },
    {
        "_id": "k-diff-pairs-in-an-array",
        "title_cn": "数组中的 k-diff 数对",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "532",
        "title_slug": "k-diff-pairs-in-an-array"
    },
    {
        "_id": "lonely-pixel-ii",
        "title_cn": "孤独像素 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "52.4%",
        "frontend_id": "533",
        "title_slug": "lonely-pixel-ii"
    },
    {
        "_id": "encode-and-decode-tinyurl",
        "title_cn": "TinyURL 的加密与解密",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "string",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "87.4%",
        "frontend_id": "535",
        "title_slug": "encode-and-decode-tinyurl"
    },
    {
        "_id": "construct-binary-tree-from-string",
        "title_cn": "从字符串生成二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "55.6%",
        "frontend_id": "536",
        "title_slug": "construct-binary-tree-from-string"
    },
    {
        "_id": "complex-number-multiplication",
        "title_cn": "复数乘法",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "74.3%",
        "frontend_id": "537",
        "title_slug": "complex-number-multiplication"
    },
    {
        "_id": "convert-bst-to-greater-tree",
        "title_cn": "把二叉搜索树转换为累加树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "77.3%",
        "frontend_id": "538",
        "title_slug": "convert-bst-to-greater-tree"
    },
    {
        "_id": "minimum-time-difference",
        "title_cn": "最小时间差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "539",
        "title_slug": "minimum-time-difference"
    },
    {
        "_id": "single-element-in-a-sorted-array",
        "title_cn": "有序数组中的单一元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "540",
        "title_slug": "single-element-in-a-sorted-array"
    },
    {
        "_id": "reverse-string-ii",
        "title_cn": "反转字符串 II",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "541",
        "title_slug": "reverse-string-ii"
    },
    {
        "_id": "01-matrix",
        "title_cn": "01 矩阵",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "542",
        "title_slug": "01-matrix"
    },
    {
        "_id": "diameter-of-binary-tree",
        "title_cn": "二叉树的直径",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "543",
        "title_slug": "diameter-of-binary-tree"
    },
    {
        "_id": "output-contest-matches",
        "title_cn": "输出比赛匹配对",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "string",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "72.3%",
        "frontend_id": "544",
        "title_slug": "output-contest-matches"
    },
    {
        "_id": "boundary-of-binary-tree",
        "title_cn": "二叉树的边界",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "46.0%",
        "frontend_id": "545",
        "title_slug": "boundary-of-binary-tree"
    },
    {
        "_id": "remove-boxes",
        "title_cn": "移除盒子",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "546",
        "title_slug": "remove-boxes"
    },
    {
        "_id": "number-of-provinces",
        "title_cn": "省份数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "62.2%",
        "frontend_id": "547",
        "title_slug": "number-of-provinces"
    },
    {
        "_id": "split-array-with-equal-sum",
        "title_cn": "将数组分割成和相等的子数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "39.2%",
        "frontend_id": "548",
        "title_slug": "split-array-with-equal-sum"
    },
    {
        "_id": "binary-tree-longest-consecutive-sequence-ii",
        "title_cn": "二叉树最长连续序列 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "49.9%",
        "frontend_id": "549",
        "title_slug": "binary-tree-longest-consecutive-sequence-ii"
    },
    {
        "_id": "shortest-path-to-get-food",
        "title_cn": "获取食物的最短路径",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "53.3%",
        "frontend_id": "1730",
        "title_slug": "shortest-path-to-get-food"
    },
    {
        "_id": "student-attendance-record-i",
        "title_cn": "学生出勤记录 I",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "551",
        "title_slug": "student-attendance-record-i"
    },
    {
        "_id": "student-attendance-record-ii",
        "title_cn": "学生出勤记录 II",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.0%",
        "frontend_id": "552",
        "title_slug": "student-attendance-record-ii"
    },
    {
        "_id": "optimal-division",
        "title_cn": "最优除法",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.8%",
        "frontend_id": "553",
        "title_slug": "optimal-division"
    },
    {
        "_id": "brick-wall",
        "title_cn": "砖墙",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "554",
        "title_slug": "brick-wall"
    },
    {
        "_id": "split-concatenated-strings",
        "title_cn": "分割连接字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "37.6%",
        "frontend_id": "555",
        "title_slug": "split-concatenated-strings"
    },
    {
        "_id": "next-greater-element-iii",
        "title_cn": "下一个更大元素 III",
        "difficulty": 2,
        "tags_q": [
            "math",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "36.9%",
        "frontend_id": "556",
        "title_slug": "next-greater-element-iii"
    },
    {
        "_id": "reverse-words-in-a-string-iii",
        "title_cn": "反转字符串中的单词 III",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "557",
        "title_slug": "reverse-words-in-a-string-iii"
    },
    {
        "_id": "subarray-sum-equals-k",
        "title_cn": "和为 K 的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "44.1%",
        "frontend_id": "560",
        "title_slug": "subarray-sum-equals-k"
    },
    {
        "_id": "array-partition",
        "title_cn": "数组拆分",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "counting-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.4%",
        "frontend_id": "561",
        "title_slug": "array-partition"
    },
    {
        "_id": "longest-line-of-consecutive-one-in-matrix",
        "title_cn": "矩阵中最长的连续1线段",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "49.9%",
        "frontend_id": "562",
        "title_slug": "longest-line-of-consecutive-one-in-matrix"
    },
    {
        "_id": "find-the-closest-palindrome",
        "title_cn": "寻找最近的回文数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "30.4%",
        "frontend_id": "564",
        "title_slug": "find-the-closest-palindrome"
    },
    {
        "_id": "array-nesting",
        "title_cn": "数组嵌套",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "565",
        "title_slug": "array-nesting"
    },
    {
        "_id": "reshape-the-matrix",
        "title_cn": "重塑矩阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "566",
        "title_slug": "reshape-the-matrix"
    },
    {
        "_id": "permutation-in-string",
        "title_cn": "字符串的排列",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "two-pointers",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.9%",
        "frontend_id": "567",
        "title_slug": "permutation-in-string"
    },
    {
        "_id": "maximum-vacation-days",
        "title_cn": "最大休假天数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "55.8%",
        "frontend_id": "568",
        "title_slug": "maximum-vacation-days"
    },
    {
        "_id": "squirrel-simulation",
        "title_cn": "松鼠模拟",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "65.3%",
        "frontend_id": "573",
        "title_slug": "squirrel-simulation"
    },
    {
        "_id": "distribute-candies",
        "title_cn": "分糖果",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "575",
        "title_slug": "distribute-candies"
    },
    {
        "_id": "out-of-boundary-paths",
        "title_cn": "出界的路径数",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.0%",
        "frontend_id": "576",
        "title_slug": "out-of-boundary-paths"
    },
    {
        "_id": "shortest-unsorted-continuous-subarray",
        "title_cn": "最短无序连续子数组",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "two-pointers",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "581",
        "title_slug": "shortest-unsorted-continuous-subarray"
    },
    {
        "_id": "kill-process",
        "title_cn": "杀掉进程",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "47.1%",
        "frontend_id": "582",
        "title_slug": "kill-process"
    },
    {
        "_id": "delete-operation-for-two-strings",
        "title_cn": "两个字符串的删除操作",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.2%",
        "frontend_id": "583",
        "title_slug": "delete-operation-for-two-strings"
    },
    {
        "_id": "erect-the-fence",
        "title_cn": "安装栅栏",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.2%",
        "frontend_id": "587",
        "title_slug": "erect-the-fence"
    },
    {
        "_id": "design-in-memory-file-system",
        "title_cn": "设计内存文件系统",
        "difficulty": 3,
        "tags_q": [
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "43.8%",
        "frontend_id": "588",
        "title_slug": "design-in-memory-file-system"
    },
    {
        "_id": "tag-validator",
        "title_cn": "标签验证器",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.9%",
        "frontend_id": "591",
        "title_slug": "tag-validator"
    },
    {
        "_id": "fraction-addition-and-subtraction",
        "title_cn": "分数加减运算",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "59.8%",
        "frontend_id": "592",
        "title_slug": "fraction-addition-and-subtraction"
    },
    {
        "_id": "valid-square",
        "title_cn": "有效的正方形",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "593",
        "title_slug": "valid-square"
    },
    {
        "_id": "minimum-index-sum-of-two-lists",
        "title_cn": "两个列表的最小索引总和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "599",
        "title_slug": "minimum-index-sum-of-two-lists"
    },
    {
        "_id": "non-negative-integers-without-consecutive-ones",
        "title_cn": "不含连续1的非负整数",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "600",
        "title_slug": "non-negative-integers-without-consecutive-ones"
    },
    {
        "_id": "design-compressed-string-iterator",
        "title_cn": "迭代压缩字符串",
        "difficulty": 1,
        "tags_q": [
            "design",
            "array",
            "string",
            "iterator"
        ],
        "paid_only": true,
        "ac_rate": "39.4%",
        "frontend_id": "604",
        "title_slug": "design-compressed-string-iterator"
    },
    {
        "_id": "can-place-flowers",
        "title_cn": "种花问题",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "32.3%",
        "frontend_id": "605",
        "title_slug": "can-place-flowers"
    },
    {
        "_id": "construct-string-from-binary-tree",
        "title_cn": "根据二叉树创建字符串",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "606",
        "title_slug": "construct-string-from-binary-tree"
    },
    {
        "_id": "find-duplicate-file-in-system",
        "title_cn": "在系统中查找重复文件",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "609",
        "title_slug": "find-duplicate-file-in-system"
    },
    {
        "_id": "valid-triangle-number",
        "title_cn": "有效三角形的个数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "611",
        "title_slug": "valid-triangle-number"
    },
    {
        "_id": "add-bold-tag-in-string",
        "title_cn": "给字符串添加加粗标签",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "string-matching"
        ],
        "paid_only": true,
        "ac_rate": "50.6%",
        "frontend_id": "616",
        "title_slug": "add-bold-tag-in-string"
    },
    {
        "_id": "merge-two-binary-trees",
        "title_cn": "合并二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "79.3%",
        "frontend_id": "617",
        "title_slug": "merge-two-binary-trees"
    },
    {
        "_id": "task-scheduler",
        "title_cn": "任务调度器",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "621",
        "title_slug": "task-scheduler"
    },
    {
        "_id": "add-one-row-to-tree",
        "title_cn": "在二叉树中增加一行",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "623",
        "title_slug": "add-one-row-to-tree"
    },
    {
        "_id": "maximum-distance-in-arrays",
        "title_cn": "数组列表中的最大距离",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "40.1%",
        "frontend_id": "624",
        "title_slug": "maximum-distance-in-arrays"
    },
    {
        "_id": "minimum-factorization",
        "title_cn": "最小因式分解",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "34.6%",
        "frontend_id": "625",
        "title_slug": "minimum-factorization"
    },
    {
        "_id": "maximum-product-of-three-numbers",
        "title_cn": "三个数的最大乘积",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "628",
        "title_slug": "maximum-product-of-three-numbers"
    },
    {
        "_id": "k-inverse-pairs-array",
        "title_cn": "K 个逆序对数组",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "629",
        "title_slug": "k-inverse-pairs-array"
    },
    {
        "_id": "course-schedule-iii",
        "title_cn": "课程表 III",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "630",
        "title_slug": "course-schedule-iii"
    },
    {
        "_id": "design-excel-sum-formula",
        "title_cn": "设计 Excel 求和公式",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "design",
            "topological-sort",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "34.0%",
        "frontend_id": "631",
        "title_slug": "design-excel-sum-formula"
    },
    {
        "_id": "smallest-range-covering-elements-from-k-lists",
        "title_cn": "最小区间",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting",
            "sliding-window",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "632",
        "title_slug": "smallest-range-covering-elements-from-k-lists"
    },
    {
        "_id": "sum-of-square-numbers",
        "title_cn": "平方数之和",
        "difficulty": 2,
        "tags_q": [
            "math",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "38.0%",
        "frontend_id": "633",
        "title_slug": "sum-of-square-numbers"
    },
    {
        "_id": "find-the-derangement-of-an-array",
        "title_cn": "寻找数组的错位排列",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "46.6%",
        "frontend_id": "634",
        "title_slug": "find-the-derangement-of-an-array"
    },
    {
        "_id": "design-log-storage-system",
        "title_cn": "设计日志存储系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "string",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "55.8%",
        "frontend_id": "635",
        "title_slug": "design-log-storage-system"
    },
    {
        "_id": "exclusive-time-of-functions",
        "title_cn": "函数的独占时间",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "636",
        "title_slug": "exclusive-time-of-functions"
    },
    {
        "_id": "average-of-levels-in-binary-tree",
        "title_cn": "二叉树的层平均值",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "637",
        "title_slug": "average-of-levels-in-binary-tree"
    },
    {
        "_id": "shopping-offers",
        "title_cn": "大礼包",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "62.2%",
        "frontend_id": "638",
        "title_slug": "shopping-offers"
    },
    {
        "_id": "decode-ways-ii",
        "title_cn": "解码方法 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "639",
        "title_slug": "decode-ways-ii"
    },
    {
        "_id": "solve-the-equation",
        "title_cn": "求解方程",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "640",
        "title_slug": "solve-the-equation"
    },
    {
        "_id": "design-search-autocomplete-system",
        "title_cn": "设计搜索自动补全系统",
        "difficulty": 3,
        "tags_q": [
            "design",
            "trie",
            "string",
            "data-stream"
        ],
        "paid_only": true,
        "ac_rate": "56.0%",
        "frontend_id": "642",
        "title_slug": "design-search-autocomplete-system"
    },
    {
        "_id": "maximum-average-subarray-i",
        "title_cn": "子数组最大平均数 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "643",
        "title_slug": "maximum-average-subarray-i"
    },
    {
        "_id": "maximum-average-subarray-ii",
        "title_cn": "子数组最大平均数 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "45.4%",
        "frontend_id": "644",
        "title_slug": "maximum-average-subarray-ii"
    },
    {
        "_id": "set-mismatch",
        "title_cn": "错误的集合",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "39.1%",
        "frontend_id": "645",
        "title_slug": "set-mismatch"
    },
    {
        "_id": "maximum-length-of-pair-chain",
        "title_cn": "最长数对链",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "646",
        "title_slug": "maximum-length-of-pair-chain"
    },
    {
        "_id": "palindromic-substrings",
        "title_cn": "回文子串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.2%",
        "frontend_id": "647",
        "title_slug": "palindromic-substrings"
    },
    {
        "_id": "replace-words",
        "title_cn": "单词替换",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "648",
        "title_slug": "replace-words"
    },
    {
        "_id": "dota2-senate",
        "title_cn": "Dota2 参议院",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "queue",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "649",
        "title_slug": "dota2-senate"
    },
    {
        "_id": "2-keys-keyboard",
        "title_cn": "两个键的键盘",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.8%",
        "frontend_id": "650",
        "title_slug": "2-keys-keyboard"
    },
    {
        "_id": "4-keys-keyboard",
        "title_cn": "四个键的键盘",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "60.6%",
        "frontend_id": "651",
        "title_slug": "4-keys-keyboard"
    },
    {
        "_id": "find-duplicate-subtrees",
        "title_cn": "寻找重复的子树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "652",
        "title_slug": "find-duplicate-subtrees"
    },
    {
        "_id": "two-sum-iv-input-is-a-bst",
        "title_cn": "两数之和 IV - 输入二叉搜索树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-search-tree",
            "hash-table",
            "two-pointers",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "653",
        "title_slug": "two-sum-iv-input-is-a-bst"
    },
    {
        "_id": "maximum-binary-tree",
        "title_cn": "最大二叉树",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "array",
            "divide-and-conquer",
            "binary-tree",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "82.1%",
        "frontend_id": "654",
        "title_slug": "maximum-binary-tree"
    },
    {
        "_id": "print-binary-tree",
        "title_cn": "输出二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "69.8%",
        "frontend_id": "655",
        "title_slug": "print-binary-tree"
    },
    {
        "_id": "coin-path",
        "title_cn": "金币路径",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "34.5%",
        "frontend_id": "656",
        "title_slug": "coin-path"
    },
    {
        "_id": "robot-return-to-origin",
        "title_cn": "机器人能否返回原点",
        "difficulty": 1,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.3%",
        "frontend_id": "657",
        "title_slug": "robot-return-to-origin"
    },
    {
        "_id": "find-k-closest-elements",
        "title_cn": "找到 K 个最接近的元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting",
            "sliding-window",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "658",
        "title_slug": "find-k-closest-elements"
    },
    {
        "_id": "split-array-into-consecutive-subsequences",
        "title_cn": "分割数组为连续子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.1%",
        "frontend_id": "659",
        "title_slug": "split-array-into-consecutive-subsequences"
    },
    {
        "_id": "remove-9",
        "title_cn": "移除 9",
        "difficulty": 3,
        "tags_q": [
            "math"
        ],
        "paid_only": true,
        "ac_rate": "63.7%",
        "frontend_id": "660",
        "title_slug": "remove-9"
    },
    {
        "_id": "image-smoother",
        "title_cn": "图片平滑器",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "661",
        "title_slug": "image-smoother"
    },
    {
        "_id": "maximum-width-of-binary-tree",
        "title_cn": "二叉树最大宽度",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "662",
        "title_slug": "maximum-width-of-binary-tree"
    },
    {
        "_id": "equal-tree-partition",
        "title_cn": "均匀树划分",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "45.8%",
        "frontend_id": "663",
        "title_slug": "equal-tree-partition"
    },
    {
        "_id": "strange-printer",
        "title_cn": "奇怪的打印机",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "664",
        "title_slug": "strange-printer"
    },
    {
        "_id": "non-decreasing-array",
        "title_cn": "非递减数列",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "27.9%",
        "frontend_id": "665",
        "title_slug": "non-decreasing-array"
    },
    {
        "_id": "path-sum-iv",
        "title_cn": "路径总和 IV",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "62.4%",
        "frontend_id": "666",
        "title_slug": "path-sum-iv"
    },
    {
        "_id": "beautiful-arrangement-ii",
        "title_cn": "优美的排列 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "667",
        "title_slug": "beautiful-arrangement-ii"
    },
    {
        "_id": "kth-smallest-number-in-multiplication-table",
        "title_cn": "乘法表中第k小的数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "58.7%",
        "frontend_id": "668",
        "title_slug": "kth-smallest-number-in-multiplication-table"
    },
    {
        "_id": "trim-a-binary-search-tree",
        "title_cn": "修剪二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "669",
        "title_slug": "trim-a-binary-search-tree"
    },
    {
        "_id": "maximum-swap",
        "title_cn": "最大交换",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "670",
        "title_slug": "maximum-swap"
    },
    {
        "_id": "second-minimum-node-in-a-binary-tree",
        "title_cn": "二叉树中第二小的节点",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "671",
        "title_slug": "second-minimum-node-in-a-binary-tree"
    },
    {
        "_id": "bulb-switcher-ii",
        "title_cn": "灯泡开关 Ⅱ",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "depth-first-search",
            "breadth-first-search",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.8%",
        "frontend_id": "672",
        "title_slug": "bulb-switcher-ii"
    },
    {
        "_id": "number-of-longest-increasing-subsequence",
        "title_cn": "最长递增子序列的个数",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "673",
        "title_slug": "number-of-longest-increasing-subsequence"
    },
    {
        "_id": "longest-continuous-increasing-subsequence",
        "title_cn": "最长连续递增序列",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "56.9%",
        "frontend_id": "674",
        "title_slug": "longest-continuous-increasing-subsequence"
    },
    {
        "_id": "cut-off-trees-for-golf-event",
        "title_cn": "为高尔夫比赛砍树",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "675",
        "title_slug": "cut-off-trees-for-golf-event"
    },
    {
        "_id": "implement-magic-dictionary",
        "title_cn": "实现一个魔法字典",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "676",
        "title_slug": "implement-magic-dictionary"
    },
    {
        "_id": "map-sum-pairs",
        "title_cn": "键值映射",
        "difficulty": 2,
        "tags_q": [
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "677",
        "title_slug": "map-sum-pairs"
    },
    {
        "_id": "valid-parenthesis-string",
        "title_cn": "有效的括号字符串",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.4%",
        "frontend_id": "678",
        "title_slug": "valid-parenthesis-string"
    },
    {
        "_id": "24-game",
        "title_cn": "24 点游戏",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "53.8%",
        "frontend_id": "679",
        "title_slug": "24-game"
    },
    {
        "_id": "valid-palindrome-ii",
        "title_cn": "验证回文串 II",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "680",
        "title_slug": "valid-palindrome-ii"
    },
    {
        "_id": "next-closest-time",
        "title_cn": "最近时刻",
        "difficulty": 2,
        "tags_q": [
            "string",
            "enumeration"
        ],
        "paid_only": true,
        "ac_rate": "49.8%",
        "frontend_id": "681",
        "title_slug": "next-closest-time"
    },
    {
        "_id": "k-empty-slots",
        "title_cn": "K 个关闭的灯泡",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "ordered-set",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "46.7%",
        "frontend_id": "683",
        "title_slug": "k-empty-slots"
    },
    {
        "_id": "redundant-connection",
        "title_cn": "冗余连接",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "684",
        "title_slug": "redundant-connection"
    },
    {
        "_id": "redundant-connection-ii",
        "title_cn": "冗余连接 II",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "42.2%",
        "frontend_id": "685",
        "title_slug": "redundant-connection-ii"
    },
    {
        "_id": "repeated-string-match",
        "title_cn": "重复叠加字符串匹配",
        "difficulty": 2,
        "tags_q": [
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "686",
        "title_slug": "repeated-string-match"
    },
    {
        "_id": "longest-univalue-path",
        "title_cn": "最长同值路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "687",
        "title_slug": "longest-univalue-path"
    },
    {
        "_id": "knight-probability-in-chessboard",
        "title_cn": "骑士在棋盘上的概率",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.0%",
        "frontend_id": "688",
        "title_slug": "knight-probability-in-chessboard"
    },
    {
        "_id": "maximum-sum-of-3-non-overlapping-subarrays",
        "title_cn": "三个无重叠子数组的最大和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "689",
        "title_slug": "maximum-sum-of-3-non-overlapping-subarrays"
    },
    {
        "_id": "employee-importance",
        "title_cn": "员工的重要性",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "66.0%",
        "frontend_id": "690",
        "title_slug": "employee-importance"
    },
    {
        "_id": "stickers-to-spell-word",
        "title_cn": "贴纸拼词",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "691",
        "title_slug": "stickers-to-spell-word"
    },
    {
        "_id": "top-k-frequent-words",
        "title_cn": "前K个高频单词",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "hash-table",
            "string",
            "bucket-sort",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "692",
        "title_slug": "top-k-frequent-words"
    },
    {
        "_id": "binary-number-with-alternating-bits",
        "title_cn": "交替位二进制数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "693",
        "title_slug": "binary-number-with-alternating-bits"
    },
    {
        "_id": "number-of-distinct-islands",
        "title_cn": "不同岛屿的数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "hash-table",
            "hash-function"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "694",
        "title_slug": "number-of-distinct-islands"
    },
    {
        "_id": "max-area-of-island",
        "title_cn": "岛屿的最大面积",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "695",
        "title_slug": "max-area-of-island"
    },
    {
        "_id": "count-binary-substrings",
        "title_cn": "计数二进制子串",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "696",
        "title_slug": "count-binary-substrings"
    },
    {
        "_id": "degree-of-an-array",
        "title_cn": "数组的度",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "59.1%",
        "frontend_id": "697",
        "title_slug": "degree-of-an-array"
    },
    {
        "_id": "partition-to-k-equal-sum-subsets",
        "title_cn": "划分为k个相等的子集",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "41.8%",
        "frontend_id": "698",
        "title_slug": "partition-to-k-equal-sum-subsets"
    },
    {
        "_id": "falling-squares",
        "title_cn": "掉落的方块",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "array",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "699",
        "title_slug": "falling-squares"
    },
    {
        "_id": "number-of-distinct-islands-ii",
        "title_cn": "不同岛屿的数量 II",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "hash-table",
            "hash-function"
        ],
        "paid_only": true,
        "ac_rate": "57.7%",
        "frontend_id": "711",
        "title_slug": "number-of-distinct-islands-ii"
    },
    {
        "_id": "minimum-ascii-delete-sum-for-two-strings",
        "title_cn": "两个字符串的最小ASCII删除和",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "712",
        "title_slug": "minimum-ascii-delete-sum-for-two-strings"
    },
    {
        "_id": "subarray-product-less-than-k",
        "title_cn": "乘积小于 K 的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "713",
        "title_slug": "subarray-product-less-than-k"
    },
    {
        "_id": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "title_cn": "买卖股票的最佳时机含手续费",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "714",
        "title_slug": "best-time-to-buy-and-sell-stock-with-transaction-fee"
    },
    {
        "_id": "range-module",
        "title_cn": "Range 模块",
        "difficulty": 3,
        "tags_q": [
            "design",
            "segment-tree",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "715",
        "title_slug": "range-module"
    },
    {
        "_id": "max-stack",
        "title_cn": "最大栈",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "design",
            "linked-list",
            "doubly-linked-list",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "43.4%",
        "frontend_id": "716",
        "title_slug": "max-stack"
    },
    {
        "_id": "1-bit-and-2-bit-characters",
        "title_cn": "1 比特与 2 比特字符",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "717",
        "title_slug": "1-bit-and-2-bit-characters"
    },
    {
        "_id": "maximum-length-of-repeated-subarray",
        "title_cn": "最长重复子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sliding-window",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "718",
        "title_slug": "maximum-length-of-repeated-subarray"
    },
    {
        "_id": "find-k-th-smallest-pair-distance",
        "title_cn": "找出第 K 小的数对距离",
        "difficulty": 3,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "47.2%",
        "frontend_id": "719",
        "title_slug": "find-k-th-smallest-pair-distance"
    },
    {
        "_id": "longest-word-in-dictionary",
        "title_cn": "词典中最长的单词",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "720",
        "title_slug": "longest-word-in-dictionary"
    },
    {
        "_id": "accounts-merge",
        "title_cn": "账户合并",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "721",
        "title_slug": "accounts-merge"
    },
    {
        "_id": "remove-comments",
        "title_cn": "删除注释",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "722",
        "title_slug": "remove-comments"
    },
    {
        "_id": "candy-crush",
        "title_cn": "粉碎糖果",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "matrix",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "73.3%",
        "frontend_id": "723",
        "title_slug": "candy-crush"
    },
    {
        "_id": "find-pivot-index",
        "title_cn": "寻找数组的中心下标",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "724",
        "title_slug": "find-pivot-index"
    },
    {
        "_id": "split-linked-list-in-parts",
        "title_cn": "分隔链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "60.8%",
        "frontend_id": "725",
        "title_slug": "split-linked-list-in-parts"
    },
    {
        "_id": "number-of-atoms",
        "title_cn": "原子的数量",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "726",
        "title_slug": "number-of-atoms"
    },
    {
        "_id": "minimum-window-subsequence",
        "title_cn": "最小窗口子序列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "42.7%",
        "frontend_id": "727",
        "title_slug": "minimum-window-subsequence"
    },
    {
        "_id": "self-dividing-numbers",
        "title_cn": "自除数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "728",
        "title_slug": "self-dividing-numbers"
    },
    {
        "_id": "my-calendar-i",
        "title_cn": "我的日程安排表 I",
        "difficulty": 2,
        "tags_q": [
            "design",
            "segment-tree",
            "binary-search",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "729",
        "title_slug": "my-calendar-i"
    },
    {
        "_id": "count-different-palindromic-subsequences",
        "title_cn": "统计不同回文子序列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "730",
        "title_slug": "count-different-palindromic-subsequences"
    },
    {
        "_id": "my-calendar-ii",
        "title_cn": "我的日程安排表 II",
        "difficulty": 2,
        "tags_q": [
            "design",
            "segment-tree",
            "binary-search",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "62.8%",
        "frontend_id": "731",
        "title_slug": "my-calendar-ii"
    },
    {
        "_id": "my-calendar-iii",
        "title_cn": "我的日程安排表 III",
        "difficulty": 3,
        "tags_q": [
            "design",
            "segment-tree",
            "binary-search",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "732",
        "title_slug": "my-calendar-iii"
    },
    {
        "_id": "flood-fill",
        "title_cn": "图像渲染",
        "difficulty": 1,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "733",
        "title_slug": "flood-fill"
    },
    {
        "_id": "sentence-similarity",
        "title_cn": "句子相似性",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "48.2%",
        "frontend_id": "734",
        "title_slug": "sentence-similarity"
    },
    {
        "_id": "asteroid-collision",
        "title_cn": "小行星碰撞",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "735",
        "title_slug": "asteroid-collision"
    },
    {
        "_id": "sentence-similarity-ii",
        "title_cn": "句子相似性 II",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "49.2%",
        "frontend_id": "737",
        "title_slug": "sentence-similarity-ii"
    },
    {
        "_id": "monotone-increasing-digits",
        "title_cn": "单调递增的数字",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "738",
        "title_slug": "monotone-increasing-digits"
    },
    {
        "_id": "daily-temperatures",
        "title_cn": "每日温度",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "739",
        "title_slug": "daily-temperatures"
    },
    {
        "_id": "delete-and-earn",
        "title_cn": "删除并获得点数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.9%",
        "frontend_id": "740",
        "title_slug": "delete-and-earn"
    },
    {
        "_id": "cherry-pickup",
        "title_cn": "摘樱桃",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "50.8%",
        "frontend_id": "741",
        "title_slug": "cherry-pickup"
    },
    {
        "_id": "to-lower-case",
        "title_cn": "转换成小写字母",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.5%",
        "frontend_id": "709",
        "title_slug": "to-lower-case"
    },
    {
        "_id": "closest-leaf-in-a-binary-tree",
        "title_cn": "二叉树最近的叶节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "49.1%",
        "frontend_id": "742",
        "title_slug": "closest-leaf-in-a-binary-tree"
    },
    {
        "_id": "network-delay-time",
        "title_cn": "网络延迟时间",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "743",
        "title_slug": "network-delay-time"
    },
    {
        "_id": "find-smallest-letter-greater-than-target",
        "title_cn": "寻找比目标字母大的最小字母",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "744",
        "title_slug": "find-smallest-letter-greater-than-target"
    },
    {
        "_id": "min-cost-climbing-stairs",
        "title_cn": "使用最小花费爬楼梯",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "746",
        "title_slug": "min-cost-climbing-stairs"
    },
    {
        "_id": "largest-number-at-least-twice-of-others",
        "title_cn": "至少是其他数字两倍的最大数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "747",
        "title_slug": "largest-number-at-least-twice-of-others"
    },
    {
        "_id": "shortest-completing-word",
        "title_cn": "最短补全词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.6%",
        "frontend_id": "748",
        "title_slug": "shortest-completing-word"
    },
    {
        "_id": "number-of-corner-rectangles",
        "title_cn": "角矩形的数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "73.0%",
        "frontend_id": "750",
        "title_slug": "number-of-corner-rectangles"
    },
    {
        "_id": "ip-to-cidr",
        "title_cn": "IP 到 CIDR",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "48.1%",
        "frontend_id": "751",
        "title_slug": "ip-to-cidr"
    },
    {
        "_id": "open-the-lock",
        "title_cn": "打开转盘锁",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "752",
        "title_slug": "open-the-lock"
    },
    {
        "_id": "cracking-the-safe",
        "title_cn": "破解保险箱",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "eulerian-circuit"
        ],
        "paid_only": false,
        "ac_rate": "74.9%",
        "frontend_id": "753",
        "title_slug": "cracking-the-safe"
    },
    {
        "_id": "reach-a-number",
        "title_cn": "到达终点数字",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "754",
        "title_slug": "reach-a-number"
    },
    {
        "_id": "pour-water",
        "title_cn": "倒水",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "48.3%",
        "frontend_id": "755",
        "title_slug": "pour-water"
    },
    {
        "_id": "pyramid-transition-matrix",
        "title_cn": "金字塔转换矩阵",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "depth-first-search",
            "breadth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "50.3%",
        "frontend_id": "756",
        "title_slug": "pyramid-transition-matrix"
    },
    {
        "_id": "convert-binary-search-tree-to-sorted-doubly-linked-list",
        "title_cn": "将二叉搜索树转化为排序的双向链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "linked-list",
            "binary-tree",
            "doubly-linked-list"
        ],
        "paid_only": true,
        "ac_rate": "68.1%",
        "frontend_id": "426",
        "title_slug": "convert-binary-search-tree-to-sorted-doubly-linked-list"
    },
    {
        "_id": "bold-words-in-string",
        "title_cn": "字符串中的加粗单词",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "string-matching"
        ],
        "paid_only": true,
        "ac_rate": "48.6%",
        "frontend_id": "758",
        "title_slug": "bold-words-in-string"
    },
    {
        "_id": "employee-free-time",
        "title_cn": "员工空闲时间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "70.1%",
        "frontend_id": "759",
        "title_slug": "employee-free-time"
    },
    {
        "_id": "find-anagram-mappings",
        "title_cn": "找出变位映射",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "84.6%",
        "frontend_id": "760",
        "title_slug": "find-anagram-mappings"
    },
    {
        "_id": "special-binary-string",
        "title_cn": "特殊的二进制序列",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "75.1%",
        "frontend_id": "761",
        "title_slug": "special-binary-string"
    },
    {
        "_id": "n-ary-tree-level-order-traversal",
        "title_cn": "N 叉树的层序遍历",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "73.5%",
        "frontend_id": "429",
        "title_slug": "n-ary-tree-level-order-traversal"
    },
    {
        "_id": "serialize-and-deserialize-n-ary-tree",
        "title_cn": "序列化和反序列化 N 叉树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "69.6%",
        "frontend_id": "428",
        "title_slug": "serialize-and-deserialize-n-ary-tree"
    },
    {
        "_id": "flatten-a-multilevel-doubly-linked-list",
        "title_cn": "扁平化多级双向链表",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "linked-list",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "430",
        "title_slug": "flatten-a-multilevel-doubly-linked-list"
    },
    {
        "_id": "prime-number-of-set-bits-in-binary-representation",
        "title_cn": "二进制表示中质数个计算置位",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "75.3%",
        "frontend_id": "762",
        "title_slug": "prime-number-of-set-bits-in-binary-representation"
    },
    {
        "_id": "partition-labels",
        "title_cn": "划分字母区间",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "763",
        "title_slug": "partition-labels"
    },
    {
        "_id": "largest-plus-sign",
        "title_cn": "最大加号标志",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.4%",
        "frontend_id": "764",
        "title_slug": "largest-plus-sign"
    },
    {
        "_id": "couples-holding-hands",
        "title_cn": "情侣牵手",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "67.3%",
        "frontend_id": "765",
        "title_slug": "couples-holding-hands"
    },
    {
        "_id": "encode-n-ary-tree-to-binary-tree",
        "title_cn": "将 N 叉树编码为二叉树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "74.6%",
        "frontend_id": "431",
        "title_slug": "encode-n-ary-tree-to-binary-tree"
    },
    {
        "_id": "construct-quad-tree",
        "title_cn": "建立四叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "array",
            "divide-and-conquer",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "71.7%",
        "frontend_id": "427",
        "title_slug": "construct-quad-tree"
    },
    {
        "_id": "logical-or-of-two-binary-grids-represented-as-quad-trees",
        "title_cn": "四叉树交集",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "62.7%",
        "frontend_id": "558",
        "title_slug": "logical-or-of-two-binary-grids-represented-as-quad-trees"
    },
    {
        "_id": "maximum-depth-of-n-ary-tree",
        "title_cn": "N 叉树的最大深度",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "75.1%",
        "frontend_id": "559",
        "title_slug": "maximum-depth-of-n-ary-tree"
    },
    {
        "_id": "n-ary-tree-preorder-traversal",
        "title_cn": "N 叉树的前序遍历",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "75.9%",
        "frontend_id": "589",
        "title_slug": "n-ary-tree-preorder-traversal"
    },
    {
        "_id": "n-ary-tree-postorder-traversal",
        "title_cn": "N 叉树的后序遍历",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "79.5%",
        "frontend_id": "590",
        "title_slug": "n-ary-tree-postorder-traversal"
    },
    {
        "_id": "toeplitz-matrix",
        "title_cn": "托普利茨矩阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "69.9%",
        "frontend_id": "766",
        "title_slug": "toeplitz-matrix"
    },
    {
        "_id": "reorganize-string",
        "title_cn": "重构字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "767",
        "title_slug": "reorganize-string"
    },
    {
        "_id": "max-chunks-to-make-sorted-ii",
        "title_cn": "最多能完成排序的块 II",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "768",
        "title_slug": "max-chunks-to-make-sorted-ii"
    },
    {
        "_id": "max-chunks-to-make-sorted",
        "title_cn": "最多能完成排序的块",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "769",
        "title_slug": "max-chunks-to-make-sorted"
    },
    {
        "_id": "jewels-and-stones",
        "title_cn": "宝石与石头",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.6%",
        "frontend_id": "771",
        "title_slug": "jewels-and-stones"
    },
    {
        "_id": "search-in-a-binary-search-tree",
        "title_cn": "二叉搜索树中的搜索",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "700",
        "title_slug": "search-in-a-binary-search-tree"
    },
    {
        "_id": "insert-into-a-binary-search-tree",
        "title_cn": "二叉搜索树中的插入操作",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "701",
        "title_slug": "insert-into-a-binary-search-tree"
    },
    {
        "_id": "basic-calculator-iii",
        "title_cn": "基本计算器 III",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "recursion",
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "53.4%",
        "frontend_id": "772",
        "title_slug": "basic-calculator-iii"
    },
    {
        "_id": "search-in-a-sorted-array-of-unknown-size",
        "title_cn": "搜索长度未知的有序数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "74.8%",
        "frontend_id": "702",
        "title_slug": "search-in-a-sorted-array-of-unknown-size"
    },
    {
        "_id": "sliding-puzzle",
        "title_cn": "滑动谜题",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "773",
        "title_slug": "sliding-puzzle"
    },
    {
        "_id": "minimize-max-distance-to-gas-station",
        "title_cn": "最小化去加油站的最大距离",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "63.6%",
        "frontend_id": "774",
        "title_slug": "minimize-max-distance-to-gas-station"
    },
    {
        "_id": "kth-largest-element-in-a-stream",
        "title_cn": "数据流中的第 K 大元素",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "design",
            "binary-search-tree",
            "binary-tree",
            "data-stream",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "703",
        "title_slug": "kth-largest-element-in-a-stream"
    },
    {
        "_id": "global-and-local-inversions",
        "title_cn": "全局倒置与局部倒置",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "775",
        "title_slug": "global-and-local-inversions"
    },
    {
        "_id": "binary-search",
        "title_cn": "二分查找",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "704",
        "title_slug": "binary-search"
    },
    {
        "_id": "swap-adjacent-in-lr-string",
        "title_cn": "在LR字符串中交换相邻字符",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "38.6%",
        "frontend_id": "777",
        "title_slug": "swap-adjacent-in-lr-string"
    },
    {
        "_id": "swim-in-rising-water",
        "title_cn": "水位上升的泳池中游泳",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "binary-search",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "778",
        "title_slug": "swim-in-rising-water"
    },
    {
        "_id": "k-th-symbol-in-grammar",
        "title_cn": "第K个语法符号",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "779",
        "title_slug": "k-th-symbol-in-grammar"
    },
    {
        "_id": "reaching-points",
        "title_cn": "到达终点",
        "difficulty": 3,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "780",
        "title_slug": "reaching-points"
    },
    {
        "_id": "rabbits-in-forest",
        "title_cn": "森林中的兔子",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "781",
        "title_slug": "rabbits-in-forest"
    },
    {
        "_id": "transform-to-chessboard",
        "title_cn": "变为棋盘",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "782",
        "title_slug": "transform-to-chessboard"
    },
    {
        "_id": "minimum-distance-between-bst-nodes",
        "title_cn": "二叉搜索树节点最小距离",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "783",
        "title_slug": "minimum-distance-between-bst-nodes"
    },
    {
        "_id": "letter-case-permutation",
        "title_cn": "字母大小写全排列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "784",
        "title_slug": "letter-case-permutation"
    },
    {
        "_id": "is-graph-bipartite",
        "title_cn": "判断二分图",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "785",
        "title_slug": "is-graph-bipartite"
    },
    {
        "_id": "k-th-smallest-prime-fraction",
        "title_cn": "第 K 个最小的质数分数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "786",
        "title_slug": "k-th-smallest-prime-fraction"
    },
    {
        "_id": "cheapest-flights-within-k-stops",
        "title_cn": "K 站中转内最便宜的航班",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "dynamic-programming",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.9%",
        "frontend_id": "787",
        "title_slug": "cheapest-flights-within-k-stops"
    },
    {
        "_id": "escape-the-ghosts",
        "title_cn": "逃脱阻碍者",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "68.6%",
        "frontend_id": "789",
        "title_slug": "escape-the-ghosts"
    },
    {
        "_id": "domino-and-tromino-tiling",
        "title_cn": "多米诺和托米诺平铺",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "790",
        "title_slug": "domino-and-tromino-tiling"
    },
    {
        "_id": "custom-sort-string",
        "title_cn": "自定义字符串排序",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.2%",
        "frontend_id": "791",
        "title_slug": "custom-sort-string"
    },
    {
        "_id": "number-of-matching-subsequences",
        "title_cn": "匹配子序列的单词数",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "792",
        "title_slug": "number-of-matching-subsequences"
    },
    {
        "_id": "preimage-size-of-factorial-zeroes-function",
        "title_cn": "阶乘函数后 K 个零",
        "difficulty": 3,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "793",
        "title_slug": "preimage-size-of-factorial-zeroes-function"
    },
    {
        "_id": "valid-tic-tac-toe-state",
        "title_cn": "有效的井字游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "794",
        "title_slug": "valid-tic-tac-toe-state"
    },
    {
        "_id": "number-of-subarrays-with-bounded-maximum",
        "title_cn": "区间子数组个数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "795",
        "title_slug": "number-of-subarrays-with-bounded-maximum"
    },
    {
        "_id": "rotate-string",
        "title_cn": "旋转字符串",
        "difficulty": 1,
        "tags_q": [
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "796",
        "title_slug": "rotate-string"
    },
    {
        "_id": "all-paths-from-source-to-target",
        "title_cn": "所有可能的路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "78.6%",
        "frontend_id": "797",
        "title_slug": "all-paths-from-source-to-target"
    },
    {
        "_id": "champagne-tower",
        "title_cn": "香槟塔",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "799",
        "title_slug": "champagne-tower"
    },
    {
        "_id": "design-hashset",
        "title_cn": "设计哈希集合",
        "difficulty": 1,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "linked-list",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "705",
        "title_slug": "design-hashset"
    },
    {
        "_id": "design-hashmap",
        "title_cn": "设计哈希映射",
        "difficulty": 1,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "linked-list",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "706",
        "title_slug": "design-hashmap"
    },
    {
        "_id": "similar-rgb-color",
        "title_cn": "相似 RGB 颜色",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "enumeration"
        ],
        "paid_only": true,
        "ac_rate": "70.0%",
        "frontend_id": "800",
        "title_slug": "similar-rgb-color"
    },
    {
        "_id": "minimum-swaps-to-make-sequences-increasing",
        "title_cn": "使序列递增的最小交换次数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "801",
        "title_slug": "minimum-swaps-to-make-sequences-increasing"
    },
    {
        "_id": "find-eventual-safe-states",
        "title_cn": "找到最终的安全状态",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "802",
        "title_slug": "find-eventual-safe-states"
    },
    {
        "_id": "bricks-falling-when-hit",
        "title_cn": "打砖块",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "47.0%",
        "frontend_id": "803",
        "title_slug": "bricks-falling-when-hit"
    },
    {
        "_id": "unique-morse-code-words",
        "title_cn": "唯一摩尔斯密码词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "82.2%",
        "frontend_id": "804",
        "title_slug": "unique-morse-code-words"
    },
    {
        "_id": "split-array-with-same-average",
        "title_cn": "数组的均值分割",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "805",
        "title_slug": "split-array-with-same-average"
    },
    {
        "_id": "number-of-lines-to-write-string",
        "title_cn": "写字符串需要的行数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.6%",
        "frontend_id": "806",
        "title_slug": "number-of-lines-to-write-string"
    },
    {
        "_id": "max-increase-to-keep-city-skyline",
        "title_cn": "保持城市天际线",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "87.9%",
        "frontend_id": "807",
        "title_slug": "max-increase-to-keep-city-skyline"
    },
    {
        "_id": "soup-servings",
        "title_cn": "分汤",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "808",
        "title_slug": "soup-servings"
    },
    {
        "_id": "expressive-words",
        "title_cn": "情感丰富的文字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "809",
        "title_slug": "expressive-words"
    },
    {
        "_id": "chalkboard-xor-game",
        "title_cn": "黑板异或游戏",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array",
            "math",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "810",
        "title_slug": "chalkboard-xor-game"
    },
    {
        "_id": "subdomain-visit-count",
        "title_cn": "子域名访问计数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "811",
        "title_slug": "subdomain-visit-count"
    },
    {
        "_id": "largest-triangle-area",
        "title_cn": "最大三角形面积",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "812",
        "title_slug": "largest-triangle-area"
    },
    {
        "_id": "largest-sum-of-averages",
        "title_cn": "最大平均值和的分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "813",
        "title_slug": "largest-sum-of-averages"
    },
    {
        "_id": "binary-tree-pruning",
        "title_cn": "二叉树剪枝",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "814",
        "title_slug": "binary-tree-pruning"
    },
    {
        "_id": "bus-routes",
        "title_cn": "公交路线",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "815",
        "title_slug": "bus-routes"
    },
    {
        "_id": "ambiguous-coordinates",
        "title_cn": "模糊坐标",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "816",
        "title_slug": "ambiguous-coordinates"
    },
    {
        "_id": "linked-list-components",
        "title_cn": "链表组件",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "61.3%",
        "frontend_id": "817",
        "title_slug": "linked-list-components"
    },
    {
        "_id": "most-common-word",
        "title_cn": "最常见的单词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "819",
        "title_slug": "most-common-word"
    },
    {
        "_id": "design-linked-list",
        "title_cn": "设计链表",
        "difficulty": 2,
        "tags_q": [
            "design",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "34.4%",
        "frontend_id": "707",
        "title_slug": "design-linked-list"
    },
    {
        "_id": "short-encoding-of-words",
        "title_cn": "单词的压缩编码",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.3%",
        "frontend_id": "820",
        "title_slug": "short-encoding-of-words"
    },
    {
        "_id": "shortest-distance-to-a-character",
        "title_cn": "字符的最短距离",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "72.7%",
        "frontend_id": "821",
        "title_slug": "shortest-distance-to-a-character"
    },
    {
        "_id": "card-flipping-game",
        "title_cn": "翻转卡片游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "822",
        "title_slug": "card-flipping-game"
    },
    {
        "_id": "binary-trees-with-factors",
        "title_cn": "带因子的二叉树",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "823",
        "title_slug": "binary-trees-with-factors"
    },
    {
        "_id": "insert-into-a-sorted-circular-linked-list",
        "title_cn": "循环有序列表的插入",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": true,
        "ac_rate": "38.4%",
        "frontend_id": "708",
        "title_slug": "insert-into-a-sorted-circular-linked-list"
    },
    {
        "_id": "goat-latin",
        "title_cn": "山羊拉丁文",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "824",
        "title_slug": "goat-latin"
    },
    {
        "_id": "friends-of-appropriate-ages",
        "title_cn": "适龄的朋友",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.6%",
        "frontend_id": "825",
        "title_slug": "friends-of-appropriate-ages"
    },
    {
        "_id": "most-profit-assigning-work",
        "title_cn": "安排工作以达到最大收益",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "43.5%",
        "frontend_id": "826",
        "title_slug": "most-profit-assigning-work"
    },
    {
        "_id": "making-a-large-island",
        "title_cn": "最大人工岛",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "47.2%",
        "frontend_id": "827",
        "title_slug": "making-a-large-island"
    },
    {
        "_id": "consecutive-numbers-sum",
        "title_cn": "连续整数求和",
        "difficulty": 3,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "829",
        "title_slug": "consecutive-numbers-sum"
    },
    {
        "_id": "positions-of-large-groups",
        "title_cn": "较大分组的位置",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "830",
        "title_slug": "positions-of-large-groups"
    },
    {
        "_id": "masking-personal-information",
        "title_cn": "隐藏个人信息",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.1%",
        "frontend_id": "831",
        "title_slug": "masking-personal-information"
    },
    {
        "_id": "design-circular-deque",
        "title_cn": "设计循环双端队列",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "641",
        "title_slug": "design-circular-deque"
    },
    {
        "_id": "design-circular-queue",
        "title_cn": "设计循环队列",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "622",
        "title_slug": "design-circular-queue"
    },
    {
        "_id": "flipping-an-image",
        "title_cn": "翻转图像",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "two-pointers",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.4%",
        "frontend_id": "832",
        "title_slug": "flipping-an-image"
    },
    {
        "_id": "find-and-replace-in-string",
        "title_cn": "字符串中的查找与替换",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "833",
        "title_slug": "find-and-replace-in-string"
    },
    {
        "_id": "sum-of-distances-in-tree",
        "title_cn": "树中距离之和",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "graph",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "834",
        "title_slug": "sum-of-distances-in-tree"
    },
    {
        "_id": "image-overlap",
        "title_cn": "图像重叠",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "835",
        "title_slug": "image-overlap"
    },
    {
        "_id": "robot-room-cleaner",
        "title_cn": "扫地机器人",
        "difficulty": 3,
        "tags_q": [
            "backtracking",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "73.9%",
        "frontend_id": "489",
        "title_slug": "robot-room-cleaner"
    },
    {
        "_id": "rectangle-overlap",
        "title_cn": "矩形重叠",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "836",
        "title_slug": "rectangle-overlap"
    },
    {
        "_id": "push-dominoes",
        "title_cn": "推多米诺",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "838",
        "title_slug": "push-dominoes"
    },
    {
        "_id": "similar-string-groups",
        "title_cn": "相似字符串组",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "59.4%",
        "frontend_id": "839",
        "title_slug": "similar-string-groups"
    },
    {
        "_id": "magic-squares-in-grid",
        "title_cn": "矩阵中的幻方",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "840",
        "title_slug": "magic-squares-in-grid"
    },
    {
        "_id": "keys-and-rooms",
        "title_cn": "钥匙和房间",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "69.3%",
        "frontend_id": "841",
        "title_slug": "keys-and-rooms"
    },
    {
        "_id": "split-array-into-fibonacci-sequence",
        "title_cn": "将数组拆分成斐波那契序列",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "842",
        "title_slug": "split-array-into-fibonacci-sequence"
    },
    {
        "_id": "guess-the-word",
        "title_cn": "猜猜这个单词",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "string",
            "game-theory",
            "interactive"
        ],
        "paid_only": false,
        "ac_rate": "36.8%",
        "frontend_id": "843",
        "title_slug": "guess-the-word"
    },
    {
        "_id": "backspace-string-compare",
        "title_cn": "比较含退格的字符串",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "two-pointers",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "47.8%",
        "frontend_id": "844",
        "title_slug": "backspace-string-compare"
    },
    {
        "_id": "longest-mountain-in-array",
        "title_cn": "数组中的最长山脉",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "dynamic-programming",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "845",
        "title_slug": "longest-mountain-in-array"
    },
    {
        "_id": "hand-of-straights",
        "title_cn": "一手顺子",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "846",
        "title_slug": "hand-of-straights"
    },
    {
        "_id": "shifting-letters",
        "title_cn": "字母移位",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "848",
        "title_slug": "shifting-letters"
    },
    {
        "_id": "maximize-distance-to-closest-person",
        "title_cn": "到最近的人的最大距离",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "849",
        "title_slug": "maximize-distance-to-closest-person"
    },
    {
        "_id": "rectangle-area-ii",
        "title_cn": "矩形面积 II",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "array",
            "ordered-set",
            "line-sweep"
        ],
        "paid_only": false,
        "ac_rate": "62.8%",
        "frontend_id": "850",
        "title_slug": "rectangle-area-ii"
    },
    {
        "_id": "loud-and-rich",
        "title_cn": "喧闹和富有",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "graph",
            "topological-sort",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "63.2%",
        "frontend_id": "851",
        "title_slug": "loud-and-rich"
    },
    {
        "_id": "peak-index-in-a-mountain-array",
        "title_cn": "山脉数组的峰顶索引",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "68.4%",
        "frontend_id": "852",
        "title_slug": "peak-index-in-a-mountain-array"
    },
    {
        "_id": "car-fleet",
        "title_cn": "车队",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "853",
        "title_slug": "car-fleet"
    },
    {
        "_id": "k-similar-strings",
        "title_cn": "相似度为 K 的字符串",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "854",
        "title_slug": "k-similar-strings"
    },
    {
        "_id": "exam-room",
        "title_cn": "考场就座",
        "difficulty": 2,
        "tags_q": [
            "design",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "855",
        "title_slug": "exam-room"
    },
    {
        "_id": "score-of-parentheses",
        "title_cn": "括号的分数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "856",
        "title_slug": "score-of-parentheses"
    },
    {
        "_id": "minimum-cost-to-hire-k-workers",
        "title_cn": "雇佣 K 名工人的最低成本",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "857",
        "title_slug": "minimum-cost-to-hire-k-workers"
    },
    {
        "_id": "mirror-reflection",
        "title_cn": "镜面反射",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "858",
        "title_slug": "mirror-reflection"
    },
    {
        "_id": "buddy-strings",
        "title_cn": "亲密字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "34.8%",
        "frontend_id": "859",
        "title_slug": "buddy-strings"
    },
    {
        "_id": "lemonade-change",
        "title_cn": "柠檬水找零",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "860",
        "title_slug": "lemonade-change"
    },
    {
        "_id": "score-after-flipping-matrix",
        "title_cn": "翻转矩阵后的得分",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "80.7%",
        "frontend_id": "861",
        "title_slug": "score-after-flipping-matrix"
    },
    {
        "_id": "shortest-subarray-with-sum-at-least-k",
        "title_cn": "和至少为 K 的最短子数组",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "27.0%",
        "frontend_id": "862",
        "title_slug": "shortest-subarray-with-sum-at-least-k"
    },
    {
        "_id": "all-nodes-distance-k-in-binary-tree",
        "title_cn": "二叉树中所有距离为 K 的结点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "863",
        "title_slug": "all-nodes-distance-k-in-binary-tree"
    },
    {
        "_id": "random-pick-with-blacklist",
        "title_cn": "黑名单中的随机数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "binary-search",
            "sorting",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "43.4%",
        "frontend_id": "710",
        "title_slug": "random-pick-with-blacklist"
    },
    {
        "_id": "shortest-path-to-get-all-keys",
        "title_cn": "获取所有钥匙的最短路径",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "864",
        "title_slug": "shortest-path-to-get-all-keys"
    },
    {
        "_id": "prime-palindrome",
        "title_cn": "回文质数",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "24.3%",
        "frontend_id": "866",
        "title_slug": "prime-palindrome"
    },
    {
        "_id": "transpose-matrix",
        "title_cn": "转置矩阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "867",
        "title_slug": "transpose-matrix"
    },
    {
        "_id": "binary-gap",
        "title_cn": "二进制间距",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "868",
        "title_slug": "binary-gap"
    },
    {
        "_id": "reordered-power-of-2",
        "title_cn": "重新排序得到 2 的幂",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "counting",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "869",
        "title_slug": "reordered-power-of-2"
    },
    {
        "_id": "advantage-shuffle",
        "title_cn": "优势洗牌",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "870",
        "title_slug": "advantage-shuffle"
    },
    {
        "_id": "minimum-number-of-refueling-stops",
        "title_cn": "最低加油次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "43.5%",
        "frontend_id": "871",
        "title_slug": "minimum-number-of-refueling-stops"
    },
    {
        "_id": "implement-rand10-using-rand7",
        "title_cn": "用 Rand7() 实现 Rand10()",
        "difficulty": 2,
        "tags_q": [
            "math",
            "rejection-sampling",
            "probability-and-statistics",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "55.1%",
        "frontend_id": "470",
        "title_slug": "implement-rand10-using-rand7"
    },
    {
        "_id": "leaf-similar-trees",
        "title_cn": "叶子相似的树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "872",
        "title_slug": "leaf-similar-trees"
    },
    {
        "_id": "length-of-longest-fibonacci-subsequence",
        "title_cn": "最长的斐波那契子序列的长度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.2%",
        "frontend_id": "873",
        "title_slug": "length-of-longest-fibonacci-subsequence"
    },
    {
        "_id": "walking-robot-simulation",
        "title_cn": "模拟行走机器人",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "874",
        "title_slug": "walking-robot-simulation"
    },
    {
        "_id": "koko-eating-bananas",
        "title_cn": "爱吃香蕉的珂珂",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "875",
        "title_slug": "koko-eating-bananas"
    },
    {
        "_id": "middle-of-the-linked-list",
        "title_cn": "链表的中间结点",
        "difficulty": 1,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "70.8%",
        "frontend_id": "876",
        "title_slug": "middle-of-the-linked-list"
    },
    {
        "_id": "stone-game",
        "title_cn": "石子游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "877",
        "title_slug": "stone-game"
    },
    {
        "_id": "nth-magical-number",
        "title_cn": "第 N 个神奇数字",
        "difficulty": 3,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "878",
        "title_slug": "nth-magical-number"
    },
    {
        "_id": "profitable-schemes",
        "title_cn": "盈利计划",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "879",
        "title_slug": "profitable-schemes"
    },
    {
        "_id": "random-pick-with-weight",
        "title_cn": "按权重随机选择",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "binary-search",
            "prefix-sum",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "528",
        "title_slug": "random-pick-with-weight"
    },
    {
        "_id": "random-flip-matrix",
        "title_cn": "随机翻转矩阵",
        "difficulty": 2,
        "tags_q": [
            "reservoir-sampling",
            "hash-table",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "46.2%",
        "frontend_id": "519",
        "title_slug": "random-flip-matrix"
    },
    {
        "_id": "random-point-in-non-overlapping-rectangles",
        "title_cn": "非重叠矩形中的随机点",
        "difficulty": 2,
        "tags_q": [
            "reservoir-sampling",
            "array",
            "math",
            "binary-search",
            "ordered-set",
            "prefix-sum",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "42.0%",
        "frontend_id": "497",
        "title_slug": "random-point-in-non-overlapping-rectangles"
    },
    {
        "_id": "generate-random-point-in-a-circle",
        "title_cn": "在圆内随机生成点",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math",
            "rejection-sampling",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "478",
        "title_slug": "generate-random-point-in-a-circle"
    },
    {
        "_id": "decoded-string-at-index",
        "title_cn": "索引处的解码字符串",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "27.5%",
        "frontend_id": "880",
        "title_slug": "decoded-string-at-index"
    },
    {
        "_id": "boats-to-save-people",
        "title_cn": "救生艇",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "881",
        "title_slug": "boats-to-save-people"
    },
    {
        "_id": "reachable-nodes-in-subdivided-graph",
        "title_cn": "细分图中的可到达节点",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "882",
        "title_slug": "reachable-nodes-in-subdivided-graph"
    },
    {
        "_id": "projection-area-of-3d-shapes",
        "title_cn": "三维形体投影面积",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "76.6%",
        "frontend_id": "883",
        "title_slug": "projection-area-of-3d-shapes"
    },
    {
        "_id": "uncommon-words-from-two-sentences",
        "title_cn": "两句话中的不常见单词",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.3%",
        "frontend_id": "884",
        "title_slug": "uncommon-words-from-two-sentences"
    },
    {
        "_id": "spiral-matrix-iii",
        "title_cn": "螺旋矩阵 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "72.0%",
        "frontend_id": "885",
        "title_slug": "spiral-matrix-iii"
    },
    {
        "_id": "possible-bipartition",
        "title_cn": "可能的二分法",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "52.3%",
        "frontend_id": "886",
        "title_slug": "possible-bipartition"
    },
    {
        "_id": "super-egg-drop",
        "title_cn": "鸡蛋掉落",
        "difficulty": 3,
        "tags_q": [
            "math",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "31.0%",
        "frontend_id": "887",
        "title_slug": "super-egg-drop"
    },
    {
        "_id": "fair-candy-swap",
        "title_cn": "公平的糖果交换",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "888",
        "title_slug": "fair-candy-swap"
    },
    {
        "_id": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "title_cn": "根据前序和后序遍历构造二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "array",
            "hash-table",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.0%",
        "frontend_id": "889",
        "title_slug": "construct-binary-tree-from-preorder-and-postorder-traversal"
    },
    {
        "_id": "find-and-replace-pattern",
        "title_cn": "查找和替换模式",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "78.7%",
        "frontend_id": "890",
        "title_slug": "find-and-replace-pattern"
    },
    {
        "_id": "sum-of-subsequence-widths",
        "title_cn": "子序列宽度之和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "891",
        "title_slug": "sum-of-subsequence-widths"
    },
    {
        "_id": "surface-area-of-3d-shapes",
        "title_cn": "三维形体的表面积",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "64.8%",
        "frontend_id": "892",
        "title_slug": "surface-area-of-3d-shapes"
    },
    {
        "_id": "groups-of-special-equivalent-strings",
        "title_cn": "特殊等价字符串组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.6%",
        "frontend_id": "893",
        "title_slug": "groups-of-special-equivalent-strings"
    },
    {
        "_id": "all-possible-full-binary-trees",
        "title_cn": "所有可能的真二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "recursion",
            "memoization",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "77.7%",
        "frontend_id": "894",
        "title_slug": "all-possible-full-binary-trees"
    },
    {
        "_id": "maximum-frequency-stack",
        "title_cn": "最大频率栈",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "design",
            "hash-table",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "63.9%",
        "frontend_id": "895",
        "title_slug": "maximum-frequency-stack"
    },
    {
        "_id": "monotonic-array",
        "title_cn": "单调数列",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "56.6%",
        "frontend_id": "896",
        "title_slug": "monotonic-array"
    },
    {
        "_id": "increasing-order-search-tree",
        "title_cn": "递增顺序搜索树",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "897",
        "title_slug": "increasing-order-search-tree"
    },
    {
        "_id": "bitwise-ors-of-subarrays",
        "title_cn": "子数组按位或操作",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.8%",
        "frontend_id": "898",
        "title_slug": "bitwise-ors-of-subarrays"
    },
    {
        "_id": "orderly-queue",
        "title_cn": "有序队列",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "899",
        "title_slug": "orderly-queue"
    },
    {
        "_id": "rle-iterator",
        "title_cn": "RLE 迭代器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "counting",
            "iterator"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "900",
        "title_slug": "rle-iterator"
    },
    {
        "_id": "online-stock-span",
        "title_cn": "股票价格跨度",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "design",
            "data-stream",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "901",
        "title_slug": "online-stock-span"
    },
    {
        "_id": "valid-permutations-for-di-sequence",
        "title_cn": "DI 序列的有效排列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "57.6%",
        "frontend_id": "903",
        "title_slug": "valid-permutations-for-di-sequence"
    },
    {
        "_id": "fruit-into-baskets",
        "title_cn": "水果成篮",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.9%",
        "frontend_id": "904",
        "title_slug": "fruit-into-baskets"
    },
    {
        "_id": "sort-array-by-parity",
        "title_cn": "按奇偶排序数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "905",
        "title_slug": "sort-array-by-parity"
    },
    {
        "_id": "super-palindromes",
        "title_cn": "超级回文数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "32.6%",
        "frontend_id": "906",
        "title_slug": "super-palindromes"
    },
    {
        "_id": "sum-of-subarray-minimums",
        "title_cn": "子数组的最小值之和",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "907",
        "title_slug": "sum-of-subarray-minimums"
    },
    {
        "_id": "smallest-range-i",
        "title_cn": "最小差值 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "74.5%",
        "frontend_id": "908",
        "title_slug": "smallest-range-i"
    },
    {
        "_id": "snakes-and-ladders",
        "title_cn": "蛇梯棋",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "909",
        "title_slug": "snakes-and-ladders"
    },
    {
        "_id": "smallest-range-ii",
        "title_cn": "最小差值 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.3%",
        "frontend_id": "910",
        "title_slug": "smallest-range-ii"
    },
    {
        "_id": "sort-an-array",
        "title_cn": "排序数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "bucket-sort",
            "counting-sort",
            "radix-sort",
            "sorting",
            "heap-priority-queue",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "49.5%",
        "frontend_id": "912",
        "title_slug": "sort-an-array"
    },
    {
        "_id": "cat-and-mouse",
        "title_cn": "猫和老鼠",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "memoization",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "913",
        "title_slug": "cat-and-mouse"
    },
    {
        "_id": "x-of-a-kind-in-a-deck-of-cards",
        "title_cn": "卡牌分组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "counting",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "914",
        "title_slug": "x-of-a-kind-in-a-deck-of-cards"
    },
    {
        "_id": "partition-array-into-disjoint-intervals",
        "title_cn": "分割数组",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "915",
        "title_slug": "partition-array-into-disjoint-intervals"
    },
    {
        "_id": "word-subsets",
        "title_cn": "单词子集",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "47.0%",
        "frontend_id": "916",
        "title_slug": "word-subsets"
    },
    {
        "_id": "reverse-only-letters",
        "title_cn": "仅仅反转字母",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "917",
        "title_slug": "reverse-only-letters"
    },
    {
        "_id": "maximum-sum-circular-subarray",
        "title_cn": "环形子数组的最大和",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "divide-and-conquer",
            "dynamic-programming",
            "monotonic-queue"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "918",
        "title_slug": "maximum-sum-circular-subarray"
    },
    {
        "_id": "complete-binary-tree-inserter",
        "title_cn": "完全二叉树插入器",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "design",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "919",
        "title_slug": "complete-binary-tree-inserter"
    },
    {
        "_id": "number-of-music-playlists",
        "title_cn": "播放列表的数量",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "920",
        "title_slug": "number-of-music-playlists"
    },
    {
        "_id": "minimum-add-to-make-parentheses-valid",
        "title_cn": "使括号有效的最少添加",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "921",
        "title_slug": "minimum-add-to-make-parentheses-valid"
    },
    {
        "_id": "3sum-with-multiplicity",
        "title_cn": "三数之和的多种可能",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "37.9%",
        "frontend_id": "923",
        "title_slug": "3sum-with-multiplicity"
    },
    {
        "_id": "minimize-malware-spread",
        "title_cn": "尽量减少恶意软件的传播",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "36.3%",
        "frontend_id": "924",
        "title_slug": "minimize-malware-spread"
    },
    {
        "_id": "long-pressed-name",
        "title_cn": "长按键入",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "37.3%",
        "frontend_id": "925",
        "title_slug": "long-pressed-name"
    },
    {
        "_id": "flip-string-to-monotone-increasing",
        "title_cn": "将字符串翻转到单调递增",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "926",
        "title_slug": "flip-string-to-monotone-increasing"
    },
    {
        "_id": "three-equal-parts",
        "title_cn": "三等分",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "927",
        "title_slug": "three-equal-parts"
    },
    {
        "_id": "minimize-malware-spread-ii",
        "title_cn": "尽量减少恶意软件的传播 II",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "928",
        "title_slug": "minimize-malware-spread-ii"
    },
    {
        "_id": "unique-email-addresses",
        "title_cn": "独特的电子邮件地址",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "929",
        "title_slug": "unique-email-addresses"
    },
    {
        "_id": "binary-subarrays-with-sum",
        "title_cn": "和相同的二元子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "930",
        "title_slug": "binary-subarrays-with-sum"
    },
    {
        "_id": "minimum-falling-path-sum",
        "title_cn": "下降路径最小和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "67.6%",
        "frontend_id": "931",
        "title_slug": "minimum-falling-path-sum"
    },
    {
        "_id": "beautiful-array",
        "title_cn": "漂亮数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "932",
        "title_slug": "beautiful-array"
    },
    {
        "_id": "number-of-recent-calls",
        "title_cn": "最近的请求次数",
        "difficulty": 1,
        "tags_q": [
            "design",
            "queue",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "933",
        "title_slug": "number-of-recent-calls"
    },
    {
        "_id": "shortest-bridge",
        "title_cn": "最短的桥",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "934",
        "title_slug": "shortest-bridge"
    },
    {
        "_id": "knight-dialer",
        "title_cn": "骑士拨号器",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "935",
        "title_slug": "knight-dialer"
    },
    {
        "_id": "stamping-the-sequence",
        "title_cn": "戳印序列",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "queue",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.7%",
        "frontend_id": "936",
        "title_slug": "stamping-the-sequence"
    },
    {
        "_id": "reorder-data-in-log-files",
        "title_cn": "重新排列日志文件",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "937",
        "title_slug": "reorder-data-in-log-files"
    },
    {
        "_id": "range-sum-of-bst",
        "title_cn": "二叉搜索树的范围和",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "83.1%",
        "frontend_id": "938",
        "title_slug": "range-sum-of-bst"
    },
    {
        "_id": "minimum-area-rectangle",
        "title_cn": "最小面积矩形",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "hash-table",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "939",
        "title_slug": "minimum-area-rectangle"
    },
    {
        "_id": "distinct-subsequences-ii",
        "title_cn": "不同的子序列 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "940",
        "title_slug": "distinct-subsequences-ii"
    },
    {
        "_id": "valid-mountain-array",
        "title_cn": "有效的山脉数组",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "941",
        "title_slug": "valid-mountain-array"
    },
    {
        "_id": "di-string-match",
        "title_cn": "增减字符串匹配",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.4%",
        "frontend_id": "942",
        "title_slug": "di-string-match"
    },
    {
        "_id": "find-the-shortest-superstring",
        "title_cn": "最短超级串",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "943",
        "title_slug": "find-the-shortest-superstring"
    },
    {
        "_id": "delete-columns-to-make-sorted",
        "title_cn": "删列造序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.1%",
        "frontend_id": "944",
        "title_slug": "delete-columns-to-make-sorted"
    },
    {
        "_id": "minimum-increment-to-make-array-unique",
        "title_cn": "使数组唯一的最小增量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "945",
        "title_slug": "minimum-increment-to-make-array-unique"
    },
    {
        "_id": "validate-stack-sequences",
        "title_cn": "验证栈序列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "946",
        "title_slug": "validate-stack-sequences"
    },
    {
        "_id": "most-stones-removed-with-same-row-or-column",
        "title_cn": "移除最多的同行或同列石头",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "union-find",
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "947",
        "title_slug": "most-stones-removed-with-same-row-or-column"
    },
    {
        "_id": "bag-of-tokens",
        "title_cn": "令牌放置",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "948",
        "title_slug": "bag-of-tokens"
    },
    {
        "_id": "largest-time-for-given-digits",
        "title_cn": "给定数字能组成的最大时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "949",
        "title_slug": "largest-time-for-given-digits"
    },
    {
        "_id": "reveal-cards-in-increasing-order",
        "title_cn": "按递增顺序显示卡牌",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "sorting",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "78.8%",
        "frontend_id": "950",
        "title_slug": "reveal-cards-in-increasing-order"
    },
    {
        "_id": "flip-equivalent-binary-trees",
        "title_cn": "翻转等价二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "951",
        "title_slug": "flip-equivalent-binary-trees"
    },
    {
        "_id": "largest-component-size-by-common-factor",
        "title_cn": "按公因数计算最大组件大小",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "hash-table",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "952",
        "title_slug": "largest-component-size-by-common-factor"
    },
    {
        "_id": "verifying-an-alien-dictionary",
        "title_cn": "验证外星语词典",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "953",
        "title_slug": "verifying-an-alien-dictionary"
    },
    {
        "_id": "array-of-doubled-pairs",
        "title_cn": "二倍数对数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "39.2%",
        "frontend_id": "954",
        "title_slug": "array-of-doubled-pairs"
    },
    {
        "_id": "delete-columns-to-make-sorted-ii",
        "title_cn": "删列造序 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "35.9%",
        "frontend_id": "955",
        "title_slug": "delete-columns-to-make-sorted-ii"
    },
    {
        "_id": "tallest-billboard",
        "title_cn": "最高的广告牌",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "956",
        "title_slug": "tallest-billboard"
    },
    {
        "_id": "prison-cells-after-n-days",
        "title_cn": "N 天后的牢房",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "37.5%",
        "frontend_id": "957",
        "title_slug": "prison-cells-after-n-days"
    },
    {
        "_id": "check-completeness-of-a-binary-tree",
        "title_cn": "二叉树的完全性检验",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "54.8%",
        "frontend_id": "958",
        "title_slug": "check-completeness-of-a-binary-tree"
    },
    {
        "_id": "delete-columns-to-make-sorted-iii",
        "title_cn": "删列造序 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "960",
        "title_slug": "delete-columns-to-make-sorted-iii"
    },
    {
        "_id": "n-repeated-element-in-size-2n-array",
        "title_cn": "在长度 2N 的数组中找出重复 N 次的元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "961",
        "title_slug": "n-repeated-element-in-size-2n-array"
    },
    {
        "_id": "maximum-width-ramp",
        "title_cn": "最大宽度坡",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "962",
        "title_slug": "maximum-width-ramp"
    },
    {
        "_id": "minimum-area-rectangle-ii",
        "title_cn": "最小面积矩形 II",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "963",
        "title_slug": "minimum-area-rectangle-ii"
    },
    {
        "_id": "least-operators-to-express-number",
        "title_cn": "表示数字的最少运算符",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "964",
        "title_slug": "least-operators-to-express-number"
    },
    {
        "_id": "univalued-binary-tree",
        "title_cn": "单值二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "69.8%",
        "frontend_id": "965",
        "title_slug": "univalued-binary-tree"
    },
    {
        "_id": "vowel-spellchecker",
        "title_cn": "元音拼写检查器",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.0%",
        "frontend_id": "966",
        "title_slug": "vowel-spellchecker"
    },
    {
        "_id": "numbers-with-same-consecutive-differences",
        "title_cn": "连续差相同的数字",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "967",
        "title_slug": "numbers-with-same-consecutive-differences"
    },
    {
        "_id": "binary-tree-cameras",
        "title_cn": "监控二叉树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "968",
        "title_slug": "binary-tree-cameras"
    },
    {
        "_id": "pancake-sorting",
        "title_cn": "煎饼排序",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "969",
        "title_slug": "pancake-sorting"
    },
    {
        "_id": "powerful-integers",
        "title_cn": "强整数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "970",
        "title_slug": "powerful-integers"
    },
    {
        "_id": "flip-binary-tree-to-match-preorder-traversal",
        "title_cn": "翻转二叉树以匹配先序遍历",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "971",
        "title_slug": "flip-binary-tree-to-match-preorder-traversal"
    },
    {
        "_id": "fibonacci-number",
        "title_cn": "斐波那契数",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "509",
        "title_slug": "fibonacci-number"
    },
    {
        "_id": "k-closest-points-to-origin",
        "title_cn": "最接近原点的 K 个点",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "973",
        "title_slug": "k-closest-points-to-origin"
    },
    {
        "_id": "subarray-sums-divisible-by-k",
        "title_cn": "和可被 K 整除的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "974",
        "title_slug": "subarray-sums-divisible-by-k"
    },
    {
        "_id": "odd-even-jump",
        "title_cn": "奇偶跳",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "ordered-set",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "975",
        "title_slug": "odd-even-jump"
    },
    {
        "_id": "largest-perimeter-triangle",
        "title_cn": "三角形的最大周长",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "976",
        "title_slug": "largest-perimeter-triangle"
    },
    {
        "_id": "squares-of-a-sorted-array",
        "title_cn": "有序数组的平方",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.9%",
        "frontend_id": "977",
        "title_slug": "squares-of-a-sorted-array"
    },
    {
        "_id": "longest-turbulent-subarray",
        "title_cn": "最长湍流子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "47.7%",
        "frontend_id": "978",
        "title_slug": "longest-turbulent-subarray"
    },
    {
        "_id": "distribute-coins-in-binary-tree",
        "title_cn": "在二叉树中分配硬币",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.4%",
        "frontend_id": "979",
        "title_slug": "distribute-coins-in-binary-tree"
    },
    {
        "_id": "unique-paths-iii",
        "title_cn": "不同路径 III",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "77.8%",
        "frontend_id": "980",
        "title_slug": "unique-paths-iii"
    },
    {
        "_id": "time-based-key-value-store",
        "title_cn": "基于时间的键值存储",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "string",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "981",
        "title_slug": "time-based-key-value-store"
    },
    {
        "_id": "triples-with-bitwise-and-equal-to-zero",
        "title_cn": "按位与为零的三元组",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "67.4%",
        "frontend_id": "982",
        "title_slug": "triples-with-bitwise-and-equal-to-zero"
    },
    {
        "_id": "minimum-cost-for-tickets",
        "title_cn": "最低票价",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "983",
        "title_slug": "minimum-cost-for-tickets"
    },
    {
        "_id": "string-without-aaa-or-bbb",
        "title_cn": "不含 AAA 或 BBB 的字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "984",
        "title_slug": "string-without-aaa-or-bbb"
    },
    {
        "_id": "sum-of-even-numbers-after-queries",
        "title_cn": "查询后的偶数和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "61.3%",
        "frontend_id": "985",
        "title_slug": "sum-of-even-numbers-after-queries"
    },
    {
        "_id": "interval-list-intersections",
        "title_cn": "区间列表的交集",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "68.6%",
        "frontend_id": "986",
        "title_slug": "interval-list-intersections"
    },
    {
        "_id": "vertical-order-traversal-of-a-binary-tree",
        "title_cn": "二叉树的垂序遍历",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "987",
        "title_slug": "vertical-order-traversal-of-a-binary-tree"
    },
    {
        "_id": "smallest-string-starting-from-leaf",
        "title_cn": "从叶结点开始的最小字符串",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "51.9%",
        "frontend_id": "988",
        "title_slug": "smallest-string-starting-from-leaf"
    },
    {
        "_id": "add-to-array-form-of-integer",
        "title_cn": "数组形式的整数加法",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "45.3%",
        "frontend_id": "989",
        "title_slug": "add-to-array-form-of-integer"
    },
    {
        "_id": "satisfiability-of-equality-equations",
        "title_cn": "等式方程的可满足性",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "graph",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "53.8%",
        "frontend_id": "990",
        "title_slug": "satisfiability-of-equality-equations"
    },
    {
        "_id": "broken-calculator",
        "title_cn": "坏了的计算器",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "991",
        "title_slug": "broken-calculator"
    },
    {
        "_id": "subarrays-with-k-different-integers",
        "title_cn": "K 个不同整数的子数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "47.7%",
        "frontend_id": "992",
        "title_slug": "subarrays-with-k-different-integers"
    },
    {
        "_id": "cousins-in-binary-tree",
        "title_cn": "二叉树的堂兄弟节点",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "993",
        "title_slug": "cousins-in-binary-tree"
    },
    {
        "_id": "rotting-oranges",
        "title_cn": "腐烂的橘子",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "994",
        "title_slug": "rotting-oranges"
    },
    {
        "_id": "minimum-number-of-k-consecutive-bit-flips",
        "title_cn": "K 连续位的最小翻转次数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "queue",
            "array",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "54.1%",
        "frontend_id": "995",
        "title_slug": "minimum-number-of-k-consecutive-bit-flips"
    },
    {
        "_id": "number-of-squareful-arrays",
        "title_cn": "正方形数组的数目",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "996",
        "title_slug": "number-of-squareful-arrays"
    },
    {
        "_id": "find-the-town-judge",
        "title_cn": "找到小镇的法官",
        "difficulty": 1,
        "tags_q": [
            "graph",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "51.6%",
        "frontend_id": "997",
        "title_slug": "find-the-town-judge"
    },
    {
        "_id": "available-captures-for-rook",
        "title_cn": "可以被一步捕获的棋子数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "999",
        "title_slug": "available-captures-for-rook"
    },
    {
        "_id": "minimum-cost-to-merge-stones",
        "title_cn": "合并石头的最低成本",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "1000",
        "title_slug": "minimum-cost-to-merge-stones"
    },
    {
        "_id": "grid-illumination",
        "title_cn": "网格照明",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "1001",
        "title_slug": "grid-illumination"
    },
    {
        "_id": "find-common-characters",
        "title_cn": "查找共用字符",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "1002",
        "title_slug": "find-common-characters"
    },
    {
        "_id": "check-if-word-is-valid-after-substitutions",
        "title_cn": "检查替换后的词是否有效",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "1003",
        "title_slug": "check-if-word-is-valid-after-substitutions"
    },
    {
        "_id": "max-consecutive-ones-iii",
        "title_cn": "最大连续1的个数 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "1004",
        "title_slug": "max-consecutive-ones-iii"
    },
    {
        "_id": "maximize-sum-of-array-after-k-negations",
        "title_cn": "K 次取反后最大化的数组和",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "1005",
        "title_slug": "maximize-sum-of-array-after-k-negations"
    },
    {
        "_id": "clumsy-factorial",
        "title_cn": "笨阶乘",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "1006",
        "title_slug": "clumsy-factorial"
    },
    {
        "_id": "minimum-domino-rotations-for-equal-row",
        "title_cn": "行相等的最少多米诺旋转",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "1007",
        "title_slug": "minimum-domino-rotations-for-equal-row"
    },
    {
        "_id": "construct-binary-search-tree-from-preorder-traversal",
        "title_cn": "前序遍历构造二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "binary-search-tree",
            "array",
            "binary-tree",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "71.6%",
        "frontend_id": "1008",
        "title_slug": "construct-binary-search-tree-from-preorder-traversal"
    },
    {
        "_id": "shortest-way-to-form-string",
        "title_cn": "形成字符串的最短路径",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "60.7%",
        "frontend_id": "1055",
        "title_slug": "shortest-way-to-form-string"
    },
    {
        "_id": "campus-bikes",
        "title_cn": "校园自行车分配",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "52.3%",
        "frontend_id": "1057",
        "title_slug": "campus-bikes"
    },
    {
        "_id": "minimize-rounding-error-to-meet-target",
        "title_cn": "最小化舍入误差以满足目标",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "37.6%",
        "frontend_id": "1058",
        "title_slug": "minimize-rounding-error-to-meet-target"
    },
    {
        "_id": "complement-of-base-10-integer",
        "title_cn": "十进制整数的反码",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "1009",
        "title_slug": "complement-of-base-10-integer"
    },
    {
        "_id": "pairs-of-songs-with-total-durations-divisible-by-60",
        "title_cn": "总持续时间可被 60 整除的歌曲",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "1010",
        "title_slug": "pairs-of-songs-with-total-durations-divisible-by-60"
    },
    {
        "_id": "capacity-to-ship-packages-within-d-days",
        "title_cn": "在 D 天内送达包裹的能力",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "62.4%",
        "frontend_id": "1011",
        "title_slug": "capacity-to-ship-packages-within-d-days"
    },
    {
        "_id": "numbers-with-repeated-digits",
        "title_cn": "至少有 1 位重复的数字",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.8%",
        "frontend_id": "1012",
        "title_slug": "numbers-with-repeated-digits"
    },
    {
        "_id": "lexicographically-smallest-equivalent-string",
        "title_cn": "按字典序排列最小的等效字符串",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1061",
        "title_slug": "lexicographically-smallest-equivalent-string"
    },
    {
        "_id": "missing-element-in-sorted-array",
        "title_cn": "有序数组中的缺失元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "55.3%",
        "frontend_id": "1060",
        "title_slug": "missing-element-in-sorted-array"
    },
    {
        "_id": "longest-repeating-substring",
        "title_cn": "最长重复子串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "binary-search",
            "dynamic-programming",
            "suffix-array",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": true,
        "ac_rate": "57.5%",
        "frontend_id": "1062",
        "title_slug": "longest-repeating-substring"
    },
    {
        "_id": "number-of-valid-subarrays",
        "title_cn": "有效子数组的数目",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "74.1%",
        "frontend_id": "1063",
        "title_slug": "number-of-valid-subarrays"
    },
    {
        "_id": "partition-array-into-three-parts-with-equal-sum",
        "title_cn": "将数组分成和相等的三个部分",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "1013",
        "title_slug": "partition-array-into-three-parts-with-equal-sum"
    },
    {
        "_id": "best-sightseeing-pair",
        "title_cn": "最佳观光组合",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "1014",
        "title_slug": "best-sightseeing-pair"
    },
    {
        "_id": "smallest-integer-divisible-by-k",
        "title_cn": "可被 K 整除的最小整数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "1015",
        "title_slug": "smallest-integer-divisible-by-k"
    },
    {
        "_id": "binary-string-with-substrings-representing-1-to-n",
        "title_cn": "子串能表示从 1 到 N 数字的二进制串",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.3%",
        "frontend_id": "1016",
        "title_slug": "binary-string-with-substrings-representing-1-to-n"
    },
    {
        "_id": "fixed-point",
        "title_cn": "不动点",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "64.7%",
        "frontend_id": "1064",
        "title_slug": "fixed-point"
    },
    {
        "_id": "campus-bikes-ii",
        "title_cn": "校园自行车分配 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "51.6%",
        "frontend_id": "1066",
        "title_slug": "campus-bikes-ii"
    },
    {
        "_id": "digit-count-in-range",
        "title_cn": "范围内的数字计数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "49.4%",
        "frontend_id": "1067",
        "title_slug": "digit-count-in-range"
    },
    {
        "_id": "confusing-number",
        "title_cn": "易混淆数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": true,
        "ac_rate": "44.7%",
        "frontend_id": "1056",
        "title_slug": "confusing-number"
    },
    {
        "_id": "convert-to-base-2",
        "title_cn": "负二进制转换",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "64.9%",
        "frontend_id": "1017",
        "title_slug": "convert-to-base-2"
    },
    {
        "_id": "binary-prefix-divisible-by-5",
        "title_cn": "可被 5 整除的二进制前缀",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "1018",
        "title_slug": "binary-prefix-divisible-by-5"
    },
    {
        "_id": "next-greater-node-in-linked-list",
        "title_cn": "链表中的下一个更大节点",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "linked-list",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "1019",
        "title_slug": "next-greater-node-in-linked-list"
    },
    {
        "_id": "number-of-enclaves",
        "title_cn": "飞地的数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "1020",
        "title_slug": "number-of-enclaves"
    },
    {
        "_id": "high-five",
        "title_cn": "前五科的均分",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "68.4%",
        "frontend_id": "1086",
        "title_slug": "high-five"
    },
    {
        "_id": "index-pairs-of-a-string",
        "title_cn": "字符串的索引对",
        "difficulty": 1,
        "tags_q": [
            "trie",
            "array",
            "string",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "56.3%",
        "frontend_id": "1065",
        "title_slug": "index-pairs-of-a-string"
    },
    {
        "_id": "brace-expansion",
        "title_cn": "花括号展开",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "57.4%",
        "frontend_id": "1087",
        "title_slug": "brace-expansion"
    },
    {
        "_id": "confusing-number-ii",
        "title_cn": "易混淆数 II",
        "difficulty": 3,
        "tags_q": [
            "math",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "49.9%",
        "frontend_id": "1088",
        "title_slug": "confusing-number-ii"
    },
    {
        "_id": "remove-outermost-parentheses",
        "title_cn": "删除最外层的括号",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.3%",
        "frontend_id": "1021",
        "title_slug": "remove-outermost-parentheses"
    },
    {
        "_id": "sum-of-root-to-leaf-binary-numbers",
        "title_cn": "从根到叶的二进制数之和",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "74.6%",
        "frontend_id": "1022",
        "title_slug": "sum-of-root-to-leaf-binary-numbers"
    },
    {
        "_id": "camelcase-matching",
        "title_cn": "驼峰式匹配",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "two-pointers",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "1023",
        "title_slug": "camelcase-matching"
    },
    {
        "_id": "video-stitching",
        "title_cn": "视频拼接",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "1024",
        "title_slug": "video-stitching"
    },
    {
        "_id": "sum-of-digits-in-the-minimum-number",
        "title_cn": "最小元素各数位之和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "78.1%",
        "frontend_id": "1085",
        "title_slug": "sum-of-digits-in-the-minimum-number"
    },
    {
        "_id": "two-sum-less-than-k",
        "title_cn": "小于 K 的两数之和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "60.6%",
        "frontend_id": "1099",
        "title_slug": "two-sum-less-than-k"
    },
    {
        "_id": "find-k-length-substrings-with-no-repeated-characters",
        "title_cn": "长度为 K 的无重复字符子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "70.5%",
        "frontend_id": "1100",
        "title_slug": "find-k-length-substrings-with-no-repeated-characters"
    },
    {
        "_id": "the-earliest-moment-when-everyone-become-friends",
        "title_cn": "彼此熟识的最早时间",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "68.6%",
        "frontend_id": "1101",
        "title_slug": "the-earliest-moment-when-everyone-become-friends"
    },
    {
        "_id": "divisor-game",
        "title_cn": "除数博弈",
        "difficulty": 1,
        "tags_q": [
            "brainteaser",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "1025",
        "title_slug": "divisor-game"
    },
    {
        "_id": "longest-arithmetic-subsequence",
        "title_cn": "最长等差数列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "1027",
        "title_slug": "longest-arithmetic-subsequence"
    },
    {
        "_id": "number-of-days-in-a-month",
        "title_cn": "一月有多少天",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": true,
        "ac_rate": "65.8%",
        "frontend_id": "1118",
        "title_slug": "number-of-days-in-a-month"
    },
    {
        "_id": "remove-vowels-from-a-string",
        "title_cn": "删去字符串中的元音",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": true,
        "ac_rate": "87.2%",
        "frontend_id": "1119",
        "title_slug": "remove-vowels-from-a-string"
    },
    {
        "_id": "armstrong-number",
        "title_cn": "阿姆斯特朗数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": true,
        "ac_rate": "77.5%",
        "frontend_id": "1134",
        "title_slug": "armstrong-number"
    },
    {
        "_id": "maximum-average-subtree",
        "title_cn": "子树的最大平均值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "63.6%",
        "frontend_id": "1120",
        "title_slug": "maximum-average-subtree"
    },
    {
        "_id": "maximum-difference-between-node-and-ancestor",
        "title_cn": "节点与其祖先之间的最大差值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "75.5%",
        "frontend_id": "1026",
        "title_slug": "maximum-difference-between-node-and-ancestor"
    },
    {
        "_id": "recover-a-tree-from-preorder-traversal",
        "title_cn": "从先序遍历还原二叉树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "72.7%",
        "frontend_id": "1028",
        "title_slug": "recover-a-tree-from-preorder-traversal"
    },
    {
        "_id": "matrix-cells-in-distance-order",
        "title_cn": "距离顺序排列矩阵单元格",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "1030",
        "title_slug": "matrix-cells-in-distance-order"
    },
    {
        "_id": "two-city-scheduling",
        "title_cn": "两地调度",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "1029",
        "title_slug": "two-city-scheduling"
    },
    {
        "_id": "maximum-sum-of-two-non-overlapping-subarrays",
        "title_cn": "两个非重叠子数组的最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "1031",
        "title_slug": "maximum-sum-of-two-non-overlapping-subarrays"
    },
    {
        "_id": "stream-of-characters",
        "title_cn": "字符流",
        "difficulty": 3,
        "tags_q": [
            "design",
            "trie",
            "array",
            "string",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "1032",
        "title_slug": "stream-of-characters"
    },
    {
        "_id": "largest-unique-number",
        "title_cn": "最大唯一数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "67.6%",
        "frontend_id": "1133",
        "title_slug": "largest-unique-number"
    },
    {
        "_id": "path-with-maximum-minimum-value",
        "title_cn": "得分最高的路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "binary-search",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "40.6%",
        "frontend_id": "1102",
        "title_slug": "path-with-maximum-minimum-value"
    },
    {
        "_id": "connecting-cities-with-minimum-cost",
        "title_cn": "最低成本连通所有城市",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "graph",
            "minimum-spanning-tree",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "1135",
        "title_slug": "connecting-cities-with-minimum-cost"
    },
    {
        "_id": "parallel-courses",
        "title_cn": "并行课程",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort"
        ],
        "paid_only": true,
        "ac_rate": "61.0%",
        "frontend_id": "1136",
        "title_slug": "parallel-courses"
    },
    {
        "_id": "check-if-a-number-is-majority-element-in-a-sorted-array",
        "title_cn": "检查一个数是否在数组中占绝大多数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "59.9%",
        "frontend_id": "1150",
        "title_slug": "check-if-a-number-is-majority-element-in-a-sorted-array"
    },
    {
        "_id": "moving-stones-until-consecutive",
        "title_cn": "移动石子直到连续",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "1033",
        "title_slug": "moving-stones-until-consecutive"
    },
    {
        "_id": "coloring-a-border",
        "title_cn": "边界着色",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "55.0%",
        "frontend_id": "1034",
        "title_slug": "coloring-a-border"
    },
    {
        "_id": "uncrossed-lines",
        "title_cn": "不相交的线",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "72.1%",
        "frontend_id": "1035",
        "title_slug": "uncrossed-lines"
    },
    {
        "_id": "escape-a-large-maze",
        "title_cn": "逃离大迷宫",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "1036",
        "title_slug": "escape-a-large-maze"
    },
    {
        "_id": "minimum-swaps-to-group-all-1s-together",
        "title_cn": "最少交换次数来组合所有的 1",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "53.2%",
        "frontend_id": "1151",
        "title_slug": "minimum-swaps-to-group-all-1s-together"
    },
    {
        "_id": "analyze-user-website-visit-pattern",
        "title_cn": "用户网站访问行为分析",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "41.9%",
        "frontend_id": "1152",
        "title_slug": "analyze-user-website-visit-pattern"
    },
    {
        "_id": "minimum-score-triangulation-of-polygon",
        "title_cn": "多边形三角剖分的最低得分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1039",
        "title_slug": "minimum-score-triangulation-of-polygon"
    },
    {
        "_id": "find-words-that-can-be-formed-by-characters",
        "title_cn": "拼写单词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.0%",
        "frontend_id": "1160",
        "title_slug": "find-words-that-can-be-formed-by-characters"
    },
    {
        "_id": "moving-stones-until-consecutive-ii",
        "title_cn": "移动石子直到连续 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "1040",
        "title_slug": "moving-stones-until-consecutive-ii"
    },
    {
        "_id": "binary-search-tree-to-greater-sum-tree",
        "title_cn": "从二叉搜索树到更大和树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "83.6%",
        "frontend_id": "1038",
        "title_slug": "binary-search-tree-to-greater-sum-tree"
    },
    {
        "_id": "valid-boomerang",
        "title_cn": "有效的回旋镖",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "1037",
        "title_slug": "valid-boomerang"
    },
    {
        "_id": "maximum-level-sum-of-a-binary-tree",
        "title_cn": "最大层内元素和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "1161",
        "title_slug": "maximum-level-sum-of-a-binary-tree"
    },
    {
        "_id": "as-far-from-land-as-possible",
        "title_cn": "地图分析",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "1162",
        "title_slug": "as-far-from-land-as-possible"
    },
    {
        "_id": "divide-array-into-increasing-sequences",
        "title_cn": "将数组分成几个递增序列",
        "difficulty": 3,
        "tags_q": [
            "array",
            "counting"
        ],
        "paid_only": true,
        "ac_rate": "61.1%",
        "frontend_id": "1121",
        "title_slug": "divide-array-into-increasing-sequences"
    },
    {
        "_id": "robot-bounded-in-circle",
        "title_cn": "困于环中的机器人",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "1041",
        "title_slug": "robot-bounded-in-circle"
    },
    {
        "_id": "flower-planting-with-no-adjacent",
        "title_cn": "不邻接植花",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "1042",
        "title_slug": "flower-planting-with-no-adjacent"
    },
    {
        "_id": "partition-array-for-maximum-sum",
        "title_cn": "分隔数组以得到最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "75.2%",
        "frontend_id": "1043",
        "title_slug": "partition-array-for-maximum-sum"
    },
    {
        "_id": "longest-duplicate-substring",
        "title_cn": "最长重复子串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "binary-search",
            "suffix-array",
            "sliding-window",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "35.4%",
        "frontend_id": "1044",
        "title_slug": "longest-duplicate-substring"
    },
    {
        "_id": "single-row-keyboard",
        "title_cn": "单行键盘",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "84.9%",
        "frontend_id": "1165",
        "title_slug": "single-row-keyboard"
    },
    {
        "_id": "string-transforms-into-another-string",
        "title_cn": "字符串转化",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "37.9%",
        "frontend_id": "1153",
        "title_slug": "string-transforms-into-another-string"
    },
    {
        "_id": "design-file-system",
        "title_cn": "设计文件系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "50.7%",
        "frontend_id": "1166",
        "title_slug": "design-file-system"
    },
    {
        "_id": "minimum-cost-to-connect-sticks",
        "title_cn": "连接木棍的最低费用",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "53.7%",
        "frontend_id": "1167",
        "title_slug": "minimum-cost-to-connect-sticks"
    },
    {
        "_id": "last-stone-weight",
        "title_cn": "最后一块石头的重量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "1046",
        "title_slug": "last-stone-weight"
    },
    {
        "_id": "remove-all-adjacent-duplicates-in-string",
        "title_cn": "删除字符串中的所有相邻重复项",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "72.3%",
        "frontend_id": "1047",
        "title_slug": "remove-all-adjacent-duplicates-in-string"
    },
    {
        "_id": "longest-string-chain",
        "title_cn": "最长字符串链",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "1048",
        "title_slug": "longest-string-chain"
    },
    {
        "_id": "last-stone-weight-ii",
        "title_cn": "最后一块石头的重量 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "1049",
        "title_slug": "last-stone-weight-ii"
    },
    {
        "_id": "count-substrings-with-only-one-distinct-letter",
        "title_cn": "统计只含单一字母的子串",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "79.0%",
        "frontend_id": "1180",
        "title_slug": "count-substrings-with-only-one-distinct-letter"
    },
    {
        "_id": "before-and-after-puzzle",
        "title_cn": "前后拼接",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "40.1%",
        "frontend_id": "1181",
        "title_slug": "before-and-after-puzzle"
    },
    {
        "_id": "last-substring-in-lexicographical-order",
        "title_cn": "按字典序排在最后的子串",
        "difficulty": 3,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "35.1%",
        "frontend_id": "1163",
        "title_slug": "last-substring-in-lexicographical-order"
    },
    {
        "_id": "height-checker",
        "title_cn": "高度检查器",
        "difficulty": 1,
        "tags_q": [
            "array",
            "counting-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "80.1%",
        "frontend_id": "1051",
        "title_slug": "height-checker"
    },
    {
        "_id": "grumpy-bookstore-owner",
        "title_cn": "爱生气的书店老板",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "1052",
        "title_slug": "grumpy-bookstore-owner"
    },
    {
        "_id": "previous-permutation-with-one-swap",
        "title_cn": "交换一次的先前排列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "1053",
        "title_slug": "previous-permutation-with-one-swap"
    },
    {
        "_id": "distant-barcodes",
        "title_cn": "距离相等的条形码",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.0%",
        "frontend_id": "1054",
        "title_slug": "distant-barcodes"
    },
    {
        "_id": "how-many-apples-can-you-put-into-the-basket",
        "title_cn": "最多可以买到的苹果数量",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "68.5%",
        "frontend_id": "1196",
        "title_slug": "how-many-apples-can-you-put-into-the-basket"
    },
    {
        "_id": "minimum-knight-moves",
        "title_cn": "进击的骑士",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search"
        ],
        "paid_only": true,
        "ac_rate": "39.8%",
        "frontend_id": "1197",
        "title_slug": "minimum-knight-moves"
    },
    {
        "_id": "find-smallest-common-element-in-all-rows",
        "title_cn": "找出所有行中最小公共元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "counting",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "74.5%",
        "frontend_id": "1198",
        "title_slug": "find-smallest-common-element-in-all-rows"
    },
    {
        "_id": "optimize-water-distribution-in-a-village",
        "title_cn": "水资源分配优化",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "minimum-spanning-tree",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "62.9%",
        "frontend_id": "1168",
        "title_slug": "optimize-water-distribution-in-a-village"
    },
    {
        "_id": "number-of-submatrices-that-sum-to-target",
        "title_cn": "元素和为目标值的子矩阵数量",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "67.6%",
        "frontend_id": "1074",
        "title_slug": "number-of-submatrices-that-sum-to-target"
    },
    {
        "_id": "greatest-common-divisor-of-strings",
        "title_cn": "字符串的最大公因子",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "1071",
        "title_slug": "greatest-common-divisor-of-strings"
    },
    {
        "_id": "flip-columns-for-maximum-number-of-equal-rows",
        "title_cn": "按列翻转得到最大值等行数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "71.4%",
        "frontend_id": "1072",
        "title_slug": "flip-columns-for-maximum-number-of-equal-rows"
    },
    {
        "_id": "adding-two-negabinary-numbers",
        "title_cn": "负二进制数相加",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "1073",
        "title_slug": "adding-two-negabinary-numbers"
    },
    {
        "_id": "intersection-of-three-sorted-arrays",
        "title_cn": "三个有序数组的交集",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "counting"
        ],
        "paid_only": true,
        "ac_rate": "78.3%",
        "frontend_id": "1213",
        "title_slug": "intersection-of-three-sorted-arrays"
    },
    {
        "_id": "two-sum-bsts",
        "title_cn": "查找两棵二叉搜索树之和",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "two-pointers",
            "binary-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "66.1%",
        "frontend_id": "1214",
        "title_slug": "two-sum-bsts"
    },
    {
        "_id": "stepping-numbers",
        "title_cn": "步进数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "44.2%",
        "frontend_id": "1215",
        "title_slug": "stepping-numbers"
    },
    {
        "_id": "maximum-number-of-ones",
        "title_cn": "矩阵中 1 的最大数量",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "63.0%",
        "frontend_id": "1183",
        "title_slug": "maximum-number-of-ones"
    },
    {
        "_id": "occurrences-after-bigram",
        "title_cn": "Bigram 分词",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "1078",
        "title_slug": "occurrences-after-bigram"
    },
    {
        "_id": "insufficient-nodes-in-root-to-leaf-paths",
        "title_cn": "根到叶路径上的不足节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "1080",
        "title_slug": "insufficient-nodes-in-root-to-leaf-paths"
    },
    {
        "_id": "smallest-subsequence-of-distinct-characters",
        "title_cn": "不同字符的最小子序列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "1081",
        "title_slug": "smallest-subsequence-of-distinct-characters"
    },
    {
        "_id": "letter-tile-possibilities",
        "title_cn": "活字印刷",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "backtracking",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "79.1%",
        "frontend_id": "1079",
        "title_slug": "letter-tile-possibilities"
    },
    {
        "_id": "missing-number-in-arithmetic-progression",
        "title_cn": "等差数列中缺失的数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "54.4%",
        "frontend_id": "1228",
        "title_slug": "missing-number-in-arithmetic-progression"
    },
    {
        "_id": "meeting-scheduler",
        "title_cn": "安排会议日程",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "46.8%",
        "frontend_id": "1229",
        "title_slug": "meeting-scheduler"
    },
    {
        "_id": "toss-strange-coins",
        "title_cn": "抛掷硬币",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "probability-and-statistics"
        ],
        "paid_only": true,
        "ac_rate": "55.1%",
        "frontend_id": "1230",
        "title_slug": "toss-strange-coins"
    },
    {
        "_id": "minimum-time-to-build-blocks",
        "title_cn": "建造街区的最短时间",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "47.0%",
        "frontend_id": "1199",
        "title_slug": "minimum-time-to-build-blocks"
    },
    {
        "_id": "duplicate-zeros",
        "title_cn": "复写零",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "1089",
        "title_slug": "duplicate-zeros"
    },
    {
        "_id": "largest-values-from-labels",
        "title_cn": "受标签影响的最大值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.0%",
        "frontend_id": "1090",
        "title_slug": "largest-values-from-labels"
    },
    {
        "_id": "shortest-common-supersequence",
        "title_cn": "最短公共超序列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "1092",
        "title_slug": "shortest-common-supersequence"
    },
    {
        "_id": "shortest-path-in-binary-matrix",
        "title_cn": "二进制矩阵中的最短路径",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "40.6%",
        "frontend_id": "1091",
        "title_slug": "shortest-path-in-binary-matrix"
    },
    {
        "_id": "array-transformation",
        "title_cn": "数组变换",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "54.1%",
        "frontend_id": "1243",
        "title_slug": "array-transformation"
    },
    {
        "_id": "design-a-leaderboard",
        "title_cn": "力扣排行榜",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "63.7%",
        "frontend_id": "1244",
        "title_slug": "design-a-leaderboard"
    },
    {
        "_id": "tree-diameter",
        "title_cn": "树的直径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": true,
        "ac_rate": "54.9%",
        "frontend_id": "1245",
        "title_slug": "tree-diameter"
    },
    {
        "_id": "valid-palindrome-iii",
        "title_cn": "验证回文串 III",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "57.5%",
        "frontend_id": "1216",
        "title_slug": "valid-palindrome-iii"
    },
    {
        "_id": "statistics-from-a-large-sample",
        "title_cn": "大样本统计",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "41.8%",
        "frontend_id": "1093",
        "title_slug": "statistics-from-a-large-sample"
    },
    {
        "_id": "car-pooling",
        "title_cn": "拼车",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.2%",
        "frontend_id": "1094",
        "title_slug": "car-pooling"
    },
    {
        "_id": "find-in-mountain-array",
        "title_cn": "山脉数组中查找目标值",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "interactive"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "1095",
        "title_slug": "find-in-mountain-array"
    },
    {
        "_id": "building-h2o",
        "title_cn": "H2O 生成",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "54.6%",
        "frontend_id": "1117",
        "title_slug": "building-h2o"
    },
    {
        "_id": "print-foobar-alternately",
        "title_cn": "交替打印 FooBar",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "57.8%",
        "frontend_id": "1115",
        "title_slug": "print-foobar-alternately"
    },
    {
        "_id": "brace-expansion-ii",
        "title_cn": "花括号展开 II",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "breadth-first-search",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "1096",
        "title_slug": "brace-expansion-ii"
    },
    {
        "_id": "smallest-common-region",
        "title_cn": "最小公共区域",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "60.0%",
        "frontend_id": "1257",
        "title_slug": "smallest-common-region"
    },
    {
        "_id": "synonymous-sentences",
        "title_cn": "近义词句子",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "array",
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": true,
        "ac_rate": "59.1%",
        "frontend_id": "1258",
        "title_slug": "synonymous-sentences"
    },
    {
        "_id": "divide-chocolate",
        "title_cn": "分享巧克力",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "59.6%",
        "frontend_id": "1231",
        "title_slug": "divide-chocolate"
    },
    {
        "_id": "path-in-zigzag-labelled-binary-tree",
        "title_cn": "二叉树寻路",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "math",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "75.8%",
        "frontend_id": "1104",
        "title_slug": "path-in-zigzag-labelled-binary-tree"
    },
    {
        "_id": "distribute-candies-to-people",
        "title_cn": "分糖果 II",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "1103",
        "title_slug": "distribute-candies-to-people"
    },
    {
        "_id": "filling-bookcase-shelves",
        "title_cn": "填充书架",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.4%",
        "frontend_id": "1105",
        "title_slug": "filling-bookcase-shelves"
    },
    {
        "_id": "parsing-a-boolean-expression",
        "title_cn": "解析布尔表达式",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "recursion",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "1106",
        "title_slug": "parsing-a-boolean-expression"
    },
    {
        "_id": "hexspeak",
        "title_cn": "十六进制魔术数字",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "52.6%",
        "frontend_id": "1271",
        "title_slug": "hexspeak"
    },
    {
        "_id": "remove-interval",
        "title_cn": "删除区间",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "1272",
        "title_slug": "remove-interval"
    },
    {
        "_id": "delete-tree-nodes",
        "title_cn": "删除树节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "57.4%",
        "frontend_id": "1273",
        "title_slug": "delete-tree-nodes"
    },
    {
        "_id": "palindrome-removal",
        "title_cn": "删除回文子数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "50.2%",
        "frontend_id": "1246",
        "title_slug": "palindrome-removal"
    },
    {
        "_id": "print-in-order",
        "title_cn": "按序打印",
        "difficulty": 1,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1114",
        "title_slug": "print-in-order"
    },
    {
        "_id": "defanging-an-ip-address",
        "title_cn": "IP 地址无效化",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.1%",
        "frontend_id": "1108",
        "title_slug": "defanging-an-ip-address"
    },
    {
        "_id": "corporate-flight-bookings",
        "title_cn": "航班预订统计",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "1109",
        "title_slug": "corporate-flight-bookings"
    },
    {
        "_id": "delete-nodes-and-return-forest",
        "title_cn": "删点成林",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "1110",
        "title_slug": "delete-nodes-and-return-forest"
    },
    {
        "_id": "maximum-nesting-depth-of-two-valid-parentheses-strings",
        "title_cn": "有效括号的嵌套深度",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.8%",
        "frontend_id": "1111",
        "title_slug": "maximum-nesting-depth-of-two-valid-parentheses-strings"
    },
    {
        "_id": "design-bounded-blocking-queue",
        "title_cn": "设计有限阻塞队列",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": true,
        "ac_rate": "70.8%",
        "frontend_id": "1188",
        "title_slug": "design-bounded-blocking-queue"
    },
    {
        "_id": "mean-of-array-after-removing-some-elements",
        "title_cn": "删除某些元素后的数组均值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "1619",
        "title_slug": "mean-of-array-after-removing-some-elements"
    },
    {
        "_id": "iterator-for-combination",
        "title_cn": "字母组合迭代器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "string",
            "backtracking",
            "iterator"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "1286",
        "title_slug": "iterator-for-combination"
    },
    {
        "_id": "sequential-digits",
        "title_cn": "顺次数",
        "difficulty": 2,
        "tags_q": [
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "1291",
        "title_slug": "sequential-digits"
    },
    {
        "_id": "handshakes-that-dont-cross",
        "title_cn": "不相交的握手",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "53.5%",
        "frontend_id": "1259",
        "title_slug": "handshakes-that-dont-cross"
    },
    {
        "_id": "print-zero-even-odd",
        "title_cn": "打印零与奇偶数",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "1116",
        "title_slug": "print-zero-even-odd"
    },
    {
        "_id": "relative-sort-array",
        "title_cn": "数组的相对排序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "1122",
        "title_slug": "relative-sort-array"
    },
    {
        "_id": "lowest-common-ancestor-of-deepest-leaves",
        "title_cn": "最深叶节点的最近公共祖先",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "1123",
        "title_slug": "lowest-common-ancestor-of-deepest-leaves"
    },
    {
        "_id": "longest-well-performing-interval",
        "title_cn": "表现良好的最长时间段",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "hash-table",
            "prefix-sum",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "1124",
        "title_slug": "longest-well-performing-interval"
    },
    {
        "_id": "smallest-sufficient-team",
        "title_cn": "最小的必要团队",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "1125",
        "title_slug": "smallest-sufficient-team"
    },
    {
        "_id": "element-appearing-more-than-25-in-sorted-array",
        "title_cn": "有序数组中出现次数超过25%的元素",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "1287",
        "title_slug": "element-appearing-more-than-25-in-sorted-array"
    },
    {
        "_id": "remove-covered-intervals",
        "title_cn": "删除被覆盖区间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "1288",
        "title_slug": "remove-covered-intervals"
    },
    {
        "_id": "graph-connectivity-with-threshold",
        "title_cn": "带阈值的图连通性",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "1627",
        "title_slug": "graph-connectivity-with-threshold"
    },
    {
        "_id": "minimum-falling-path-sum-ii",
        "title_cn": "下降路径最小和  II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "61.3%",
        "frontend_id": "1289",
        "title_slug": "minimum-falling-path-sum-ii"
    },
    {
        "_id": "number-of-equivalent-domino-pairs",
        "title_cn": "等价多米诺骨牌对的数量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "1128",
        "title_slug": "number-of-equivalent-domino-pairs"
    },
    {
        "_id": "minimum-cost-tree-from-leaf-values",
        "title_cn": "叶值的最小代价生成树",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "1130",
        "title_slug": "minimum-cost-tree-from-leaf-values"
    },
    {
        "_id": "shortest-path-with-alternating-colors",
        "title_cn": "颜色交替的最短路径",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "48.1%",
        "frontend_id": "1129",
        "title_slug": "shortest-path-with-alternating-colors"
    },
    {
        "_id": "maximum-of-absolute-value-expression",
        "title_cn": "绝对值表达式的最大值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "1131",
        "title_slug": "maximum-of-absolute-value-expression"
    },
    {
        "_id": "replace-elements-with-greatest-element-on-right-side",
        "title_cn": "将每个元素替换为右侧最大元素",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "1299",
        "title_slug": "replace-elements-with-greatest-element-on-right-side"
    },
    {
        "_id": "sum-of-mutated-array-closest-to-target",
        "title_cn": "转变数组后最接近目标值的数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "1300",
        "title_slug": "sum-of-mutated-array-closest-to-target"
    },
    {
        "_id": "number-of-ships-in-a-rectangle",
        "title_cn": "矩形内船只的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "64.9%",
        "frontend_id": "1274",
        "title_slug": "number-of-ships-in-a-rectangle"
    },
    {
        "_id": "number-of-paths-with-max-score",
        "title_cn": "最大得分的路径数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "1301",
        "title_slug": "number-of-paths-with-max-score"
    },
    {
        "_id": "n-th-tribonacci-number",
        "title_cn": "第 N 个泰波那契数",
        "difficulty": 1,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "1137",
        "title_slug": "n-th-tribonacci-number"
    },
    {
        "_id": "alphabet-board-path",
        "title_cn": "字母板上的路径",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "1138",
        "title_slug": "alphabet-board-path"
    },
    {
        "_id": "largest-1-bordered-square",
        "title_cn": "最大的以 1 为边界的正方形",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "1139",
        "title_slug": "largest-1-bordered-square"
    },
    {
        "_id": "stone-game-ii",
        "title_cn": "石子游戏 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "1140",
        "title_slug": "stone-game-ii"
    },
    {
        "_id": "decompress-run-length-encoded-list",
        "title_cn": "解压缩编码列表",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "83.2%",
        "frontend_id": "1313",
        "title_slug": "decompress-run-length-encoded-list"
    },
    {
        "_id": "matrix-block-sum",
        "title_cn": "矩阵区域和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "75.0%",
        "frontend_id": "1314",
        "title_slug": "matrix-block-sum"
    },
    {
        "_id": "sum-of-nodes-with-even-valued-grandparent",
        "title_cn": "祖父节点值为偶数的节点和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "81.7%",
        "frontend_id": "1315",
        "title_slug": "sum-of-nodes-with-even-valued-grandparent"
    },
    {
        "_id": "distinct-echo-substrings",
        "title_cn": "不同的循环子字符串",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "string",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "1316",
        "title_slug": "distinct-echo-substrings"
    },
    {
        "_id": "decrease-elements-to-make-array-zigzag",
        "title_cn": "递减元素使数组呈锯齿状",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "50.6%",
        "frontend_id": "1144",
        "title_slug": "decrease-elements-to-make-array-zigzag"
    },
    {
        "_id": "binary-tree-coloring-game",
        "title_cn": "二叉树着色游戏",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "1145",
        "title_slug": "binary-tree-coloring-game"
    },
    {
        "_id": "snapshot-array",
        "title_cn": "快照数组",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "34.0%",
        "frontend_id": "1146",
        "title_slug": "snapshot-array"
    },
    {
        "_id": "longest-common-subsequence",
        "title_cn": "最长公共子序列",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "1143",
        "title_slug": "longest-common-subsequence"
    },
    {
        "_id": "longest-chunked-palindrome-decomposition",
        "title_cn": "段式回文",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string",
            "dynamic-programming",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "58.7%",
        "frontend_id": "1147",
        "title_slug": "longest-chunked-palindrome-decomposition"
    },
    {
        "_id": "break-a-palindrome",
        "title_cn": "破坏回文串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "1328",
        "title_slug": "break-a-palindrome"
    },
    {
        "_id": "sort-the-matrix-diagonally",
        "title_cn": "将矩阵按对角线排序",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.8%",
        "frontend_id": "1329",
        "title_slug": "sort-the-matrix-diagonally"
    },
    {
        "_id": "deepest-leaves-sum",
        "title_cn": "层数最深叶子节点的和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "85.5%",
        "frontend_id": "1302",
        "title_slug": "deepest-leaves-sum"
    },
    {
        "_id": "reverse-subarray-to-maximize-array-value",
        "title_cn": "翻转子数组得到最大的数组值",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "1330",
        "title_slug": "reverse-subarray-to-maximize-array-value"
    },
    {
        "_id": "rank-transform-of-an-array",
        "title_cn": "数组序号转换",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "1331",
        "title_slug": "rank-transform-of-an-array"
    },
    {
        "_id": "rank-transform-of-a-matrix",
        "title_cn": "矩阵转换后的秩",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "topological-sort",
            "array",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "1632",
        "title_slug": "rank-transform-of-a-matrix"
    },
    {
        "_id": "day-of-the-year",
        "title_cn": "一年中的第几天",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1154",
        "title_slug": "day-of-the-year"
    },
    {
        "_id": "swap-for-longest-repeated-character-substring",
        "title_cn": "单字符重复子串的最大长度",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "1156",
        "title_slug": "swap-for-longest-repeated-character-substring"
    },
    {
        "_id": "online-majority-element-in-subarray",
        "title_cn": "子数组中占绝大多数的元素",
        "difficulty": 3,
        "tags_q": [
            "design",
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "46.2%",
        "frontend_id": "1157",
        "title_slug": "online-majority-element-in-subarray"
    },
    {
        "_id": "number-of-dice-rolls-with-target-sum",
        "title_cn": "掷骰子等于目标和的方法数",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1155",
        "title_slug": "number-of-dice-rolls-with-target-sum"
    },
    {
        "_id": "maximum-number-of-words-you-can-type",
        "title_cn": "可以输入的最大单词数",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.0%",
        "frontend_id": "1935",
        "title_slug": "maximum-number-of-words-you-can-type"
    },
    {
        "_id": "remove-zero-sum-consecutive-nodes-from-linked-list",
        "title_cn": "从链表中删去总和值为零的连续节点",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "52.9%",
        "frontend_id": "1171",
        "title_slug": "remove-zero-sum-consecutive-nodes-from-linked-list"
    },
    {
        "_id": "dinner-plate-stacks",
        "title_cn": "餐盘栈",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "design",
            "hash-table",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "1172",
        "title_slug": "dinner-plate-stacks"
    },
    {
        "_id": "web-crawler",
        "title_cn": "网络爬虫",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "string",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "57.5%",
        "frontend_id": "1236",
        "title_slug": "web-crawler"
    },
    {
        "_id": "invalid-transactions",
        "title_cn": "查询无效交易",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "33.4%",
        "frontend_id": "1169",
        "title_slug": "invalid-transactions"
    },
    {
        "_id": "compare-strings-by-frequency-of-the-smallest-character",
        "title_cn": "比较字符串最小字母出现频次",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "1170",
        "title_slug": "compare-strings-by-frequency-of-the-smallest-character"
    },
    {
        "_id": "number-of-days-between-two-dates",
        "title_cn": "日期之间隔几天",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.6%",
        "frontend_id": "1360",
        "title_slug": "number-of-days-between-two-dates"
    },
    {
        "_id": "validate-binary-tree-nodes",
        "title_cn": "验证二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "1361",
        "title_slug": "validate-binary-tree-nodes"
    },
    {
        "_id": "largest-multiple-of-three",
        "title_cn": "形成三的最大倍数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "1363",
        "title_slug": "largest-multiple-of-three"
    },
    {
        "_id": "prime-arrangements",
        "title_cn": "质数排列",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "56.6%",
        "frontend_id": "1175",
        "title_slug": "prime-arrangements"
    },
    {
        "_id": "diet-plan-performance",
        "title_cn": "健身计划评估",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "49.3%",
        "frontend_id": "1176",
        "title_slug": "diet-plan-performance"
    },
    {
        "_id": "can-make-palindrome-from-substring",
        "title_cn": "构建回文串检测",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "1177",
        "title_slug": "can-make-palindrome-from-substring"
    },
    {
        "_id": "number-of-valid-words-for-each-puzzle",
        "title_cn": "猜字谜",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "1178",
        "title_slug": "number-of-valid-words-for-each-puzzle"
    },
    {
        "_id": "reformat-date",
        "title_cn": "转变日期格式",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "59.8%",
        "frontend_id": "1507",
        "title_slug": "reformat-date"
    },
    {
        "_id": "four-divisors",
        "title_cn": "四因数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "1390",
        "title_slug": "four-divisors"
    },
    {
        "_id": "balance-a-binary-search-tree",
        "title_cn": "将二叉搜索树变平衡",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "74.0%",
        "frontend_id": "1382",
        "title_slug": "balance-a-binary-search-tree"
    },
    {
        "_id": "constrained-subsequence-sum",
        "title_cn": "带限制的子序列和",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "dynamic-programming",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "1425",
        "title_slug": "constrained-subsequence-sum"
    },
    {
        "_id": "distance-between-bus-stops",
        "title_cn": "公交站间的距离",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "1184",
        "title_slug": "distance-between-bus-stops"
    },
    {
        "_id": "maximum-subarray-sum-with-one-deletion",
        "title_cn": "删除一次得到子数组最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "1186",
        "title_slug": "maximum-subarray-sum-with-one-deletion"
    },
    {
        "_id": "day-of-the-week",
        "title_cn": "一周中的第几天",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "1185",
        "title_slug": "day-of-the-week"
    },
    {
        "_id": "make-array-strictly-increasing",
        "title_cn": "使数组严格递增",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "1187",
        "title_slug": "make-array-strictly-increasing"
    },
    {
        "_id": "three-consecutive-odds",
        "title_cn": "存在连续三个奇数的数组",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "1550",
        "title_slug": "three-consecutive-odds"
    },
    {
        "_id": "range-frequency-queries",
        "title_cn": "区间内查询数字的频率",
        "difficulty": 2,
        "tags_q": [
            "design",
            "segment-tree",
            "array",
            "hash-table",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "32.3%",
        "frontend_id": "2080",
        "title_slug": "range-frequency-queries"
    },
    {
        "_id": "minimum-garden-perimeter-to-collect-enough-apples",
        "title_cn": "收集足够苹果的最小花园周长",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "1954",
        "title_slug": "minimum-garden-perimeter-to-collect-enough-apples"
    },
    {
        "_id": "kth-ancestor-of-a-tree-node",
        "title_cn": "树节点的第 K 个祖先",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "1483",
        "title_slug": "kth-ancestor-of-a-tree-node"
    },
    {
        "_id": "maximum-number-of-balloons",
        "title_cn": "“气球” 的最大数量",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "1189",
        "title_slug": "maximum-number-of-balloons"
    },
    {
        "_id": "reverse-substrings-between-each-pair-of-parentheses",
        "title_cn": "反转每对括号间的子串",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "64.9%",
        "frontend_id": "1190",
        "title_slug": "reverse-substrings-between-each-pair-of-parentheses"
    },
    {
        "_id": "k-concatenation-maximum-sum",
        "title_cn": "K 次串联后最大子数组之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "27.2%",
        "frontend_id": "1191",
        "title_slug": "k-concatenation-maximum-sum"
    },
    {
        "_id": "critical-connections-in-a-network",
        "title_cn": "查找集群内的关键连接",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "biconnected-component"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "1192",
        "title_slug": "critical-connections-in-a-network"
    },
    {
        "_id": "delete-characters-to-make-fancy-string",
        "title_cn": "删除字符使字符串变好",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "1957",
        "title_slug": "delete-characters-to-make-fancy-string"
    },
    {
        "_id": "minimum-moves-to-reach-target-score",
        "title_cn": "得到目标值的最少行动次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "2139",
        "title_slug": "minimum-moves-to-reach-target-score"
    },
    {
        "_id": "longest-happy-string",
        "title_cn": "最长快乐字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "1405",
        "title_slug": "longest-happy-string"
    },
    {
        "_id": "number-of-visible-people-in-a-queue",
        "title_cn": "队列中可以看到的人数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "1944",
        "title_slug": "number-of-visible-people-in-a-queue"
    },
    {
        "_id": "minimum-absolute-difference",
        "title_cn": "最小绝对差",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "72.3%",
        "frontend_id": "1200",
        "title_slug": "minimum-absolute-difference"
    },
    {
        "_id": "smallest-string-with-swaps",
        "title_cn": "交换字符串中的元素",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "1202",
        "title_slug": "smallest-string-with-swaps"
    },
    {
        "_id": "sort-items-by-groups-respecting-dependencies",
        "title_cn": "项目管理",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "1203",
        "title_slug": "sort-items-by-groups-respecting-dependencies"
    },
    {
        "_id": "largest-magic-square",
        "title_cn": "最大的幻方",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "56.9%",
        "frontend_id": "1895",
        "title_slug": "largest-magic-square"
    },
    {
        "_id": "count-artifacts-that-can-be-extracted",
        "title_cn": "统计可以提取的工件",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "50.1%",
        "frontend_id": "2201",
        "title_slug": "count-artifacts-that-can-be-extracted"
    },
    {
        "_id": "count-ways-to-build-rooms-in-an-ant-colony",
        "title_cn": "统计为蚁群构筑房间的不同顺序",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "graph",
            "topological-sort",
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "56.9%",
        "frontend_id": "1916",
        "title_slug": "count-ways-to-build-rooms-in-an-ant-colony"
    },
    {
        "_id": "fizz-buzz-multithreaded",
        "title_cn": "交替打印字符串",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "1195",
        "title_slug": "fizz-buzz-multithreaded"
    },
    {
        "_id": "unique-number-of-occurrences",
        "title_cn": "独一无二的出现次数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "73.4%",
        "frontend_id": "1207",
        "title_slug": "unique-number-of-occurrences"
    },
    {
        "_id": "remove-all-adjacent-duplicates-in-string-ii",
        "title_cn": "删除字符串中的所有相邻重复项 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "1209",
        "title_slug": "remove-all-adjacent-duplicates-in-string-ii"
    },
    {
        "_id": "get-equal-substrings-within-budget",
        "title_cn": "尽可能使字符串相等",
        "difficulty": 2,
        "tags_q": [
            "string",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "1208",
        "title_slug": "get-equal-substrings-within-budget"
    },
    {
        "_id": "minimum-moves-to-reach-target-with-rotations",
        "title_cn": "穿过迷宫的最少移动次数",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "64.2%",
        "frontend_id": "1210",
        "title_slug": "minimum-moves-to-reach-target-with-rotations"
    },
    {
        "_id": "where-will-the-ball-fall",
        "title_cn": "球会落何处",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "1706",
        "title_slug": "where-will-the-ball-fall"
    },
    {
        "_id": "sum-of-floored-pairs",
        "title_cn": "向下取整数对和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "binary-search",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "34.7%",
        "frontend_id": "1862",
        "title_slug": "sum-of-floored-pairs"
    },
    {
        "_id": "minimum-cost-to-move-chips-to-the-same-position",
        "title_cn": "玩筹码",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "1217",
        "title_slug": "minimum-cost-to-move-chips-to-the-same-position"
    },
    {
        "_id": "longest-arithmetic-subsequence-of-given-difference",
        "title_cn": "最长定差子序列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.8%",
        "frontend_id": "1218",
        "title_slug": "longest-arithmetic-subsequence-of-given-difference"
    },
    {
        "_id": "path-with-maximum-gold",
        "title_cn": "黄金矿工",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "1219",
        "title_slug": "path-with-maximum-gold"
    },
    {
        "_id": "count-vowels-permutation",
        "title_cn": "统计元音字母序列的数目",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.9%",
        "frontend_id": "1220",
        "title_slug": "count-vowels-permutation"
    },
    {
        "_id": "sort-the-jumbled-numbers",
        "title_cn": "将杂乱无章的数字排序",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.2%",
        "frontend_id": "2191",
        "title_slug": "sort-the-jumbled-numbers"
    },
    {
        "_id": "sum-of-numbers-with-units-digit-k",
        "title_cn": "个位数字为 K 的整数之和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "dynamic-programming",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "28.2%",
        "frontend_id": "2310",
        "title_slug": "sum-of-numbers-with-units-digit-k"
    },
    {
        "_id": "maximum-candies-allocated-to-k-children",
        "title_cn": "每个小孩最多能分到多少糖果",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "35.5%",
        "frontend_id": "2226",
        "title_slug": "maximum-candies-allocated-to-k-children"
    },
    {
        "_id": "maximum-product-of-the-length-of-two-palindromic-substrings",
        "title_cn": "两个回文子字符串长度的最大乘积",
        "difficulty": 3,
        "tags_q": [
            "string",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "32.8%",
        "frontend_id": "1960",
        "title_slug": "maximum-product-of-the-length-of-two-palindromic-substrings"
    },
    {
        "_id": "design-skiplist",
        "title_cn": "设计跳表",
        "difficulty": 3,
        "tags_q": [
            "design",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "1206",
        "title_slug": "design-skiplist"
    },
    {
        "_id": "the-dining-philosophers",
        "title_cn": "哲学家进餐",
        "difficulty": 2,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "1226",
        "title_slug": "the-dining-philosophers"
    },
    {
        "_id": "split-a-string-in-balanced-strings",
        "title_cn": "分割平衡字符串",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "1221",
        "title_slug": "split-a-string-in-balanced-strings"
    },
    {
        "_id": "queens-that-can-attack-the-king",
        "title_cn": "可以攻击国王的皇后",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "74.0%",
        "frontend_id": "1222",
        "title_slug": "queens-that-can-attack-the-king"
    },
    {
        "_id": "dice-roll-simulation",
        "title_cn": "掷骰子模拟",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "1223",
        "title_slug": "dice-roll-simulation"
    },
    {
        "_id": "maximum-equal-frequency",
        "title_cn": "最大相等频率",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "43.6%",
        "frontend_id": "1224",
        "title_slug": "maximum-equal-frequency"
    },
    {
        "_id": "perform-string-shifts",
        "title_cn": "字符串的左右移",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "58.1%",
        "frontend_id": "1427",
        "title_slug": "perform-string-shifts"
    },
    {
        "_id": "maximize-the-topmost-element-after-k-moves",
        "title_cn": "K 次操作后最大化顶端元素",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "22.1%",
        "frontend_id": "2202",
        "title_slug": "maximize-the-topmost-element-after-k-moves"
    },
    {
        "_id": "distance-to-a-cycle-in-undirected-graph",
        "title_cn": "无向图中到环的距离",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": true,
        "ac_rate": "68.8%",
        "frontend_id": "2204",
        "title_slug": "distance-to-a-cycle-in-undirected-graph"
    },
    {
        "_id": "maximum-score-of-spliced-array",
        "title_cn": "拼接数组的最大分数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "2321",
        "title_slug": "maximum-score-of-spliced-array"
    },
    {
        "_id": "check-if-it-is-a-straight-line",
        "title_cn": "缀点成线",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "1232",
        "title_slug": "check-if-it-is-a-straight-line"
    },
    {
        "_id": "remove-sub-folders-from-the-filesystem",
        "title_cn": "删除子文件夹",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "trie",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "61.5%",
        "frontend_id": "1233",
        "title_slug": "remove-sub-folders-from-the-filesystem"
    },
    {
        "_id": "replace-the-substring-for-balanced-string",
        "title_cn": "替换子串得到平衡字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "45.5%",
        "frontend_id": "1234",
        "title_slug": "replace-the-substring-for-balanced-string"
    },
    {
        "_id": "maximum-profit-in-job-scheduling",
        "title_cn": "规划兼职工作",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "1235",
        "title_slug": "maximum-profit-in-job-scheduling"
    },
    {
        "_id": "find-resultant-array-after-removing-anagrams",
        "title_cn": "移除字母异位词后的结果数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "60.2%",
        "frontend_id": "2273",
        "title_slug": "find-resultant-array-after-removing-anagrams"
    },
    {
        "_id": "find-players-with-zero-or-one-losses",
        "title_cn": "找出输掉零场或一场比赛的玩家",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2225",
        "title_slug": "find-players-with-zero-or-one-losses"
    },
    {
        "_id": "minimum-deletions-to-make-array-beautiful",
        "title_cn": "美化数组的最少删除数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "2216",
        "title_slug": "minimum-deletions-to-make-array-beautiful"
    },
    {
        "_id": "minimum-number-of-moves-to-make-palindrome",
        "title_cn": "得到回文串的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "binary-indexed-tree",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.3%",
        "frontend_id": "2193",
        "title_slug": "minimum-number-of-moves-to-make-palindrome"
    },
    {
        "_id": "find-positive-integer-solution-for-a-given-equation",
        "title_cn": "找出给定方程的正整数解",
        "difficulty": 2,
        "tags_q": [
            "math",
            "two-pointers",
            "binary-search",
            "interactive"
        ],
        "paid_only": false,
        "ac_rate": "78.2%",
        "frontend_id": "1237",
        "title_slug": "find-positive-integer-solution-for-a-given-equation"
    },
    {
        "_id": "circular-permutation-in-binary-representation",
        "title_cn": "循环码排列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "77.4%",
        "frontend_id": "1238",
        "title_slug": "circular-permutation-in-binary-representation"
    },
    {
        "_id": "maximum-length-of-a-concatenated-string-with-unique-characters",
        "title_cn": "串联字符串的最大长度",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "1239",
        "title_slug": "maximum-length-of-a-concatenated-string-with-unique-characters"
    },
    {
        "_id": "airplane-seat-assignment-probability",
        "title_cn": "飞机座位分配概率",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "math",
            "dynamic-programming",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "67.2%",
        "frontend_id": "1227",
        "title_slug": "airplane-seat-assignment-probability"
    },
    {
        "_id": "greatest-english-letter-in-upper-and-lower-case",
        "title_cn": "兼具大小写的最好英文字母",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "71.8%",
        "frontend_id": "2309",
        "title_slug": "greatest-english-letter-in-upper-and-lower-case"
    },
    {
        "_id": "first-unique-number",
        "title_cn": "第一个唯一数字",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "hash-table",
            "data-stream"
        ],
        "paid_only": true,
        "ac_rate": "53.8%",
        "frontend_id": "1429",
        "title_slug": "first-unique-number"
    },
    {
        "_id": "maximum-height-by-stacking-cuboids",
        "title_cn": "堆叠长方体的最大高度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "1691",
        "title_slug": "maximum-height-by-stacking-cuboids"
    },
    {
        "_id": "web-crawler-multithreaded",
        "title_cn": "多线程网页爬虫",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "concurrency"
        ],
        "paid_only": true,
        "ac_rate": "48.1%",
        "frontend_id": "1242",
        "title_slug": "web-crawler-multithreaded"
    },
    {
        "_id": "minimum-swaps-to-make-strings-equal",
        "title_cn": "交换字符使得字符串相同",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "1247",
        "title_slug": "minimum-swaps-to-make-strings-equal"
    },
    {
        "_id": "count-number-of-nice-subarrays",
        "title_cn": "统计「优美子数组」",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "1248",
        "title_slug": "count-number-of-nice-subarrays"
    },
    {
        "_id": "minimum-remove-to-make-valid-parentheses",
        "title_cn": "移除无效的括号",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "1249",
        "title_slug": "minimum-remove-to-make-valid-parentheses"
    },
    {
        "_id": "check-if-it-is-a-good-array",
        "title_cn": "检查「好数组」",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "1250",
        "title_slug": "check-if-it-is-a-good-array"
    },
    {
        "_id": "leftmost-column-with-at-least-a-one",
        "title_cn": "至少有一个 1 的最左端列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "interactive",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "62.0%",
        "frontend_id": "1428",
        "title_slug": "leftmost-column-with-at-least-a-one"
    },
    {
        "_id": "find-palindrome-with-fixed-length",
        "title_cn": "找到指定长度的回文数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "34.3%",
        "frontend_id": "2217",
        "title_slug": "find-palindrome-with-fixed-length"
    },
    {
        "_id": "cells-with-odd-values-in-a-matrix",
        "title_cn": "奇数值单元格的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.6%",
        "frontend_id": "1252",
        "title_slug": "cells-with-odd-values-in-a-matrix"
    },
    {
        "_id": "reconstruct-a-2-row-binary-matrix",
        "title_cn": "重构 2 行二进制矩阵",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "1253",
        "title_slug": "reconstruct-a-2-row-binary-matrix"
    },
    {
        "_id": "number-of-closed-islands",
        "title_cn": "统计封闭岛屿的数目",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "64.0%",
        "frontend_id": "1254",
        "title_slug": "number-of-closed-islands"
    },
    {
        "_id": "maximum-score-words-formed-by-letters",
        "title_cn": "得分最高的单词集合",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "79.7%",
        "frontend_id": "1255",
        "title_slug": "maximum-score-words-formed-by-letters"
    },
    {
        "_id": "calculate-amount-paid-in-taxes",
        "title_cn": "计算应缴税款总额",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "2303",
        "title_slug": "calculate-amount-paid-in-taxes"
    },
    {
        "_id": "number-of-single-divisor-triplets",
        "title_cn": "单因数三元组",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": true,
        "ac_rate": "56.0%",
        "frontend_id": "2198",
        "title_slug": "number-of-single-divisor-triplets"
    },
    {
        "_id": "maximum-font-to-fit-a-sentence-in-a-screen",
        "title_cn": "找出适应屏幕的最大字号",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "binary-search",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "63.2%",
        "frontend_id": "1618",
        "title_slug": "maximum-font-to-fit-a-sentence-in-a-screen"
    },
    {
        "_id": "number-of-ways-to-build-house-of-cards",
        "title_cn": "建造纸牌屋的方法数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "60.6%",
        "frontend_id": "2189",
        "title_slug": "number-of-ways-to-build-house-of-cards"
    },
    {
        "_id": "shift-2d-grid",
        "title_cn": "二维网格迁移",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "1260",
        "title_slug": "shift-2d-grid"
    },
    {
        "_id": "find-elements-in-a-contaminated-binary-tree",
        "title_cn": "在受污染的二叉树中查找元素",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "78.8%",
        "frontend_id": "1261",
        "title_slug": "find-elements-in-a-contaminated-binary-tree"
    },
    {
        "_id": "greatest-sum-divisible-by-three",
        "title_cn": "可被三整除的最大和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "1262",
        "title_slug": "greatest-sum-divisible-by-three"
    },
    {
        "_id": "minimum-moves-to-move-a-box-to-their-target-location",
        "title_cn": "推箱子",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "54.0%",
        "frontend_id": "1263",
        "title_slug": "minimum-moves-to-move-a-box-to-their-target-location"
    },
    {
        "_id": "counting-elements",
        "title_cn": "数元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "68.1%",
        "frontend_id": "1426",
        "title_slug": "counting-elements"
    },
    {
        "_id": "find-the-difference-of-two-arrays",
        "title_cn": "找出两数组的不同",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "2215",
        "title_slug": "find-the-difference-of-two-arrays"
    },
    {
        "_id": "maximum-value-of-k-coins-from-piles",
        "title_cn": "从栈中取出 K 个硬币的最大面值和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "2218",
        "title_slug": "maximum-value-of-k-coins-from-piles"
    },
    {
        "_id": "minimum-time-visiting-all-points",
        "title_cn": "访问所有点的最小时间",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "82.8%",
        "frontend_id": "1266",
        "title_slug": "minimum-time-visiting-all-points"
    },
    {
        "_id": "count-servers-that-communicate",
        "title_cn": "统计参与通信的服务器",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "counting",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "1267",
        "title_slug": "count-servers-that-communicate"
    },
    {
        "_id": "search-suggestions-system",
        "title_cn": "搜索推荐系统",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "string",
            "binary-search",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "1268",
        "title_slug": "search-suggestions-system"
    },
    {
        "_id": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
        "title_cn": "停在原地的方案数",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "1269",
        "title_slug": "number-of-ways-to-stay-in-the-same-place-after-some-steps"
    },
    {
        "_id": "find-winner-on-a-tic-tac-toe-game",
        "title_cn": "找出井字棋的获胜者",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "1275",
        "title_slug": "find-winner-on-a-tic-tac-toe-game"
    },
    {
        "_id": "number-of-burgers-with-no-waste-of-ingredients",
        "title_cn": "不浪费原料的汉堡制作方案",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "1276",
        "title_slug": "number-of-burgers-with-no-waste-of-ingredients"
    },
    {
        "_id": "count-square-submatrices-with-all-ones",
        "title_cn": "统计全为 1 的正方形子矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "1277",
        "title_slug": "count-square-submatrices-with-all-ones"
    },
    {
        "_id": "print-immutable-linked-list-in-reverse",
        "title_cn": "逆序打印不可变链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "90.9%",
        "frontend_id": "1265",
        "title_slug": "print-immutable-linked-list-in-reverse"
    },
    {
        "_id": "subtract-the-product-and-sum-of-digits-of-an-integer",
        "title_cn": "整数的各位积和之差",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "83.1%",
        "frontend_id": "1281",
        "title_slug": "subtract-the-product-and-sum-of-digits-of-an-integer"
    },
    {
        "_id": "group-the-people-given-the-group-size-they-belong-to",
        "title_cn": "用户分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "86.1%",
        "frontend_id": "1282",
        "title_slug": "group-the-people-given-the-group-size-they-belong-to"
    },
    {
        "_id": "find-the-smallest-divisor-given-a-threshold",
        "title_cn": "使结果不超过阈值的最小除数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "1283",
        "title_slug": "find-the-smallest-divisor-given-a-threshold"
    },
    {
        "_id": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
        "title_cn": "转化为全零矩阵的最少反转次数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "breadth-first-search",
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "1284",
        "title_slug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix"
    },
    {
        "_id": "traffic-light-controlled-intersection",
        "title_cn": "红绿灯路口",
        "difficulty": 1,
        "tags_q": [
            "concurrency"
        ],
        "paid_only": true,
        "ac_rate": "56.7%",
        "frontend_id": "1279",
        "title_slug": "traffic-light-controlled-intersection"
    },
    {
        "_id": "convert-binary-number-in-a-linked-list-to-integer",
        "title_cn": "二进制链表转整数",
        "difficulty": 1,
        "tags_q": [
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "79.9%",
        "frontend_id": "1290",
        "title_slug": "convert-binary-number-in-a-linked-list-to-integer"
    },
    {
        "_id": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
        "title_cn": "元素和小于等于阈值的正方形的最大边长",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "1292",
        "title_slug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold"
    },
    {
        "_id": "shortest-path-in-a-grid-with-obstacles-elimination",
        "title_cn": "网格中的最短路径",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "38.8%",
        "frontend_id": "1293",
        "title_slug": "shortest-path-in-a-grid-with-obstacles-elimination"
    },
    {
        "_id": "check-if-an-array-is-consecutive",
        "title_cn": "检查数组是否连贯",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "71.0%",
        "frontend_id": "2229",
        "title_slug": "check-if-an-array-is-consecutive"
    },
    {
        "_id": "fair-distribution-of-cookies",
        "title_cn": "公平分发饼干",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "73.0%",
        "frontend_id": "2305",
        "title_slug": "fair-distribution-of-cookies"
    },
    {
        "_id": "make-array-non-decreasing-or-non-increasing",
        "title_cn": "数组变为有序的最小操作次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "69.5%",
        "frontend_id": "2263",
        "title_slug": "make-array-non-decreasing-or-non-increasing"
    },
    {
        "_id": "find-numbers-with-even-number-of-digits",
        "title_cn": "统计位数为偶数的数字",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "79.5%",
        "frontend_id": "1295",
        "title_slug": "find-numbers-with-even-number-of-digits"
    },
    {
        "_id": "divide-array-in-sets-of-k-consecutive-numbers",
        "title_cn": "划分数组为连续数字的集合",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "1296",
        "title_slug": "divide-array-in-sets-of-k-consecutive-numbers"
    },
    {
        "_id": "maximum-number-of-occurrences-of-a-substring",
        "title_cn": "子串的最大出现次数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "1297",
        "title_slug": "maximum-number-of-occurrences-of-a-substring"
    },
    {
        "_id": "maximum-candies-you-can-get-from-boxes",
        "title_cn": "你能从盒子里获得的最大糖果数",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "1298",
        "title_slug": "maximum-candies-you-can-get-from-boxes"
    },
    {
        "_id": "find-n-unique-integers-sum-up-to-zero",
        "title_cn": "和为零的 N 个不同整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "1304",
        "title_slug": "find-n-unique-integers-sum-up-to-zero"
    },
    {
        "_id": "all-elements-in-two-binary-search-trees",
        "title_cn": "两棵二叉搜索树中的所有元素",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "1305",
        "title_slug": "all-elements-in-two-binary-search-trees"
    },
    {
        "_id": "jump-game-iii",
        "title_cn": "跳跃游戏 III",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "1306",
        "title_slug": "jump-game-iii"
    },
    {
        "_id": "verbal-arithmetic-puzzle",
        "title_cn": "口算难题",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "35.0%",
        "frontend_id": "1307",
        "title_slug": "verbal-arithmetic-puzzle"
    },
    {
        "_id": "find-the-k-beauty-of-a-number",
        "title_cn": "找到一个数字的 K 美丽值",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "2269",
        "title_slug": "find-the-k-beauty-of-a-number"
    },
    {
        "_id": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
        "title_cn": "有向无环图中一个节点的所有祖先",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "46.2%",
        "frontend_id": "2192",
        "title_slug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph"
    },
    {
        "_id": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
        "title_cn": "判断给定的序列是否是二叉树从根到叶的路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "54.5%",
        "frontend_id": "1430",
        "title_slug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree"
    },
    {
        "_id": "encrypt-and-decrypt-strings",
        "title_cn": "加密解密字符串",
        "difficulty": 3,
        "tags_q": [
            "design",
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "39.9%",
        "frontend_id": "2227",
        "title_slug": "encrypt-and-decrypt-strings"
    },
    {
        "_id": "decrypt-string-from-alphabet-to-integer-mapping",
        "title_cn": "解码字母到整数映射",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "1309",
        "title_slug": "decrypt-string-from-alphabet-to-integer-mapping"
    },
    {
        "_id": "xor-queries-of-a-subarray",
        "title_cn": "子数组异或查询",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "72.2%",
        "frontend_id": "1310",
        "title_slug": "xor-queries-of-a-subarray"
    },
    {
        "_id": "get-watched-videos-by-your-friends",
        "title_cn": "获取你好友已观看的视频",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.0%",
        "frontend_id": "1311",
        "title_slug": "get-watched-videos-by-your-friends"
    },
    {
        "_id": "minimum-insertion-steps-to-make-a-string-palindrome",
        "title_cn": "让字符串成为回文串的最少插入次数",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "69.8%",
        "frontend_id": "1312",
        "title_slug": "minimum-insertion-steps-to-make-a-string-palindrome"
    },
    {
        "_id": "convert-integer-to-the-sum-of-two-no-zero-integers",
        "title_cn": "将整数转换为两个无零整数的和",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "62.2%",
        "frontend_id": "1317",
        "title_slug": "convert-integer-to-the-sum-of-two-no-zero-integers"
    },
    {
        "_id": "number-of-operations-to-make-network-connected",
        "title_cn": "连通网络的操作次数",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "62.5%",
        "frontend_id": "1319",
        "title_slug": "number-of-operations-to-make-network-connected"
    },
    {
        "_id": "minimum-distance-to-type-a-word-using-two-fingers",
        "title_cn": "二指输入的的最小距离",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "1320",
        "title_slug": "minimum-distance-to-type-a-word-using-two-fingers"
    },
    {
        "_id": "number-of-steps-to-reduce-a-number-to-zero",
        "title_cn": "将数字变成 0 的操作次数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "75.5%",
        "frontend_id": "1342",
        "title_slug": "number-of-steps-to-reduce-a-number-to-zero"
    },
    {
        "_id": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
        "title_cn": "大小为 K 且平均值大于等于阈值的子数组数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "1343",
        "title_slug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold"
    },
    {
        "_id": "angle-between-hands-of-a-clock",
        "title_cn": "时钟指针的夹角",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.4%",
        "frontend_id": "1344",
        "title_slug": "angle-between-hands-of-a-clock"
    },
    {
        "_id": "jump-game-iv",
        "title_cn": "跳跃游戏 IV",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "45.5%",
        "frontend_id": "1345",
        "title_slug": "jump-game-iv"
    },
    {
        "_id": "maximum-69-number",
        "title_cn": "6 和 9 组成的最大数字",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "75.0%",
        "frontend_id": "1323",
        "title_slug": "maximum-69-number"
    },
    {
        "_id": "print-words-vertically",
        "title_cn": "竖直打印单词",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "60.2%",
        "frontend_id": "1324",
        "title_slug": "print-words-vertically"
    },
    {
        "_id": "delete-leaves-with-a-given-value",
        "title_cn": "删除给定值的叶子节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "1325",
        "title_slug": "delete-leaves-with-a-given-value"
    },
    {
        "_id": "minimum-number-of-taps-to-open-to-water-a-garden",
        "title_cn": "灌溉花园的最少水龙头数目",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.1%",
        "frontend_id": "1326",
        "title_slug": "minimum-number-of-taps-to-open-to-water-a-garden"
    },
    {
        "_id": "remove-palindromic-subsequences",
        "title_cn": "删除回文子序列",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.9%",
        "frontend_id": "1332",
        "title_slug": "remove-palindromic-subsequences"
    },
    {
        "_id": "filter-restaurants-by-vegan-friendly-price-and-distance",
        "title_cn": "餐厅过滤器",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "1333",
        "title_slug": "filter-restaurants-by-vegan-friendly-price-and-distance"
    },
    {
        "_id": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
        "title_cn": "阈值距离内邻居最少的城市",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "dynamic-programming",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "1334",
        "title_slug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance"
    },
    {
        "_id": "minimum-difficulty-of-a-job-schedule",
        "title_cn": "工作计划的最低难度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "1335",
        "title_slug": "minimum-difficulty-of-a-job-schedule"
    },
    {
        "_id": "sort-integers-by-the-number-of-1-bits",
        "title_cn": "根据数字二进制下 1 的数目排序",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "1356",
        "title_slug": "sort-integers-by-the-number-of-1-bits"
    },
    {
        "_id": "apply-discount-every-n-orders",
        "title_cn": "每隔 n 个顾客打折",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "1357",
        "title_slug": "apply-discount-every-n-orders"
    },
    {
        "_id": "number-of-substrings-containing-all-three-characters",
        "title_cn": "包含所有三种字符的子字符串数目",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "54.6%",
        "frontend_id": "1358",
        "title_slug": "number-of-substrings-containing-all-three-characters"
    },
    {
        "_id": "count-all-valid-pickup-and-delivery-options",
        "title_cn": "有效的快递序列数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "1359",
        "title_slug": "count-all-valid-pickup-and-delivery-options"
    },
    {
        "_id": "the-k-weakest-rows-in-a-matrix",
        "title_cn": "矩阵中战斗力最弱的 K 行",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search",
            "matrix",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "1337",
        "title_slug": "the-k-weakest-rows-in-a-matrix"
    },
    {
        "_id": "reduce-array-size-to-the-half",
        "title_cn": "数组大小减半",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.2%",
        "frontend_id": "1338",
        "title_slug": "reduce-array-size-to-the-half"
    },
    {
        "_id": "maximum-product-of-splitted-binary-tree",
        "title_cn": "分裂二叉树的最大乘积",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "1339",
        "title_slug": "maximum-product-of-splitted-binary-tree"
    },
    {
        "_id": "jump-game-v",
        "title_cn": "跳跃游戏 V",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "1340",
        "title_slug": "jump-game-v"
    },
    {
        "_id": "check-if-n-and-its-double-exist",
        "title_cn": "检查整数及其两倍数是否存在",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.8%",
        "frontend_id": "1346",
        "title_slug": "check-if-n-and-its-double-exist"
    },
    {
        "_id": "minimum-number-of-steps-to-make-two-strings-anagram",
        "title_cn": "制造字母异位词的最小步骤数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "1347",
        "title_slug": "minimum-number-of-steps-to-make-two-strings-anagram"
    },
    {
        "_id": "tweet-counts-per-frequency",
        "title_cn": "推文计数",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "binary-search",
            "ordered-set",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.6%",
        "frontend_id": "1348",
        "title_slug": "tweet-counts-per-frequency"
    },
    {
        "_id": "increasing-decreasing-string",
        "title_cn": "上升下降字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "79.0%",
        "frontend_id": "1370",
        "title_slug": "increasing-decreasing-string"
    },
    {
        "_id": "find-the-longest-substring-containing-vowels-in-even-counts",
        "title_cn": "每个元音包含偶数次的最长子字符串",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "1371",
        "title_slug": "find-the-longest-substring-containing-vowels-in-even-counts"
    },
    {
        "_id": "longest-zigzag-path-in-a-binary-tree",
        "title_cn": "二叉树中的最长交错路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "1372",
        "title_slug": "longest-zigzag-path-in-a-binary-tree"
    },
    {
        "_id": "maximum-sum-bst-in-binary-tree",
        "title_cn": "二叉搜索子树的最大键值和",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.2%",
        "frontend_id": "1373",
        "title_slug": "maximum-sum-bst-in-binary-tree"
    },
    {
        "_id": "count-negative-numbers-in-a-sorted-matrix",
        "title_cn": "统计有序矩阵中的负数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "74.5%",
        "frontend_id": "1351",
        "title_slug": "count-negative-numbers-in-a-sorted-matrix"
    },
    {
        "_id": "product-of-the-last-k-numbers",
        "title_cn": "最后 K 个数的乘积",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "math",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "1352",
        "title_slug": "product-of-the-last-k-numbers"
    },
    {
        "_id": "maximum-number-of-events-that-can-be-attended",
        "title_cn": "最多可以参加的会议数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "29.7%",
        "frontend_id": "1353",
        "title_slug": "maximum-number-of-events-that-can-be-attended"
    },
    {
        "_id": "construct-target-array-with-multiple-sums",
        "title_cn": "多次求和构造目标数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "29.2%",
        "frontend_id": "1354",
        "title_slug": "construct-target-array-with-multiple-sums"
    },
    {
        "_id": "how-many-numbers-are-smaller-than-the-current-number",
        "title_cn": "有多少小于当前数字的数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "82.2%",
        "frontend_id": "1365",
        "title_slug": "how-many-numbers-are-smaller-than-the-current-number"
    },
    {
        "_id": "rank-teams-by-votes",
        "title_cn": "通过投票对团队排名",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "1366",
        "title_slug": "rank-teams-by-votes"
    },
    {
        "_id": "linked-list-in-binary-tree",
        "title_cn": "二叉树中的链表",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "1367",
        "title_slug": "linked-list-in-binary-tree"
    },
    {
        "_id": "find-the-distance-value-between-two-arrays",
        "title_cn": "两个数组间的距离值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "1385",
        "title_slug": "find-the-distance-value-between-two-arrays"
    },
    {
        "_id": "cinema-seat-allocation",
        "title_cn": "安排电影院座位",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "36.1%",
        "frontend_id": "1386",
        "title_slug": "cinema-seat-allocation"
    },
    {
        "_id": "sort-integers-by-the-power-value",
        "title_cn": "将整数按权重排序",
        "difficulty": 2,
        "tags_q": [
            "memoization",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "1387",
        "title_slug": "sort-integers-by-the-power-value"
    },
    {
        "_id": "pizza-with-3n-slices",
        "title_cn": "3n 块披萨",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "64.4%",
        "frontend_id": "1388",
        "title_slug": "pizza-with-3n-slices"
    },
    {
        "_id": "generate-a-string-with-characters-that-have-odd-counts",
        "title_cn": "生成每种字符都是奇数个的字符串",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.8%",
        "frontend_id": "1374",
        "title_slug": "generate-a-string-with-characters-that-have-odd-counts"
    },
    {
        "_id": "number-of-times-binary-string-is-prefix-aligned",
        "title_cn": "二进制字符串前缀一致的次数",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "1375",
        "title_slug": "number-of-times-binary-string-is-prefix-aligned"
    },
    {
        "_id": "time-needed-to-inform-all-employees",
        "title_cn": "通知所有员工所需的时间",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "59.8%",
        "frontend_id": "1376",
        "title_slug": "time-needed-to-inform-all-employees"
    },
    {
        "_id": "frog-position-after-t-seconds",
        "title_cn": "T 秒后青蛙的位置",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "1377",
        "title_slug": "frog-position-after-t-seconds"
    },
    {
        "_id": "lucky-numbers-in-a-matrix",
        "title_cn": "矩阵中的幸运数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "1380",
        "title_slug": "lucky-numbers-in-a-matrix"
    },
    {
        "_id": "design-a-stack-with-increment-operation",
        "title_cn": "设计一个支持增量操作的栈",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "design",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "72.2%",
        "frontend_id": "1381",
        "title_slug": "design-a-stack-with-increment-operation"
    },
    {
        "_id": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
        "title_cn": "找出克隆二叉树中的相同节点",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "82.9%",
        "frontend_id": "1379",
        "title_slug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"
    },
    {
        "_id": "maximum-performance-of-a-team",
        "title_cn": "最大的团队表现值",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "35.9%",
        "frontend_id": "1383",
        "title_slug": "maximum-performance-of-a-team"
    },
    {
        "_id": "circle-and-rectangle-overlapping",
        "title_cn": "圆和矩形是否有重叠",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "1401",
        "title_slug": "circle-and-rectangle-overlapping"
    },
    {
        "_id": "construct-k-palindrome-strings",
        "title_cn": "构造 K 个回文字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "1400",
        "title_slug": "construct-k-palindrome-strings"
    },
    {
        "_id": "reducing-dishes",
        "title_cn": "做菜顺序",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "79.5%",
        "frontend_id": "1402",
        "title_slug": "reducing-dishes"
    },
    {
        "_id": "create-target-array-in-the-given-order",
        "title_cn": "按既定顺序创建目标数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "82.8%",
        "frontend_id": "1389",
        "title_slug": "create-target-array-in-the-given-order"
    },
    {
        "_id": "check-if-there-is-a-valid-path-in-a-grid",
        "title_cn": "检查网格中是否存在有效路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "1391",
        "title_slug": "check-if-there-is-a-valid-path-in-a-grid"
    },
    {
        "_id": "longest-happy-prefix",
        "title_cn": "最长快乐前缀",
        "difficulty": 3,
        "tags_q": [
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "45.1%",
        "frontend_id": "1392",
        "title_slug": "longest-happy-prefix"
    },
    {
        "_id": "find-lucky-integer-in-an-array",
        "title_cn": "找出数组中的幸运数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "1394",
        "title_slug": "find-lucky-integer-in-an-array"
    },
    {
        "_id": "count-number-of-teams",
        "title_cn": "统计作战单位数",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "1395",
        "title_slug": "count-number-of-teams"
    },
    {
        "_id": "design-underground-system",
        "title_cn": "设计地铁系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "1396",
        "title_slug": "design-underground-system"
    },
    {
        "_id": "find-all-good-strings",
        "title_cn": "找到所有好字符串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "45.1%",
        "frontend_id": "1397",
        "title_slug": "find-all-good-strings"
    },
    {
        "_id": "minimum-value-to-get-positive-step-by-step-sum",
        "title_cn": "逐步求和得到正数的最小值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "73.1%",
        "frontend_id": "1413",
        "title_slug": "minimum-value-to-get-positive-step-by-step-sum"
    },
    {
        "_id": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
        "title_cn": "和为 K 的最少斐波那契数字数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "1414",
        "title_slug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k"
    },
    {
        "_id": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
        "title_cn": "长度为 n 的开心字符串中字典序第 k 小的字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "1415",
        "title_slug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n"
    },
    {
        "_id": "restore-the-array",
        "title_cn": "恢复数组",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.3%",
        "frontend_id": "1416",
        "title_slug": "restore-the-array"
    },
    {
        "_id": "minimum-subsequence-in-non-increasing-order",
        "title_cn": "非递增顺序的最小子序列",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "1403",
        "title_slug": "minimum-subsequence-in-non-increasing-order"
    },
    {
        "_id": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
        "title_cn": "将二进制表示减到 1 的步骤数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "1404",
        "title_slug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one"
    },
    {
        "_id": "stone-game-iii",
        "title_cn": "石子游戏 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "1406",
        "title_slug": "stone-game-iii"
    },
    {
        "_id": "string-matching-in-an-array",
        "title_cn": "数组中的字符串匹配",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "64.4%",
        "frontend_id": "1408",
        "title_slug": "string-matching-in-an-array"
    },
    {
        "_id": "queries-on-a-permutation-with-key",
        "title_cn": "查询带键的排列",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "81.6%",
        "frontend_id": "1409",
        "title_slug": "queries-on-a-permutation-with-key"
    },
    {
        "_id": "html-entity-parser",
        "title_cn": "HTML 实体解析器",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "1410",
        "title_slug": "html-entity-parser"
    },
    {
        "_id": "number-of-ways-to-paint-n-3-grid",
        "title_cn": "给 N x 3 网格图涂色的方案数",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.0%",
        "frontend_id": "1411",
        "title_slug": "number-of-ways-to-paint-n-3-grid"
    },
    {
        "_id": "kids-with-the-greatest-number-of-candies",
        "title_cn": "拥有最多糖果的孩子",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "84.7%",
        "frontend_id": "1431",
        "title_slug": "kids-with-the-greatest-number-of-candies"
    },
    {
        "_id": "max-difference-you-can-get-from-changing-an-integer",
        "title_cn": "改变一个整数能得到的最大差值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "40.1%",
        "frontend_id": "1432",
        "title_slug": "max-difference-you-can-get-from-changing-an-integer"
    },
    {
        "_id": "check-if-a-string-can-break-another-string",
        "title_cn": "检查一个字符串是否可以打破另一个字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "1433",
        "title_slug": "check-if-a-string-can-break-another-string"
    },
    {
        "_id": "reformat-the-string",
        "title_cn": "重新格式化字符串",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.0%",
        "frontend_id": "1417",
        "title_slug": "reformat-the-string"
    },
    {
        "_id": "display-table-of-food-orders-in-a-restaurant",
        "title_cn": "点菜展示表",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "ordered-set",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "1418",
        "title_slug": "display-table-of-food-orders-in-a-restaurant"
    },
    {
        "_id": "minimum-number-of-frogs-croaking",
        "title_cn": "数青蛙",
        "difficulty": 2,
        "tags_q": [
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "1419",
        "title_slug": "minimum-number-of-frogs-croaking"
    },
    {
        "_id": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
        "title_cn": "生成数组",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "1420",
        "title_slug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons"
    },
    {
        "_id": "maximum-score-after-splitting-a-string",
        "title_cn": "分割字符串的最大得分",
        "difficulty": 1,
        "tags_q": [
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "56.9%",
        "frontend_id": "1422",
        "title_slug": "maximum-score-after-splitting-a-string"
    },
    {
        "_id": "maximum-points-you-can-obtain-from-cards",
        "title_cn": "可获得的最大点数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "1423",
        "title_slug": "maximum-points-you-can-obtain-from-cards"
    },
    {
        "_id": "diagonal-traverse-ii",
        "title_cn": "对角线遍历 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "1424",
        "title_slug": "diagonal-traverse-ii"
    },
    {
        "_id": "consecutive-characters",
        "title_cn": "连续字符",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "1446",
        "title_slug": "consecutive-characters"
    },
    {
        "_id": "simplified-fractions",
        "title_cn": "最简分数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "67.6%",
        "frontend_id": "1447",
        "title_slug": "simplified-fractions"
    },
    {
        "_id": "count-good-nodes-in-binary-tree",
        "title_cn": "统计二叉树中好节点的数目",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "1448",
        "title_slug": "count-good-nodes-in-binary-tree"
    },
    {
        "_id": "form-largest-integer-with-digits-that-add-up-to-target",
        "title_cn": "数位成本和为目标值的最大数字",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "62.2%",
        "frontend_id": "1449",
        "title_slug": "form-largest-integer-with-digits-that-add-up-to-target"
    },
    {
        "_id": "destination-city",
        "title_cn": "旅行终点站",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.6%",
        "frontend_id": "1436",
        "title_slug": "destination-city"
    },
    {
        "_id": "check-if-all-1s-are-at-least-length-k-places-away",
        "title_cn": "是否所有 1 都至少相隔 k 个元素",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "1437",
        "title_slug": "check-if-all-1s-are-at-least-length-k-places-away"
    },
    {
        "_id": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
        "title_cn": "绝对差不超过限制的最长连续子数组",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "ordered-set",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "1438",
        "title_slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"
    },
    {
        "_id": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
        "title_cn": "有序矩阵中的第 k 个最小数组和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "66.2%",
        "frontend_id": "1439",
        "title_slug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows"
    },
    {
        "_id": "build-an-array-with-stack-operations",
        "title_cn": "用栈操作构建数组",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "71.7%",
        "frontend_id": "1441",
        "title_slug": "build-an-array-with-stack-operations"
    },
    {
        "_id": "count-triplets-that-can-form-two-arrays-of-equal-xor",
        "title_cn": "形成两个异或相等数组的三元组数目",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "math",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "79.4%",
        "frontend_id": "1442",
        "title_slug": "count-triplets-that-can-form-two-arrays-of-equal-xor"
    },
    {
        "_id": "minimum-time-to-collect-all-apples-in-a-tree",
        "title_cn": "收集树上所有苹果的最少时间",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "1443",
        "title_slug": "minimum-time-to-collect-all-apples-in-a-tree"
    },
    {
        "_id": "number-of-ways-of-cutting-a-pizza",
        "title_cn": "切披萨的方案数",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "1444",
        "title_slug": "number-of-ways-of-cutting-a-pizza"
    },
    {
        "_id": "make-two-arrays-equal-by-reversing-subarrays",
        "title_cn": "通过翻转子数组使两个数组相等",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.2%",
        "frontend_id": "1460",
        "title_slug": "make-two-arrays-equal-by-reversing-subarrays"
    },
    {
        "_id": "check-if-a-string-contains-all-binary-codes-of-size-k",
        "title_cn": "检查一个字符串是否包含所有长度为 K 的二进制子串",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "1461",
        "title_slug": "check-if-a-string-contains-all-binary-codes-of-size-k"
    },
    {
        "_id": "course-schedule-iv",
        "title_cn": "课程表 IV",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "1462",
        "title_slug": "course-schedule-iv"
    },
    {
        "_id": "cherry-pickup-ii",
        "title_cn": "摘樱桃 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "62.6%",
        "frontend_id": "1463",
        "title_slug": "cherry-pickup-ii"
    },
    {
        "_id": "number-of-students-doing-homework-at-a-given-time",
        "title_cn": "在既定时间做作业的学生人数",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "82.3%",
        "frontend_id": "1450",
        "title_slug": "number-of-students-doing-homework-at-a-given-time"
    },
    {
        "_id": "rearrange-words-in-a-sentence",
        "title_cn": "重新排列句子中的单词",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "1451",
        "title_slug": "rearrange-words-in-a-sentence"
    },
    {
        "_id": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
        "title_cn": "收藏清单",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.6%",
        "frontend_id": "1452",
        "title_slug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list"
    },
    {
        "_id": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
        "title_cn": "检查单词是否为句中其他单词的前缀",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "1455",
        "title_slug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence"
    },
    {
        "_id": "maximum-number-of-vowels-in-a-substring-of-given-length",
        "title_cn": "定长子串中元音的最大数目",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "57.0%",
        "frontend_id": "1456",
        "title_slug": "maximum-number-of-vowels-in-a-substring-of-given-length"
    },
    {
        "_id": "pseudo-palindromic-paths-in-a-binary-tree",
        "title_cn": "二叉树中的伪回文路径",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "1457",
        "title_slug": "pseudo-palindromic-paths-in-a-binary-tree"
    },
    {
        "_id": "max-dot-product-of-two-subsequences",
        "title_cn": "两个子序列的最大点积",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "1458",
        "title_slug": "max-dot-product-of-two-subsequences"
    },
    {
        "_id": "final-prices-with-a-special-discount-in-a-shop",
        "title_cn": "商品折扣后的最终价格",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "1475",
        "title_slug": "final-prices-with-a-special-discount-in-a-shop"
    },
    {
        "_id": "allocate-mailboxes",
        "title_cn": "安排邮筒",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1478",
        "title_slug": "allocate-mailboxes"
    },
    {
        "_id": "subrectangle-queries",
        "title_cn": "子矩形查询",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "86.8%",
        "frontend_id": "1476",
        "title_slug": "subrectangle-queries"
    },
    {
        "_id": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
        "title_cn": "找两个和为目标值且不重叠的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "31.9%",
        "frontend_id": "1477",
        "title_slug": "find-two-non-overlapping-sub-arrays-each-with-target-sum"
    },
    {
        "_id": "maximum-product-of-two-elements-in-an-array",
        "title_cn": "数组中两元素的最大乘积",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "1464",
        "title_slug": "maximum-product-of-two-elements-in-an-array"
    },
    {
        "_id": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
        "title_cn": "切割后面积最大的蛋糕",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "42.8%",
        "frontend_id": "1465",
        "title_slug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"
    },
    {
        "_id": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "title_cn": "重新规划路线",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "60.4%",
        "frontend_id": "1466",
        "title_slug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero"
    },
    {
        "_id": "shuffle-the-array",
        "title_cn": "重新排列数组",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "83.7%",
        "frontend_id": "1470",
        "title_slug": "shuffle-the-array"
    },
    {
        "_id": "the-k-strongest-values-in-an-array",
        "title_cn": "数组中的 k 个最强值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.2%",
        "frontend_id": "1471",
        "title_slug": "the-k-strongest-values-in-an-array"
    },
    {
        "_id": "design-browser-history",
        "title_cn": "设计浏览器历史记录",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "design",
            "array",
            "linked-list",
            "data-stream",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "1472",
        "title_slug": "design-browser-history"
    },
    {
        "_id": "paint-house-iii",
        "title_cn": "粉刷房子 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.1%",
        "frontend_id": "1473",
        "title_slug": "paint-house-iii"
    },
    {
        "_id": "average-salary-excluding-the-minimum-and-maximum-salary",
        "title_cn": "去掉最低工资和最高工资后的工资平均值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "62.4%",
        "frontend_id": "1491",
        "title_slug": "average-salary-excluding-the-minimum-and-maximum-salary"
    },
    {
        "_id": "longest-subarray-of-1s-after-deleting-one-element",
        "title_cn": "删掉一个元素以后全为 1 的最长子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "62.7%",
        "frontend_id": "1493",
        "title_slug": "longest-subarray-of-1s-after-deleting-one-element"
    },
    {
        "_id": "parallel-courses-ii",
        "title_cn": "并行课程 II",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "graph",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "1494",
        "title_slug": "parallel-courses-ii"
    },
    {
        "_id": "running-sum-of-1d-array",
        "title_cn": "一维数组的动态和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "76.4%",
        "frontend_id": "1480",
        "title_slug": "running-sum-of-1d-array"
    },
    {
        "_id": "least-number-of-unique-integers-after-k-removals",
        "title_cn": "不同整数的最少数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "1481",
        "title_slug": "least-number-of-unique-integers-after-k-removals"
    },
    {
        "_id": "minimum-number-of-days-to-make-m-bouquets",
        "title_cn": "制作 m 束花所需的最少天数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "1482",
        "title_slug": "minimum-number-of-days-to-make-m-bouquets"
    },
    {
        "_id": "find-all-the-lonely-nodes",
        "title_cn": "寻找所有的独生节点",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "81.9%",
        "frontend_id": "1469",
        "title_slug": "find-all-the-lonely-nodes"
    },
    {
        "_id": "xor-operation-in-an-array",
        "title_cn": "数组异或操作",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "84.3%",
        "frontend_id": "1486",
        "title_slug": "xor-operation-in-an-array"
    },
    {
        "_id": "making-file-names-unique",
        "title_cn": "保证文件名唯一",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "1487",
        "title_slug": "making-file-names-unique"
    },
    {
        "_id": "avoid-flood-in-the-city",
        "title_cn": "避免洪水泛滥",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "binary-search",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "30.8%",
        "frontend_id": "1488",
        "title_slug": "avoid-flood-in-the-city"
    },
    {
        "_id": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
        "title_cn": "找到最小生成树里的关键边和伪关键边",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "minimum-spanning-tree",
            "sorting",
            "strongly-connected-component"
        ],
        "paid_only": false,
        "ac_rate": "66.0%",
        "frontend_id": "1489",
        "title_slug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree"
    },
    {
        "_id": "range-sum-of-sorted-subarray-sums",
        "title_cn": "子数组和排序后的区间和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "1508",
        "title_slug": "range-sum-of-sorted-subarray-sums"
    },
    {
        "_id": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
        "title_cn": "三次操作后最大值与最小值的最小差",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "1509",
        "title_slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves"
    },
    {
        "_id": "stone-game-iv",
        "title_cn": "石子游戏 IV",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "1510",
        "title_slug": "stone-game-iv"
    },
    {
        "_id": "delete-n-nodes-after-m-nodes-of-a-linked-list",
        "title_cn": "删除链表 M 个节点之后的 N 个节点",
        "difficulty": 1,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": true,
        "ac_rate": "70.0%",
        "frontend_id": "1474",
        "title_slug": "delete-n-nodes-after-m-nodes-of-a-linked-list"
    },
    {
        "_id": "path-crossing",
        "title_cn": "判断路径是否相交",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.1%",
        "frontend_id": "1496",
        "title_slug": "path-crossing"
    },
    {
        "_id": "check-if-array-pairs-are-divisible-by-k",
        "title_cn": "检查数组对是否可以被 k 整除",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "40.3%",
        "frontend_id": "1497",
        "title_slug": "check-if-array-pairs-are-divisible-by-k"
    },
    {
        "_id": "number-of-subsequences-that-satisfy-the-given-sum-condition",
        "title_cn": "满足条件的子序列数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "38.8%",
        "frontend_id": "1498",
        "title_slug": "number-of-subsequences-that-satisfy-the-given-sum-condition"
    },
    {
        "_id": "max-value-of-equation",
        "title_cn": "满足不等式的最大值",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "1499",
        "title_slug": "max-value-of-equation"
    },
    {
        "_id": "clone-binary-tree-with-random-pointer",
        "title_cn": "克隆含随机指针的二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "78.5%",
        "frontend_id": "1485",
        "title_slug": "clone-binary-tree-with-random-pointer"
    },
    {
        "_id": "can-make-arithmetic-progression-from-sequence",
        "title_cn": "判断能否形成等差数列",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "68.3%",
        "frontend_id": "1502",
        "title_slug": "can-make-arithmetic-progression-from-sequence"
    },
    {
        "_id": "last-moment-before-all-ants-fall-out-of-a-plank",
        "title_cn": "所有蚂蚁掉下来前的最后一刻",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "1503",
        "title_slug": "last-moment-before-all-ants-fall-out-of-a-plank"
    },
    {
        "_id": "count-submatrices-with-all-ones",
        "title_cn": "统计全 1 子矩形",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "matrix",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "63.2%",
        "frontend_id": "1504",
        "title_slug": "count-submatrices-with-all-ones"
    },
    {
        "_id": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
        "title_cn": "最多 K 次交换相邻数位后得到的最小整数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "binary-indexed-tree",
            "segment-tree",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "41.0%",
        "frontend_id": "1505",
        "title_slug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits"
    },
    {
        "_id": "count-odd-numbers-in-an-interval-range",
        "title_cn": "在区间范围内统计奇数数目",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "1523",
        "title_slug": "count-odd-numbers-in-an-interval-range"
    },
    {
        "_id": "number-of-sub-arrays-with-odd-sum",
        "title_cn": "和为奇数的子数组数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "1524",
        "title_slug": "number-of-sub-arrays-with-odd-sum"
    },
    {
        "_id": "number-of-good-ways-to-split-a-string",
        "title_cn": "字符串的好分割数目",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "1525",
        "title_slug": "number-of-good-ways-to-split-a-string"
    },
    {
        "_id": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
        "title_cn": "形成目标数组的子数组最少增加次数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "65.9%",
        "frontend_id": "1526",
        "title_slug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array"
    },
    {
        "_id": "clone-n-ary-tree",
        "title_cn": "克隆 N 叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "82.6%",
        "frontend_id": "1490",
        "title_slug": "clone-n-ary-tree"
    },
    {
        "_id": "number-of-good-pairs",
        "title_cn": "好数对的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "83.3%",
        "frontend_id": "1512",
        "title_slug": "number-of-good-pairs"
    },
    {
        "_id": "number-of-substrings-with-only-1s",
        "title_cn": "仅含 1 的子串数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "1513",
        "title_slug": "number-of-substrings-with-only-1s"
    },
    {
        "_id": "string-compression-ii",
        "title_cn": "压缩字符串 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.2%",
        "frontend_id": "1531",
        "title_slug": "string-compression-ii"
    },
    {
        "_id": "best-position-for-a-service-centre",
        "title_cn": "服务中心的最佳位置",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "math",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "35.1%",
        "frontend_id": "1515",
        "title_slug": "best-position-for-a-service-centre"
    },
    {
        "_id": "design-a-file-sharing-system",
        "title_cn": "设计文件分享系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "data-stream",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "30.2%",
        "frontend_id": "1500",
        "title_slug": "design-a-file-sharing-system"
    },
    {
        "_id": "water-bottles",
        "title_cn": "换水问题",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "1518",
        "title_slug": "water-bottles"
    },
    {
        "_id": "number-of-nodes-in-the-sub-tree-with-the-same-label",
        "title_cn": "子树中标签相同的节点数",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "34.2%",
        "frontend_id": "1519",
        "title_slug": "number-of-nodes-in-the-sub-tree-with-the-same-label"
    },
    {
        "_id": "maximum-number-of-non-overlapping-substrings",
        "title_cn": "最多的不重叠子字符串",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "36.4%",
        "frontend_id": "1520",
        "title_slug": "maximum-number-of-non-overlapping-substrings"
    },
    {
        "_id": "find-a-value-of-a-mysterious-function-closest-to-target",
        "title_cn": "找到最接近目标值的函数值",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "segment-tree",
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "1521",
        "title_slug": "find-a-value-of-a-mysterious-function-closest-to-target"
    },
    {
        "_id": "kth-missing-positive-number",
        "title_cn": "第 k 个缺失的正整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "54.2%",
        "frontend_id": "1539",
        "title_slug": "kth-missing-positive-number"
    },
    {
        "_id": "can-convert-string-in-k-moves",
        "title_cn": "K 次操作转变字符串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "33.9%",
        "frontend_id": "1540",
        "title_slug": "can-convert-string-in-k-moves"
    },
    {
        "_id": "minimum-insertions-to-balance-a-parentheses-string",
        "title_cn": "平衡括号字符串的最少插入次数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "1541",
        "title_slug": "minimum-insertions-to-balance-a-parentheses-string"
    },
    {
        "_id": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
        "title_cn": "和为目标值且不重叠的非空子数组的最大数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "1546",
        "title_slug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target"
    },
    {
        "_id": "find-root-of-n-ary-tree",
        "title_cn": "找到 N 叉树的根节点",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "depth-first-search",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "80.3%",
        "frontend_id": "1506",
        "title_slug": "find-root-of-n-ary-tree"
    },
    {
        "_id": "shuffle-string",
        "title_cn": "重新排列字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "78.7%",
        "frontend_id": "1528",
        "title_slug": "shuffle-string"
    },
    {
        "_id": "minimum-suffix-flips",
        "title_cn": "最少的后缀翻转次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "1529",
        "title_slug": "minimum-suffix-flips"
    },
    {
        "_id": "number-of-good-leaf-nodes-pairs",
        "title_cn": "好叶子节点对的数量",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "59.1%",
        "frontend_id": "1530",
        "title_slug": "number-of-good-leaf-nodes-pairs"
    },
    {
        "_id": "move-sub-tree-of-n-ary-tree",
        "title_cn": "移动 N 叉树的子树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search"
        ],
        "paid_only": true,
        "ac_rate": "52.5%",
        "frontend_id": "1516",
        "title_slug": "move-sub-tree-of-n-ary-tree"
    },
    {
        "_id": "count-good-triplets",
        "title_cn": "统计好三元组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "75.2%",
        "frontend_id": "1534",
        "title_slug": "count-good-triplets"
    },
    {
        "_id": "find-the-winner-of-an-array-game",
        "title_cn": "找出数组游戏的赢家",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "1535",
        "title_slug": "find-the-winner-of-an-array-game"
    },
    {
        "_id": "minimum-swaps-to-arrange-a-binary-grid",
        "title_cn": "排布二进制网格的最少交换次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "1536",
        "title_slug": "minimum-swaps-to-arrange-a-binary-grid"
    },
    {
        "_id": "get-the-maximum-score",
        "title_cn": "最大得分",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "1537",
        "title_slug": "get-the-maximum-score"
    },
    {
        "_id": "thousand-separator",
        "title_cn": "千位分隔数",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "1556",
        "title_slug": "thousand-separator"
    },
    {
        "_id": "minimum-number-of-vertices-to-reach-all-nodes",
        "title_cn": "可以到达所有点的最少点数目",
        "difficulty": 2,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "81.6%",
        "frontend_id": "1557",
        "title_slug": "minimum-number-of-vertices-to-reach-all-nodes"
    },
    {
        "_id": "minimum-numbers-of-function-calls-to-make-target-array",
        "title_cn": "得到目标数组的最少函数调用次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "1558",
        "title_slug": "minimum-numbers-of-function-calls-to-make-target-array"
    },
    {
        "_id": "detect-cycles-in-2d-grid",
        "title_cn": "二维网格图中探测环",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "41.8%",
        "frontend_id": "1559",
        "title_slug": "detect-cycles-in-2d-grid"
    },
    {
        "_id": "diameter-of-n-ary-tree",
        "title_cn": "N 叉树的直径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search"
        ],
        "paid_only": true,
        "ac_rate": "71.9%",
        "frontend_id": "1522",
        "title_slug": "diameter-of-n-ary-tree"
    },
    {
        "_id": "make-the-string-great",
        "title_cn": "整理字符串",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "1544",
        "title_slug": "make-the-string-great"
    },
    {
        "_id": "find-kth-bit-in-nth-binary-string",
        "title_cn": "找出第 N 个二进制字符串中的第 K 位",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "1545",
        "title_slug": "find-kth-bit-in-nth-binary-string"
    },
    {
        "_id": "find-longest-awesome-substring",
        "title_cn": "找出最长的超赞子字符串",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "45.0%",
        "frontend_id": "1542",
        "title_slug": "find-longest-awesome-substring"
    },
    {
        "_id": "minimum-cost-to-cut-a-stick",
        "title_cn": "切棍子的最小成本",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "1547",
        "title_slug": "minimum-cost-to-cut-a-stick"
    },
    {
        "_id": "find-the-index-of-the-large-integer",
        "title_cn": "找到最大整数的索引",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "58.6%",
        "frontend_id": "1533",
        "title_slug": "find-the-index-of-the-large-integer"
    },
    {
        "_id": "minimum-operations-to-make-array-equal",
        "title_cn": "使数组中所有元素相等的最小操作数",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "82.3%",
        "frontend_id": "1551",
        "title_slug": "minimum-operations-to-make-array-equal"
    },
    {
        "_id": "magnetic-force-between-two-balls",
        "title_cn": "两球之间的磁力",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "1552",
        "title_slug": "magnetic-force-between-two-balls"
    },
    {
        "_id": "minimum-number-of-days-to-eat-n-oranges",
        "title_cn": "吃掉 N 个橘子的最少天数",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "33.1%",
        "frontend_id": "1553",
        "title_slug": "minimum-number-of-days-to-eat-n-oranges"
    },
    {
        "_id": "matrix-diagonal-sum",
        "title_cn": "矩阵对角线元素的和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "82.9%",
        "frontend_id": "1572",
        "title_slug": "matrix-diagonal-sum"
    },
    {
        "_id": "number-of-ways-to-split-a-string",
        "title_cn": "分割字符串的方案数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "31.6%",
        "frontend_id": "1573",
        "title_slug": "number-of-ways-to-split-a-string"
    },
    {
        "_id": "shortest-subarray-to-be-removed-to-make-array-sorted",
        "title_cn": "删除最短的子数组使剩余数组有序",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "two-pointers",
            "binary-search",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "43.3%",
        "frontend_id": "1574",
        "title_slug": "shortest-subarray-to-be-removed-to-make-array-sorted"
    },
    {
        "_id": "count-all-possible-routes",
        "title_cn": "统计所有可行路径",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "1575",
        "title_slug": "count-all-possible-routes"
    },
    {
        "_id": "guess-the-majority-in-a-hidden-array",
        "title_cn": "找出隐藏数组中出现次数最多的元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "59.9%",
        "frontend_id": "1538",
        "title_slug": "guess-the-majority-in-a-hidden-array"
    },
    {
        "_id": "most-visited-sector-in-a-circular-track",
        "title_cn": "圆形赛道上经过次数最多的扇区",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "1560",
        "title_slug": "most-visited-sector-in-a-circular-track"
    },
    {
        "_id": "maximum-number-of-coins-you-can-get",
        "title_cn": "你可以获得的最大硬币数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "game-theory",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "1561",
        "title_slug": "maximum-number-of-coins-you-can-get"
    },
    {
        "_id": "find-latest-group-of-size-m",
        "title_cn": "查找大小为 M 的最新分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "37.1%",
        "frontend_id": "1562",
        "title_slug": "find-latest-group-of-size-m"
    },
    {
        "_id": "stone-game-v",
        "title_cn": "石子游戏 V",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "1563",
        "title_slug": "stone-game-v"
    },
    {
        "_id": "the-most-similar-path-in-a-graph",
        "title_cn": "图中最相似的路径",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "66.3%",
        "frontend_id": "1548",
        "title_slug": "the-most-similar-path-in-a-graph"
    },
    {
        "_id": "detect-pattern-of-length-m-repeated-k-or-more-times",
        "title_cn": "重复至少 K 次且长度为 M 的模式",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "1566",
        "title_slug": "detect-pattern-of-length-m-repeated-k-or-more-times"
    },
    {
        "_id": "maximum-length-of-subarray-with-positive-product",
        "title_cn": "乘积为正数的最长子数组长度",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "1567",
        "title_slug": "maximum-length-of-subarray-with-positive-product"
    },
    {
        "_id": "minimum-number-of-days-to-disconnect-island",
        "title_cn": "使陆地分离的最少天数",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix",
            "strongly-connected-component"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "1568",
        "title_slug": "minimum-number-of-days-to-disconnect-island"
    },
    {
        "_id": "number-of-ways-to-reorder-array-to-get-same-bst",
        "title_cn": "将子数组重新排序得到同一个二叉搜索树的方案数",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "union-find",
            "binary-search-tree",
            "memoization",
            "array",
            "math",
            "divide-and-conquer",
            "dynamic-programming",
            "binary-tree",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "49.2%",
        "frontend_id": "1569",
        "title_slug": "number-of-ways-to-reorder-array-to-get-same-bst"
    },
    {
        "_id": "sum-of-all-odd-length-subarrays",
        "title_cn": "所有奇数长度子数组的和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "82.8%",
        "frontend_id": "1588",
        "title_slug": "sum-of-all-odd-length-subarrays"
    },
    {
        "_id": "maximum-sum-obtained-of-any-permutation",
        "title_cn": "所有排列中的最大和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "33.2%",
        "frontend_id": "1589",
        "title_slug": "maximum-sum-obtained-of-any-permutation"
    },
    {
        "_id": "strange-printer-ii",
        "title_cn": "奇怪的打印机 II",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "64.4%",
        "frontend_id": "1591",
        "title_slug": "strange-printer-ii"
    },
    {
        "_id": "strings-differ-by-one-character",
        "title_cn": "只有一个不同字符的字符串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": true,
        "ac_rate": "46.9%",
        "frontend_id": "1554",
        "title_slug": "strings-differ-by-one-character"
    },
    {
        "_id": "replace-all-s-to-avoid-consecutive-repeating-characters",
        "title_cn": "替换所有的问号",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "1576",
        "title_slug": "replace-all-s-to-avoid-consecutive-repeating-characters"
    },
    {
        "_id": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
        "title_cn": "数的平方等于两数乘积的方法数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "35.6%",
        "frontend_id": "1577",
        "title_slug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers"
    },
    {
        "_id": "minimum-time-to-make-rope-colorful",
        "title_cn": "使绳子变成彩色的最短时间",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "1578",
        "title_slug": "minimum-time-to-make-rope-colorful"
    },
    {
        "_id": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
        "title_cn": "保证图可完全遍历",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "1579",
        "title_slug": "remove-max-number-of-edges-to-keep-graph-fully-traversable"
    },
    {
        "_id": "put-boxes-into-the-warehouse-i",
        "title_cn": "把箱子放进仓库里 I",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "59.0%",
        "frontend_id": "1564",
        "title_slug": "put-boxes-into-the-warehouse-i"
    },
    {
        "_id": "special-positions-in-a-binary-matrix",
        "title_cn": "二进制矩阵中的特殊位置",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "69.2%",
        "frontend_id": "1582",
        "title_slug": "special-positions-in-a-binary-matrix"
    },
    {
        "_id": "count-unhappy-friends",
        "title_cn": "统计不开心的朋友",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "67.8%",
        "frontend_id": "1583",
        "title_slug": "count-unhappy-friends"
    },
    {
        "_id": "min-cost-to-connect-all-points",
        "title_cn": "连接所有点的最小费用",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "graph",
            "array",
            "minimum-spanning-tree"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1584",
        "title_slug": "min-cost-to-connect-all-points"
    },
    {
        "_id": "check-if-string-is-transformable-with-substring-sort-operations",
        "title_cn": "检查字符串是否可以通过排序子字符串得到另一个字符串",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "1585",
        "title_slug": "check-if-string-is-transformable-with-substring-sort-operations"
    },
    {
        "_id": "design-parking-system",
        "title_cn": "设计停车系统",
        "difficulty": 1,
        "tags_q": [
            "design",
            "counting",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "83.5%",
        "frontend_id": "1603",
        "title_slug": "design-parking-system"
    },
    {
        "_id": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
        "title_cn": "警告一小时内使用相同员工卡大于等于三次的人",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "1604",
        "title_slug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period"
    },
    {
        "_id": "find-servers-that-handled-most-number-of-requests",
        "title_cn": "找到处理最多请求的服务器",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "1606",
        "title_slug": "find-servers-that-handled-most-number-of-requests"
    },
    {
        "_id": "find-valid-matrix-given-row-and-column-sums",
        "title_cn": "给定行和列的和求可行矩阵",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "80.9%",
        "frontend_id": "1605",
        "title_slug": "find-valid-matrix-given-row-and-column-sums"
    },
    {
        "_id": "dot-product-of-two-sparse-vectors",
        "title_cn": "两个稀疏向量的点积",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "88.5%",
        "frontend_id": "1570",
        "title_slug": "dot-product-of-two-sparse-vectors"
    },
    {
        "_id": "rearrange-spaces-between-words",
        "title_cn": "重新排列单词间的空格",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "1592",
        "title_slug": "rearrange-spaces-between-words"
    },
    {
        "_id": "split-a-string-into-the-max-number-of-unique-substrings",
        "title_cn": "拆分字符串使唯一子字符串的数目最大",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "58.4%",
        "frontend_id": "1593",
        "title_slug": "split-a-string-into-the-max-number-of-unique-substrings"
    },
    {
        "_id": "maximum-non-negative-product-in-a-matrix",
        "title_cn": "矩阵的最大非负积",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "34.8%",
        "frontend_id": "1594",
        "title_slug": "maximum-non-negative-product-in-a-matrix"
    },
    {
        "_id": "minimum-cost-to-connect-two-groups-of-points",
        "title_cn": "连通两组点的最小成本",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "1595",
        "title_slug": "minimum-cost-to-connect-two-groups-of-points"
    },
    {
        "_id": "put-boxes-into-the-warehouse-ii",
        "title_cn": "把箱子放进仓库里 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "57.7%",
        "frontend_id": "1580",
        "title_slug": "put-boxes-into-the-warehouse-ii"
    },
    {
        "_id": "crawler-log-folder",
        "title_cn": "文件夹操作日志搜集器",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "1598",
        "title_slug": "crawler-log-folder"
    },
    {
        "_id": "maximum-profit-of-operating-a-centennial-wheel",
        "title_cn": "经营摩天轮的最大利润",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "53.2%",
        "frontend_id": "1599",
        "title_slug": "maximum-profit-of-operating-a-centennial-wheel"
    },
    {
        "_id": "throne-inheritance",
        "title_cn": "王位继承顺序",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "design",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "1600",
        "title_slug": "throne-inheritance"
    },
    {
        "_id": "maximum-number-of-achievable-transfer-requests",
        "title_cn": "最多可达成的换楼请求数目",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "62.0%",
        "frontend_id": "1601",
        "title_slug": "maximum-number-of-achievable-transfer-requests"
    },
    {
        "_id": "number-of-sets-of-k-non-overlapping-line-segments",
        "title_cn": "大小为 K 的不重叠线段的数目",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "1621",
        "title_slug": "number-of-sets-of-k-non-overlapping-line-segments"
    },
    {
        "_id": "coordinate-with-maximum-network-quality",
        "title_cn": "网络信号最好的坐标",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "1620",
        "title_slug": "coordinate-with-maximum-network-quality"
    },
    {
        "_id": "cat-and-mouse-ii",
        "title_cn": "猫和老鼠 II",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "memoization",
            "array",
            "math",
            "dynamic-programming",
            "game-theory",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "1728",
        "title_slug": "cat-and-mouse-ii"
    },
    {
        "_id": "fancy-sequence",
        "title_cn": "奇妙序列",
        "difficulty": 3,
        "tags_q": [
            "design",
            "segment-tree",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "18.1%",
        "frontend_id": "1622",
        "title_slug": "fancy-sequence"
    },
    {
        "_id": "binary-search-tree-iterator-ii",
        "title_cn": "二叉搜索树迭代器 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "design",
            "binary-search-tree",
            "binary-tree",
            "iterator"
        ],
        "paid_only": true,
        "ac_rate": "59.8%",
        "frontend_id": "1586",
        "title_slug": "binary-search-tree-iterator-ii"
    },
    {
        "_id": "special-array-with-x-elements-greater-than-or-equal-x",
        "title_cn": "特殊数组的特征值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "1608",
        "title_slug": "special-array-with-x-elements-greater-than-or-equal-x"
    },
    {
        "_id": "even-odd-tree",
        "title_cn": "奇偶树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "1609",
        "title_slug": "even-odd-tree"
    },
    {
        "_id": "minimum-one-bit-operations-to-make-integers-zero",
        "title_cn": "使整数变为 0 的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.4%",
        "frontend_id": "1611",
        "title_slug": "minimum-one-bit-operations-to-make-integers-zero"
    },
    {
        "_id": "maximum-number-of-visible-points",
        "title_cn": "可见点的最大数目",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "1610",
        "title_slug": "maximum-number-of-visible-points"
    },
    {
        "_id": "build-binary-expression-tree-from-infix-expression",
        "title_cn": "根据中缀表达式构造二叉表达式树",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "tree",
            "string",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "66.0%",
        "frontend_id": "1597",
        "title_slug": "build-binary-expression-tree-from-infix-expression"
    },
    {
        "_id": "maximum-nesting-depth-of-the-parentheses",
        "title_cn": "括号的最大嵌套深度",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.8%",
        "frontend_id": "1614",
        "title_slug": "maximum-nesting-depth-of-the-parentheses"
    },
    {
        "_id": "maximal-network-rank",
        "title_cn": "最大网络秩",
        "difficulty": 2,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "60.4%",
        "frontend_id": "1615",
        "title_slug": "maximal-network-rank"
    },
    {
        "_id": "split-two-strings-to-make-palindrome",
        "title_cn": "分割两个字符串得到回文串",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "1616",
        "title_slug": "split-two-strings-to-make-palindrome"
    },
    {
        "_id": "count-subtrees-with-max-distance-between-cities",
        "title_cn": "统计子树中城市之间最大距离",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "dynamic-programming",
            "bitmask",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "78.7%",
        "frontend_id": "1617",
        "title_slug": "count-subtrees-with-max-distance-between-cities"
    },
    {
        "_id": "sort-array-by-increasing-frequency",
        "title_cn": "按照频率将数组升序排序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "1636",
        "title_slug": "sort-array-by-increasing-frequency"
    },
    {
        "_id": "widest-vertical-area-between-two-points-containing-no-points",
        "title_cn": "两点之间不包含任何点的最宽垂直区域",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "84.2%",
        "frontend_id": "1637",
        "title_slug": "widest-vertical-area-between-two-points-containing-no-points"
    },
    {
        "_id": "count-substrings-that-differ-by-one-character",
        "title_cn": "统计只差一个字符的子串数目",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "77.5%",
        "frontend_id": "1638",
        "title_slug": "count-substrings-that-differ-by-one-character"
    },
    {
        "_id": "number-of-ways-to-form-a-target-string-given-a-dictionary",
        "title_cn": "通过给定词典构造目标字符串的方案数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "1639",
        "title_slug": "number-of-ways-to-form-a-target-string-given-a-dictionary"
    },
    {
        "_id": "find-nearest-right-node-in-binary-tree",
        "title_cn": "找到二叉树中最近的右侧节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "73.4%",
        "frontend_id": "1602",
        "title_slug": "find-nearest-right-node-in-binary-tree"
    },
    {
        "_id": "largest-substring-between-two-equal-characters",
        "title_cn": "两个相同字符之间的最长子字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "1624",
        "title_slug": "largest-substring-between-two-equal-characters"
    },
    {
        "_id": "lexicographically-smallest-string-after-applying-operations",
        "title_cn": "执行操作后字典序最小的字符串",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "1625",
        "title_slug": "lexicographically-smallest-string-after-applying-operations"
    },
    {
        "_id": "best-team-with-no-conflicts",
        "title_cn": "无矛盾的最佳球队",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.9%",
        "frontend_id": "1626",
        "title_slug": "best-team-with-no-conflicts"
    },
    {
        "_id": "check-if-two-expression-trees-are-equivalent",
        "title_cn": "检查两棵二叉表达式树是否等价",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "74.7%",
        "frontend_id": "1612",
        "title_slug": "check-if-two-expression-trees-are-equivalent"
    },
    {
        "_id": "slowest-key",
        "title_cn": "按键持续时间最长的键",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "1629",
        "title_slug": "slowest-key"
    },
    {
        "_id": "arithmetic-subarrays",
        "title_cn": "等差子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "76.2%",
        "frontend_id": "1630",
        "title_slug": "arithmetic-subarrays"
    },
    {
        "_id": "path-with-minimum-effort",
        "title_cn": "最小体力消耗路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "binary-search",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "1631",
        "title_slug": "path-with-minimum-effort"
    },
    {
        "_id": "defuse-the-bomb",
        "title_cn": "拆炸弹",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "1652",
        "title_slug": "defuse-the-bomb"
    },
    {
        "_id": "minimum-deletions-to-make-string-balanced",
        "title_cn": "使字符串平衡的最少删除次数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "1653",
        "title_slug": "minimum-deletions-to-make-string-balanced"
    },
    {
        "_id": "minimum-jumps-to-reach-home",
        "title_cn": "到家的最少跳跃次数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "36.4%",
        "frontend_id": "1654",
        "title_slug": "minimum-jumps-to-reach-home"
    },
    {
        "_id": "distribute-repeating-integers",
        "title_cn": "分配重复整数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "40.1%",
        "frontend_id": "1655",
        "title_slug": "distribute-repeating-integers"
    },
    {
        "_id": "check-array-formation-through-concatenation",
        "title_cn": "能否连接形成数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "1640",
        "title_slug": "check-array-formation-through-concatenation"
    },
    {
        "_id": "count-sorted-vowel-strings",
        "title_cn": "统计字典序元音字符串的数目",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "82.5%",
        "frontend_id": "1641",
        "title_slug": "count-sorted-vowel-strings"
    },
    {
        "_id": "furthest-building-you-can-reach",
        "title_cn": "可以到达的最远建筑",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "1642",
        "title_slug": "furthest-building-you-can-reach"
    },
    {
        "_id": "maximum-repeating-substring",
        "title_cn": "最大重复子字符串",
        "difficulty": 1,
        "tags_q": [
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "1668",
        "title_slug": "maximum-repeating-substring"
    },
    {
        "_id": "merge-in-between-linked-lists",
        "title_cn": "合并两个链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "1669",
        "title_slug": "merge-in-between-linked-lists"
    },
    {
        "_id": "minimum-number-of-removals-to-make-mountain-array",
        "title_cn": "得到山形数组的最少删除次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "1671",
        "title_slug": "minimum-number-of-removals-to-make-mountain-array"
    },
    {
        "_id": "design-front-middle-back-queue",
        "title_cn": "设计前中后队列",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "array",
            "linked-list",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "1670",
        "title_slug": "design-front-middle-back-queue"
    },
    {
        "_id": "design-an-expression-tree-with-evaluate-function",
        "title_cn": "设计带解析函数的表达式树",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "design",
            "math",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "81.4%",
        "frontend_id": "1628",
        "title_slug": "design-an-expression-tree-with-evaluate-function"
    },
    {
        "_id": "get-maximum-in-generated-array",
        "title_cn": "获取生成数组中的最大值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "51.5%",
        "frontend_id": "1646",
        "title_slug": "get-maximum-in-generated-array"
    },
    {
        "_id": "minimum-deletions-to-make-character-frequencies-unique",
        "title_cn": "字符频次唯一的最小删除次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.0%",
        "frontend_id": "1647",
        "title_slug": "minimum-deletions-to-make-character-frequencies-unique"
    },
    {
        "_id": "sell-diminishing-valued-colored-balls",
        "title_cn": "销售价值减少的颜色球",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "binary-search",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "31.8%",
        "frontend_id": "1648",
        "title_slug": "sell-diminishing-valued-colored-balls"
    },
    {
        "_id": "create-sorted-array-through-instructions",
        "title_cn": "通过指令创建有序数组",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "1649",
        "title_slug": "create-sorted-array-through-instructions"
    },
    {
        "_id": "add-two-polynomials-represented-as-linked-lists",
        "title_cn": "求两个多项式链表的和",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "math",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "60.4%",
        "frontend_id": "1634",
        "title_slug": "add-two-polynomials-represented-as-linked-lists"
    },
    {
        "_id": "design-an-ordered-stream",
        "title_cn": "设计有序流",
        "difficulty": 1,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "83.9%",
        "frontend_id": "1656",
        "title_slug": "design-an-ordered-stream"
    },
    {
        "_id": "minimum-operations-to-reduce-x-to-zero",
        "title_cn": "将 x 减到 0 的最小操作数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "39.3%",
        "frontend_id": "1658",
        "title_slug": "minimum-operations-to-reduce-x-to-zero"
    },
    {
        "_id": "determine-if-two-strings-are-close",
        "title_cn": "确定两个字符串是否接近",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "1657",
        "title_slug": "determine-if-two-strings-are-close"
    },
    {
        "_id": "maximize-grid-happiness",
        "title_cn": "最大化网格幸福感",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "64.3%",
        "frontend_id": "1659",
        "title_slug": "maximize-grid-happiness"
    },
    {
        "_id": "lowest-common-ancestor-of-a-binary-tree-ii",
        "title_cn": "二叉树的最近公共祖先 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "1644",
        "title_slug": "lowest-common-ancestor-of-a-binary-tree-ii"
    },
    {
        "_id": "check-if-two-string-arrays-are-equivalent",
        "title_cn": "检查两个字符串数组是否相等",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "80.9%",
        "frontend_id": "1662",
        "title_slug": "check-if-two-string-arrays-are-equivalent"
    },
    {
        "_id": "smallest-string-with-a-given-numeric-value",
        "title_cn": "具有给定数值的最小字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "1663",
        "title_slug": "smallest-string-with-a-given-numeric-value"
    },
    {
        "_id": "ways-to-make-a-fair-array",
        "title_cn": "生成平衡数组的方案数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "66.6%",
        "frontend_id": "1664",
        "title_slug": "ways-to-make-a-fair-array"
    },
    {
        "_id": "minimum-initial-energy-to-finish-tasks",
        "title_cn": "完成所有任务的最少初始能量",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "1665",
        "title_slug": "minimum-initial-energy-to-finish-tasks"
    },
    {
        "_id": "count-the-number-of-consistent-strings",
        "title_cn": "统计一致字符串的数目",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.0%",
        "frontend_id": "1684",
        "title_slug": "count-the-number-of-consistent-strings"
    },
    {
        "_id": "sum-of-absolute-differences-in-a-sorted-array",
        "title_cn": "有序数组中差绝对值之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1685",
        "title_slug": "sum-of-absolute-differences-in-a-sorted-array"
    },
    {
        "_id": "stone-game-vi",
        "title_cn": "石子游戏 VI",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "game-theory",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1686",
        "title_slug": "stone-game-vi"
    },
    {
        "_id": "delivering-boxes-from-storage-to-ports",
        "title_cn": "从仓库到码头运输箱子",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "queue",
            "array",
            "dynamic-programming",
            "prefix-sum",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "1687",
        "title_slug": "delivering-boxes-from-storage-to-ports"
    },
    {
        "_id": "lowest-common-ancestor-of-a-binary-tree-iii",
        "title_cn": "二叉树的最近公共祖先 III",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "hash-table",
            "two-pointers",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "81.4%",
        "frontend_id": "1650",
        "title_slug": "lowest-common-ancestor-of-a-binary-tree-iii"
    },
    {
        "_id": "richest-customer-wealth",
        "title_cn": "最富有客户的资产总量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "83.7%",
        "frontend_id": "1672",
        "title_slug": "richest-customer-wealth"
    },
    {
        "_id": "find-the-most-competitive-subsequence",
        "title_cn": "找出最具竞争力的子序列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "40.8%",
        "frontend_id": "1673",
        "title_slug": "find-the-most-competitive-subsequence"
    },
    {
        "_id": "minimize-deviation-in-array",
        "title_cn": "数组的最小偏移量",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.8%",
        "frontend_id": "1675",
        "title_slug": "minimize-deviation-in-array"
    },
    {
        "_id": "correct-a-binary-tree",
        "title_cn": "纠正二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "75.2%",
        "frontend_id": "1660",
        "title_slug": "correct-a-binary-tree"
    },
    {
        "_id": "goal-parser-interpretation",
        "title_cn": "设计 Goal 解析器",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.6%",
        "frontend_id": "1678",
        "title_slug": "goal-parser-interpretation"
    },
    {
        "_id": "max-number-of-k-sum-pairs",
        "title_cn": "K 和数对的最大数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "1679",
        "title_slug": "max-number-of-k-sum-pairs"
    },
    {
        "_id": "minimum-incompatibility",
        "title_cn": "最小不兼容性",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "1681",
        "title_slug": "minimum-incompatibility"
    },
    {
        "_id": "concatenation-of-consecutive-binary-numbers",
        "title_cn": "连接连续二进制数字",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "1680",
        "title_slug": "concatenation-of-consecutive-binary-numbers"
    },
    {
        "_id": "number-of-students-unable-to-eat-lunch",
        "title_cn": "无法吃午餐的学生数量",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "queue",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "72.8%",
        "frontend_id": "1700",
        "title_slug": "number-of-students-unable-to-eat-lunch"
    },
    {
        "_id": "average-waiting-time",
        "title_cn": "平均等待时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "1701",
        "title_slug": "average-waiting-time"
    },
    {
        "_id": "maximum-binary-string-after-change",
        "title_cn": "修改后的最大二进制字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "1702",
        "title_slug": "maximum-binary-string-after-change"
    },
    {
        "_id": "minimum-adjacent-swaps-for-k-consecutive-ones",
        "title_cn": "得到连续 K 个 1 的最少相邻交换次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "56.2%",
        "frontend_id": "1703",
        "title_slug": "minimum-adjacent-swaps-for-k-consecutive-ones"
    },
    {
        "_id": "count-of-matches-in-tournament",
        "title_cn": "比赛中的配对次数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "83.1%",
        "frontend_id": "1688",
        "title_slug": "count-of-matches-in-tournament"
    },
    {
        "_id": "partitioning-into-minimum-number-of-deci-binary-numbers",
        "title_cn": "十-二进制数的最少数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "86.8%",
        "frontend_id": "1689",
        "title_slug": "partitioning-into-minimum-number-of-deci-binary-numbers"
    },
    {
        "_id": "stone-game-vii",
        "title_cn": "石子游戏 VII",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1690",
        "title_slug": "stone-game-vii"
    },
    {
        "_id": "sum-of-special-evenly-spaced-elements-in-array",
        "title_cn": "数组中特殊等间距元素的和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "1714",
        "title_slug": "sum-of-special-evenly-spaced-elements-in-array"
    },
    {
        "_id": "change-the-root-of-a-binary-tree",
        "title_cn": "改变二叉树的根节点",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "63.5%",
        "frontend_id": "1666",
        "title_slug": "change-the-root-of-a-binary-tree"
    },
    {
        "_id": "reformat-phone-number",
        "title_cn": "重新格式化电话号码",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.0%",
        "frontend_id": "1694",
        "title_slug": "reformat-phone-number"
    },
    {
        "_id": "maximum-erasure-value",
        "title_cn": "删除子数组的最大得分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "1695",
        "title_slug": "maximum-erasure-value"
    },
    {
        "_id": "jump-game-vi",
        "title_cn": "跳跃游戏 VI",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "dynamic-programming",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "1696",
        "title_slug": "jump-game-vi"
    },
    {
        "_id": "checking-existence-of-edge-length-limited-paths",
        "title_cn": "检查边长度限制的路径是否存在",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "1697",
        "title_slug": "checking-existence-of-edge-length-limited-paths"
    },
    {
        "_id": "lowest-common-ancestor-of-a-binary-tree-iv",
        "title_cn": "二叉树的最近公共祖先 IV",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "80.5%",
        "frontend_id": "1676",
        "title_slug": "lowest-common-ancestor-of-a-binary-tree-iv"
    },
    {
        "_id": "calculate-money-in-leetcode-bank",
        "title_cn": "计算力扣银行的钱",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "69.1%",
        "frontend_id": "1716",
        "title_slug": "calculate-money-in-leetcode-bank"
    },
    {
        "_id": "maximum-score-from-removing-substrings",
        "title_cn": "删除子字符串的最大得分",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "47.0%",
        "frontend_id": "1717",
        "title_slug": "maximum-score-from-removing-substrings"
    },
    {
        "_id": "construct-the-lexicographically-largest-valid-sequence",
        "title_cn": "构建字典序最大的可行序列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "51.6%",
        "frontend_id": "1718",
        "title_slug": "construct-the-lexicographically-largest-valid-sequence"
    },
    {
        "_id": "number-of-ways-to-reconstruct-a-tree",
        "title_cn": "重构一棵树的方案数",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "1719",
        "title_slug": "number-of-ways-to-reconstruct-a-tree"
    },
    {
        "_id": "determine-if-string-halves-are-alike",
        "title_cn": "判断字符串的两半是否相似",
        "difficulty": 1,
        "tags_q": [
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "1704",
        "title_slug": "determine-if-string-halves-are-alike"
    },
    {
        "_id": "maximum-number-of-eaten-apples",
        "title_cn": "吃苹果的最大数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.3%",
        "frontend_id": "1705",
        "title_slug": "maximum-number-of-eaten-apples"
    },
    {
        "_id": "find-minimum-time-to-finish-all-jobs",
        "title_cn": "完成所有工作的最短时间",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "50.8%",
        "frontend_id": "1723",
        "title_slug": "find-minimum-time-to-finish-all-jobs"
    },
    {
        "_id": "maximum-xor-with-an-element-from-array",
        "title_cn": "与数组中元素的最大异或值",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "1707",
        "title_slug": "maximum-xor-with-an-element-from-array"
    },
    {
        "_id": "count-ways-to-distribute-candies",
        "title_cn": "计算分配糖果的不同方式",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "65.3%",
        "frontend_id": "1692",
        "title_slug": "count-ways-to-distribute-candies"
    },
    {
        "_id": "maximum-units-on-a-truck",
        "title_cn": "卡车上的最大单元数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "1710",
        "title_slug": "maximum-units-on-a-truck"
    },
    {
        "_id": "count-good-meals",
        "title_cn": "大餐计数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "1711",
        "title_slug": "count-good-meals"
    },
    {
        "_id": "minimum-operations-to-make-a-subsequence",
        "title_cn": "得到子序列的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "50.0%",
        "frontend_id": "1713",
        "title_slug": "minimum-operations-to-make-a-subsequence"
    },
    {
        "_id": "find-the-highest-altitude",
        "title_cn": "找到最高海拔",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "81.6%",
        "frontend_id": "1732",
        "title_slug": "find-the-highest-altitude"
    },
    {
        "_id": "minimum-number-of-people-to-teach",
        "title_cn": "需要教语言的最少人数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "1733",
        "title_slug": "minimum-number-of-people-to-teach"
    },
    {
        "_id": "decode-xored-permutation",
        "title_cn": "解码异或后的排列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "72.4%",
        "frontend_id": "1734",
        "title_slug": "decode-xored-permutation"
    },
    {
        "_id": "count-ways-to-make-array-with-product",
        "title_cn": "生成乘积数组的方案数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "combinatorics",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "1735",
        "title_slug": "count-ways-to-make-array-with-product"
    },
    {
        "_id": "decode-xored-array",
        "title_cn": "解码异或后的数组",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "85.6%",
        "frontend_id": "1720",
        "title_slug": "decode-xored-array"
    },
    {
        "_id": "minimize-hamming-distance-after-swap-operations",
        "title_cn": "执行交换操作后的最小汉明距离",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "union-find",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.4%",
        "frontend_id": "1722",
        "title_slug": "minimize-hamming-distance-after-swap-operations"
    },
    {
        "_id": "number-of-rectangles-that-can-form-the-largest-square",
        "title_cn": "可以形成最大正方形的矩形数目",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "82.6%",
        "frontend_id": "1725",
        "title_slug": "number-of-rectangles-that-can-form-the-largest-square"
    },
    {
        "_id": "maximum-number-of-balls-in-a-box",
        "title_cn": "盒子中小球的最大数量",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "math",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "75.7%",
        "frontend_id": "1742",
        "title_slug": "maximum-number-of-balls-in-a-box"
    },
    {
        "_id": "largest-submatrix-with-rearrangements",
        "title_cn": "重新排列后的最大子矩阵",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "1727",
        "title_slug": "largest-submatrix-with-rearrangements"
    },
    {
        "_id": "largest-subarray-length-k",
        "title_cn": "长度为 K 的最大子数组",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "67.1%",
        "frontend_id": "1708",
        "title_slug": "largest-subarray-length-k"
    },
    {
        "_id": "sum-of-unique-elements",
        "title_cn": "唯一元素的和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "76.1%",
        "frontend_id": "1748",
        "title_slug": "sum-of-unique-elements"
    },
    {
        "_id": "maximum-absolute-sum-of-any-subarray",
        "title_cn": "任意子数组和的绝对值的最大值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.9%",
        "frontend_id": "1749",
        "title_slug": "maximum-absolute-sum-of-any-subarray"
    },
    {
        "_id": "minimum-length-of-string-after-deleting-similar-ends",
        "title_cn": "删除字符串两端相同字符后的最短长度",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "1750",
        "title_slug": "minimum-length-of-string-after-deleting-similar-ends"
    },
    {
        "_id": "maximum-number-of-events-that-can-be-attended-ii",
        "title_cn": "最多可以参加的会议数目 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "1751",
        "title_slug": "maximum-number-of-events-that-can-be-attended-ii"
    },
    {
        "_id": "latest-time-by-replacing-hidden-digits",
        "title_cn": "替换隐藏数字得到的最晚时间",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "1736",
        "title_slug": "latest-time-by-replacing-hidden-digits"
    },
    {
        "_id": "change-minimum-characters-to-satisfy-one-of-three-conditions",
        "title_cn": "满足三条件之一需改变的最少字符数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "1737",
        "title_slug": "change-minimum-characters-to-satisfy-one-of-three-conditions"
    },
    {
        "_id": "find-kth-largest-xor-coordinate-value",
        "title_cn": "找出第 K 大的异或坐标值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "divide-and-conquer",
            "matrix",
            "prefix-sum",
            "quickselect",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "1738",
        "title_slug": "find-kth-largest-xor-coordinate-value"
    },
    {
        "_id": "checking-existence-of-edge-length-limited-paths-ii",
        "title_cn": "检查边长度限制的路径是否存在 II",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "minimum-spanning-tree"
        ],
        "paid_only": true,
        "ac_rate": "55.4%",
        "frontend_id": "1724",
        "title_slug": "checking-existence-of-edge-length-limited-paths-ii"
    },
    {
        "_id": "restore-the-array-from-adjacent-pairs",
        "title_cn": "从相邻元素对还原数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "69.8%",
        "frontend_id": "1743",
        "title_slug": "restore-the-array-from-adjacent-pairs"
    },
    {
        "_id": "palindrome-partitioning-iv",
        "title_cn": "分割回文串 IV",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "1745",
        "title_slug": "palindrome-partitioning-iv"
    },
    {
        "_id": "can-you-eat-your-favorite-candy-on-your-favorite-day",
        "title_cn": "你能在你最喜欢的那天吃到你最喜欢的糖果吗？",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "1744",
        "title_slug": "can-you-eat-your-favorite-candy-on-your-favorite-day"
    },
    {
        "_id": "form-array-by-concatenating-subarrays-of-another-array",
        "title_cn": "通过连接另一个数组的子数组得到一个数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "1764",
        "title_slug": "form-array-by-concatenating-subarrays-of-another-array"
    },
    {
        "_id": "tree-of-coprimes",
        "title_cn": "互质树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "40.6%",
        "frontend_id": "1766",
        "title_slug": "tree-of-coprimes"
    },
    {
        "_id": "map-of-highest-peak",
        "title_cn": "地图中的最高点",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "1765",
        "title_slug": "map-of-highest-peak"
    },
    {
        "_id": "check-if-array-is-sorted-and-rotated",
        "title_cn": "检查数组是否经排序和轮转得到",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "1752",
        "title_slug": "check-if-array-is-sorted-and-rotated"
    },
    {
        "_id": "maximum-score-from-removing-stones",
        "title_cn": "移除石子的最大得分",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "1753",
        "title_slug": "maximum-score-from-removing-stones"
    },
    {
        "_id": "largest-merge-of-two-strings",
        "title_cn": "构造字典序最大的合并字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "1754",
        "title_slug": "largest-merge-of-two-strings"
    },
    {
        "_id": "closest-subsequence-sum",
        "title_cn": "最接近目标值的子序列和",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "two-pointers",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "1755",
        "title_slug": "closest-subsequence-sum"
    },
    {
        "_id": "find-distance-in-a-binary-tree",
        "title_cn": "找到二叉树中的距离",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "68.1%",
        "frontend_id": "1740",
        "title_slug": "find-distance-in-a-binary-tree"
    },
    {
        "_id": "minimum-changes-to-make-alternating-binary-string",
        "title_cn": "生成交替二进制字符串的最少操作数",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "1758",
        "title_slug": "minimum-changes-to-make-alternating-binary-string"
    },
    {
        "_id": "count-number-of-homogenous-substrings",
        "title_cn": "统计同质子字符串的数目",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "1759",
        "title_slug": "count-number-of-homogenous-substrings"
    },
    {
        "_id": "minimum-limit-of-balls-in-a-bag",
        "title_cn": "袋子里最少数目的球",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "1760",
        "title_slug": "minimum-limit-of-balls-in-a-bag"
    },
    {
        "_id": "minimum-degree-of-a-connected-trio-in-a-graph",
        "title_cn": "一个图中连通三元组的最小度数",
        "difficulty": 3,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "1761",
        "title_slug": "minimum-degree-of-a-connected-trio-in-a-graph"
    },
    {
        "_id": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
        "title_cn": "找到最近的有相同 X 或 Y 坐标的点",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "1779",
        "title_slug": "find-nearest-point-that-has-the-same-x-or-y-coordinate"
    },
    {
        "_id": "check-if-number-is-a-sum-of-powers-of-three",
        "title_cn": "判断一个数字是否可以表示成三的幂的和",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "74.9%",
        "frontend_id": "1780",
        "title_slug": "check-if-number-is-a-sum-of-powers-of-three"
    },
    {
        "_id": "sum-of-beauty-of-all-substrings",
        "title_cn": "所有子字符串美丽值之和",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "1781",
        "title_slug": "sum-of-beauty-of-all-substrings"
    },
    {
        "_id": "count-pairs-of-nodes",
        "title_cn": "统计点对的数目",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.5%",
        "frontend_id": "1782",
        "title_slug": "count-pairs-of-nodes"
    },
    {
        "_id": "maximum-subarray-sum-after-one-operation",
        "title_cn": "经过一次操作后的最大子数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "60.1%",
        "frontend_id": "1746",
        "title_slug": "maximum-subarray-sum-after-one-operation"
    },
    {
        "_id": "merge-strings-alternately",
        "title_cn": "交替合并字符串",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "1768",
        "title_slug": "merge-strings-alternately"
    },
    {
        "_id": "minimum-number-of-operations-to-move-all-balls-to-each-box",
        "title_cn": "移动所有球到每个盒子所需的最小操作数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "87.7%",
        "frontend_id": "1769",
        "title_slug": "minimum-number-of-operations-to-move-all-balls-to-each-box"
    },
    {
        "_id": "maximum-score-from-performing-multiplication-operations",
        "title_cn": "执行乘法运算的最大分数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "41.0%",
        "frontend_id": "1770",
        "title_slug": "maximum-score-from-performing-multiplication-operations"
    },
    {
        "_id": "maximize-palindrome-length-from-subsequences",
        "title_cn": "由子序列构造的最长回文串的长度",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "1771",
        "title_slug": "maximize-palindrome-length-from-subsequences"
    },
    {
        "_id": "count-items-matching-a-rule",
        "title_cn": "统计匹配检索规则的物品数量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "86.1%",
        "frontend_id": "1773",
        "title_slug": "count-items-matching-a-rule"
    },
    {
        "_id": "closest-dessert-cost",
        "title_cn": "最接近目标价格的甜点成本",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "1774",
        "title_slug": "closest-dessert-cost"
    },
    {
        "_id": "equal-sum-arrays-with-minimum-number-of-operations",
        "title_cn": "通过最少操作次数使数组的和相等",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "1775",
        "title_slug": "equal-sum-arrays-with-minimum-number-of-operations"
    },
    {
        "_id": "car-fleet-ii",
        "title_cn": "车队 II",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "math",
            "monotonic-stack",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "1776",
        "title_slug": "car-fleet-ii"
    },
    {
        "_id": "design-most-recently-used-queue",
        "title_cn": "设计最近使用（MRU）队列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "design",
            "binary-indexed-tree",
            "array",
            "hash-table",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "81.1%",
        "frontend_id": "1756",
        "title_slug": "design-most-recently-used-queue"
    },
    {
        "_id": "second-largest-digit-in-a-string",
        "title_cn": "字符串中第二大的数字",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "1796",
        "title_slug": "second-largest-digit-in-a-string"
    },
    {
        "_id": "design-authentication-manager",
        "title_cn": "设计一个验证系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "1797",
        "title_slug": "design-authentication-manager"
    },
    {
        "_id": "maximize-score-after-n-operations",
        "title_cn": "N 次操作后的最大分数和",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "dynamic-programming",
            "backtracking",
            "bitmask",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "1799",
        "title_slug": "maximize-score-after-n-operations"
    },
    {
        "_id": "count-pairs-with-xor-in-a-range",
        "title_cn": "统计异或值在范围内的数对有多少",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "1803",
        "title_slug": "count-pairs-with-xor-in-a-range"
    },
    {
        "_id": "buildings-with-an-ocean-view",
        "title_cn": "能看到海景的建筑物",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "73.1%",
        "frontend_id": "1762",
        "title_slug": "buildings-with-an-ocean-view"
    },
    {
        "_id": "check-if-binary-string-has-at-most-one-segment-of-ones",
        "title_cn": "检查二进制字符串字段",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "1784",
        "title_slug": "check-if-binary-string-has-at-most-one-segment-of-ones"
    },
    {
        "_id": "minimum-elements-to-add-to-form-a-given-sum",
        "title_cn": "构成特定和需要添加的最少元素",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "43.7%",
        "frontend_id": "1785",
        "title_slug": "minimum-elements-to-add-to-form-a-given-sum"
    },
    {
        "_id": "number-of-restricted-paths-from-first-to-last-node",
        "title_cn": "从第一个节点出发到最后一个节点的受限路径数",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort",
            "dynamic-programming",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "1786",
        "title_slug": "number-of-restricted-paths-from-first-to-last-node"
    },
    {
        "_id": "make-the-xor-of-all-segments-equal-to-zero",
        "title_cn": "使所有区间的异或结果为零",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "1787",
        "title_slug": "make-the-xor-of-all-segments-equal-to-zero"
    },
    {
        "_id": "check-if-one-string-swap-can-make-strings-equal",
        "title_cn": "仅执行一次字符串交换能否使两个字符串相等",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "1790",
        "title_slug": "check-if-one-string-swap-can-make-strings-equal"
    },
    {
        "_id": "find-center-of-star-graph",
        "title_cn": "找出星型图的中心节点",
        "difficulty": 1,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "82.6%",
        "frontend_id": "1791",
        "title_slug": "find-center-of-star-graph"
    },
    {
        "_id": "maximum-average-pass-ratio",
        "title_cn": "最大平均通过率",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "1792",
        "title_slug": "maximum-average-pass-ratio"
    },
    {
        "_id": "maximum-score-of-a-good-subarray",
        "title_cn": "好子数组的最大分数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "two-pointers",
            "binary-search",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "1793",
        "title_slug": "maximum-score-of-a-good-subarray"
    },
    {
        "_id": "sort-features-by-popularity",
        "title_cn": "按受欢迎程度排列功能",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "47.6%",
        "frontend_id": "1772",
        "title_slug": "sort-features-by-popularity"
    },
    {
        "_id": "determine-color-of-a-chessboard-square",
        "title_cn": "判断国际象棋棋盘中一个格子的颜色",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.2%",
        "frontend_id": "1812",
        "title_slug": "determine-color-of-a-chessboard-square"
    },
    {
        "_id": "sentence-similarity-iii",
        "title_cn": "句子相似性 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "1813",
        "title_slug": "sentence-similarity-iii"
    },
    {
        "_id": "maximum-number-of-groups-getting-fresh-donuts",
        "title_cn": "得到新鲜甜甜圈的最多组数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "memoization",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "1815",
        "title_slug": "maximum-number-of-groups-getting-fresh-donuts"
    },
    {
        "_id": "count-nice-pairs-in-an-array",
        "title_cn": "统计一个数组中好对子的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "47.2%",
        "frontend_id": "1814",
        "title_slug": "count-nice-pairs-in-an-array"
    },
    {
        "_id": "maximum-ascending-subarray-sum",
        "title_cn": "最大升序子数组和",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "1800",
        "title_slug": "maximum-ascending-subarray-sum"
    },
    {
        "_id": "number-of-orders-in-the-backlog",
        "title_cn": "积压订单中的订单总数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "1801",
        "title_slug": "number-of-orders-in-the-backlog"
    },
    {
        "_id": "maximum-value-at-a-given-index-in-a-bounded-array",
        "title_cn": "有界数组中指定下标处的最大值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "38.0%",
        "frontend_id": "1802",
        "title_slug": "maximum-value-at-a-given-index-in-a-bounded-array"
    },
    {
        "_id": "maximum-number-of-consecutive-values-you-can-make",
        "title_cn": "你能构造出连续值的最大数目",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "1798",
        "title_slug": "maximum-number-of-consecutive-values-you-can-make"
    },
    {
        "_id": "evaluate-the-bracket-pairs-of-a-string",
        "title_cn": "替换字符串中的括号内容",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "67.6%",
        "frontend_id": "1807",
        "title_slug": "evaluate-the-bracket-pairs-of-a-string"
    },
    {
        "_id": "minimum-number-of-operations-to-reinitialize-a-permutation",
        "title_cn": "还原排列的最少操作步数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "1806",
        "title_slug": "minimum-number-of-operations-to-reinitialize-a-permutation"
    },
    {
        "_id": "maximize-number-of-nice-divisors",
        "title_cn": "好因子的最大数目",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "29.2%",
        "frontend_id": "1808",
        "title_slug": "maximize-number-of-nice-divisors"
    },
    {
        "_id": "maximize-the-beauty-of-the-garden",
        "title_cn": "最大化花园的美观度",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "62.6%",
        "frontend_id": "1788",
        "title_slug": "maximize-the-beauty-of-the-garden"
    },
    {
        "_id": "minimum-operations-to-make-the-array-increasing",
        "title_cn": "最少操作使数组递增",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "80.9%",
        "frontend_id": "1827",
        "title_slug": "minimum-operations-to-make-the-array-increasing"
    },
    {
        "_id": "queries-on-number-of-points-inside-a-circle",
        "title_cn": "统计一个圆中点的数目",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "87.9%",
        "frontend_id": "1828",
        "title_slug": "queries-on-number-of-points-inside-a-circle"
    },
    {
        "_id": "maximum-xor-for-each-query",
        "title_cn": "每个查询的最大异或值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "73.1%",
        "frontend_id": "1829",
        "title_slug": "maximum-xor-for-each-query"
    },
    {
        "_id": "minimum-number-of-operations-to-make-string-sorted",
        "title_cn": "使字符串有序的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "1830",
        "title_slug": "minimum-number-of-operations-to-make-string-sorted"
    },
    {
        "_id": "count-pairs-of-equal-substrings-with-minimum-difference",
        "title_cn": "统计距离最小的子串对个数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "54.0%",
        "frontend_id": "1794",
        "title_slug": "count-pairs-of-equal-substrings-with-minimum-difference"
    },
    {
        "_id": "truncate-sentence",
        "title_cn": "截断句子",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "1816",
        "title_slug": "truncate-sentence"
    },
    {
        "_id": "finding-the-users-active-minutes",
        "title_cn": "查找用户活跃分钟数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "79.4%",
        "frontend_id": "1817",
        "title_slug": "finding-the-users-active-minutes"
    },
    {
        "_id": "minimum-absolute-sum-difference",
        "title_cn": "绝对差值和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "ordered-set",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "1818",
        "title_slug": "minimum-absolute-sum-difference"
    },
    {
        "_id": "number-of-different-subsequences-gcds",
        "title_cn": "序列中不同最大公约数的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "counting",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1819",
        "title_slug": "number-of-different-subsequences-gcds"
    },
    {
        "_id": "implement-trie-ii-prefix-tree",
        "title_cn": "实现 Trie （前缀树） II",
        "difficulty": 2,
        "tags_q": [
            "design",
            "trie",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "57.4%",
        "frontend_id": "1804",
        "title_slug": "implement-trie-ii-prefix-tree"
    },
    {
        "_id": "sign-of-the-product-of-an-array",
        "title_cn": "数组元素积的符号",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "1822",
        "title_slug": "sign-of-the-product-of-an-array"
    },
    {
        "_id": "find-the-winner-of-the-circular-game",
        "title_cn": "找出游戏的获胜者",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "queue",
            "array",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "1823",
        "title_slug": "find-the-winner-of-the-circular-game"
    },
    {
        "_id": "minimum-sideway-jumps",
        "title_cn": "最少侧跳次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "68.3%",
        "frontend_id": "1824",
        "title_slug": "minimum-sideway-jumps"
    },
    {
        "_id": "finding-mk-average",
        "title_cn": "求出 MK 平均值",
        "difficulty": 3,
        "tags_q": [
            "design",
            "queue",
            "data-stream",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "43.5%",
        "frontend_id": "1825",
        "title_slug": "finding-mk-average"
    },
    {
        "_id": "replace-all-digits-with-characters",
        "title_cn": "将所有数字用字符替换",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "79.0%",
        "frontend_id": "1844",
        "title_slug": "replace-all-digits-with-characters"
    },
    {
        "_id": "seat-reservation-manager",
        "title_cn": "座位预约管理系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "1845",
        "title_slug": "seat-reservation-manager"
    },
    {
        "_id": "maximum-element-after-decreasing-and-rearranging",
        "title_cn": "减小和重新排列数组后的最大元素",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1846",
        "title_slug": "maximum-element-after-decreasing-and-rearranging"
    },
    {
        "_id": "closest-room",
        "title_cn": "最近的房间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "1847",
        "title_slug": "closest-room"
    },
    {
        "_id": "minimum-path-cost-in-a-hidden-grid",
        "title_cn": "隐藏网格下的最小消耗路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "interactive",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "59.2%",
        "frontend_id": "1810",
        "title_slug": "minimum-path-cost-in-a-hidden-grid"
    },
    {
        "_id": "check-if-the-sentence-is-pangram",
        "title_cn": "判断句子是否为全字母句",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "84.3%",
        "frontend_id": "1832",
        "title_slug": "check-if-the-sentence-is-pangram"
    },
    {
        "_id": "maximum-ice-cream-bars",
        "title_cn": "雪糕的最大数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "1833",
        "title_slug": "maximum-ice-cream-bars"
    },
    {
        "_id": "single-threaded-cpu",
        "title_cn": "单线程 CPU",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "38.4%",
        "frontend_id": "1834",
        "title_slug": "single-threaded-cpu"
    },
    {
        "_id": "find-xor-sum-of-all-pairs-bitwise-and",
        "title_cn": "所有数对按位与结果的异或和",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "1835",
        "title_slug": "find-xor-sum-of-all-pairs-bitwise-and"
    },
    {
        "_id": "sum-of-digits-in-base-k",
        "title_cn": "K 进制表示下的各位数字总和",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "78.6%",
        "frontend_id": "1837",
        "title_slug": "sum-of-digits-in-base-k"
    },
    {
        "_id": "frequency-of-the-most-frequent-element",
        "title_cn": "最高频元素的频数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "prefix-sum",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "1838",
        "title_slug": "frequency-of-the-most-frequent-element"
    },
    {
        "_id": "longest-substring-of-all-vowels-in-order",
        "title_cn": "所有元音按顺序排布的最长子字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "1839",
        "title_slug": "longest-substring-of-all-vowels-in-order"
    },
    {
        "_id": "maximum-building-height",
        "title_cn": "最高建筑高度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "1840",
        "title_slug": "maximum-building-height"
    },
    {
        "_id": "maximum-number-of-accepted-invitations",
        "title_cn": "最多邀请的个数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "46.6%",
        "frontend_id": "1820",
        "title_slug": "maximum-number-of-accepted-invitations"
    },
    {
        "_id": "sorting-the-sentence",
        "title_cn": "将句子排序",
        "difficulty": 1,
        "tags_q": [
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "1859",
        "title_slug": "sorting-the-sentence"
    },
    {
        "_id": "incremental-memory-leak",
        "title_cn": "增长的内存泄露",
        "difficulty": 2,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "1860",
        "title_slug": "incremental-memory-leak"
    },
    {
        "_id": "rotating-the-box",
        "title_cn": "旋转盒子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "1861",
        "title_slug": "rotating-the-box"
    },
    {
        "_id": "minimum-distance-to-the-target-element",
        "title_cn": "到目标元素的最小距离",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "1848",
        "title_slug": "minimum-distance-to-the-target-element"
    },
    {
        "_id": "splitting-a-string-into-descending-consecutive-values",
        "title_cn": "将字符串拆分为递减的连续值",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "33.7%",
        "frontend_id": "1849",
        "title_slug": "splitting-a-string-into-descending-consecutive-values"
    },
    {
        "_id": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
        "title_cn": "邻位交换的最小次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "1850",
        "title_slug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number"
    },
    {
        "_id": "maximum-number-of-people-that-can-be-caught-in-tag",
        "title_cn": "捉迷藏中可捕获的最大人数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "55.4%",
        "frontend_id": "1989",
        "title_slug": "maximum-number-of-people-that-can-be-caught-in-tag"
    },
    {
        "_id": "faulty-sensor",
        "title_cn": "有缺陷的传感器",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "41.6%",
        "frontend_id": "1826",
        "title_slug": "faulty-sensor"
    },
    {
        "_id": "remove-duplicates-from-an-unsorted-linked-list",
        "title_cn": "从未排序的链表中移除重复元素",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list"
        ],
        "paid_only": true,
        "ac_rate": "74.3%",
        "frontend_id": "1836",
        "title_slug": "remove-duplicates-from-an-unsorted-linked-list"
    },
    {
        "_id": "maximum-population-year",
        "title_cn": "人口最多的年份",
        "difficulty": 1,
        "tags_q": [
            "array",
            "counting",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "1854",
        "title_slug": "maximum-population-year"
    },
    {
        "_id": "maximum-distance-between-a-pair-of-values",
        "title_cn": "下标对中的最大距离",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "59.2%",
        "frontend_id": "1855",
        "title_slug": "maximum-distance-between-a-pair-of-values"
    },
    {
        "_id": "maximum-subarray-min-product",
        "title_cn": "子数组最小乘积的最大值",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "prefix-sum",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "38.3%",
        "frontend_id": "1856",
        "title_slug": "maximum-subarray-min-product"
    },
    {
        "_id": "largest-color-value-in-a-directed-graph",
        "title_cn": "有向图中最大颜色值",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "memoization",
            "hash-table",
            "dynamic-programming",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "49.5%",
        "frontend_id": "1857",
        "title_slug": "largest-color-value-in-a-directed-graph"
    },
    {
        "_id": "substrings-of-size-three-with-distinct-characters",
        "title_cn": "长度为三且各字符不同的子字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "70.5%",
        "frontend_id": "1876",
        "title_slug": "substrings-of-size-three-with-distinct-characters"
    },
    {
        "_id": "minimize-maximum-pair-sum-in-array",
        "title_cn": "数组中最大数对和的最小值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "81.0%",
        "frontend_id": "1877",
        "title_slug": "minimize-maximum-pair-sum-in-array"
    },
    {
        "_id": "minimum-xor-sum-of-two-arrays",
        "title_cn": "两个数组最小的异或值之和",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "1879",
        "title_slug": "minimum-xor-sum-of-two-arrays"
    },
    {
        "_id": "get-biggest-three-rhombus-sums-in-a-grid",
        "title_cn": "矩阵中最大的三个菱形和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "matrix",
            "prefix-sum",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "1878",
        "title_slug": "get-biggest-three-rhombus-sums-in-a-grid"
    },
    {
        "_id": "sort-linked-list-already-sorted-using-absolute-values",
        "title_cn": "给按照绝对值排序的链表排序",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "65.1%",
        "frontend_id": "2046",
        "title_slug": "sort-linked-list-already-sorted-using-absolute-values"
    },
    {
        "_id": "sum-of-all-subset-xor-totals",
        "title_cn": "找出所有子集的异或总和再求和",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "backtracking",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "83.5%",
        "frontend_id": "1863",
        "title_slug": "sum-of-all-subset-xor-totals"
    },
    {
        "_id": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
        "title_cn": "构成交替字符串需要的最小交换次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "41.5%",
        "frontend_id": "1864",
        "title_slug": "minimum-number-of-swaps-to-make-the-binary-string-alternating"
    },
    {
        "_id": "finding-pairs-with-a-certain-sum",
        "title_cn": "找出和为指定值的下标对",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "1865",
        "title_slug": "finding-pairs-with-a-certain-sum"
    },
    {
        "_id": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
        "title_cn": "恰有 K 根木棍可以看到的排列数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "62.5%",
        "frontend_id": "1866",
        "title_slug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible"
    },
    {
        "_id": "next-palindrome-using-same-digits",
        "title_cn": "下个由相同数字构成的回文串",
        "difficulty": 3,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "52.2%",
        "frontend_id": "1842",
        "title_slug": "next-palindrome-using-same-digits"
    },
    {
        "_id": "longer-contiguous-segments-of-ones-than-zeros",
        "title_cn": "哪种连续子字符串更长",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "1869",
        "title_slug": "longer-contiguous-segments-of-ones-than-zeros"
    },
    {
        "_id": "minimum-speed-to-arrive-on-time",
        "title_cn": "准时到达的列车最小时速",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "42.2%",
        "frontend_id": "1870",
        "title_slug": "minimum-speed-to-arrive-on-time"
    },
    {
        "_id": "jump-game-vii",
        "title_cn": "跳跃游戏 VII",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "29.2%",
        "frontend_id": "1871",
        "title_slug": "jump-game-vii"
    },
    {
        "_id": "stone-game-viii",
        "title_cn": "石子游戏 VIII",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "game-theory",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "1872",
        "title_slug": "stone-game-viii"
    },
    {
        "_id": "distinct-numbers-in-each-subarray",
        "title_cn": "每个子数组的数字种类数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "61.5%",
        "frontend_id": "1852",
        "title_slug": "distinct-numbers-in-each-subarray"
    },
    {
        "_id": "find-the-student-that-will-replace-the-chalk",
        "title_cn": "找到需要补充粉笔的学生编号",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "1894",
        "title_slug": "find-the-student-that-will-replace-the-chalk"
    },
    {
        "_id": "maximum-cost-of-trip-with-k-highways",
        "title_cn": "K 条高速公路的最大旅行费用",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "graph",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "54.3%",
        "frontend_id": "2247",
        "title_slug": "maximum-cost-of-trip-with-k-highways"
    },
    {
        "_id": "minimum-cost-to-change-the-final-value-of-expression",
        "title_cn": "反转表达式值的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "1896",
        "title_slug": "minimum-cost-to-change-the-final-value-of-expression"
    },
    {
        "_id": "check-if-word-equals-summation-of-two-words",
        "title_cn": "检查某单词是否等于两单词之和",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "1880",
        "title_slug": "check-if-word-equals-summation-of-two-words"
    },
    {
        "_id": "maximum-value-after-insertion",
        "title_cn": "插入后的最大值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "38.4%",
        "frontend_id": "1881",
        "title_slug": "maximum-value-after-insertion"
    },
    {
        "_id": "minimum-skips-to-arrive-at-meeting-on-time",
        "title_cn": "准时抵达会议现场的最小跳过休息次数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "41.8%",
        "frontend_id": "1883",
        "title_slug": "minimum-skips-to-arrive-at-meeting-on-time"
    },
    {
        "_id": "determine-whether-matrix-can-be-obtained-by-rotation",
        "title_cn": "判断矩阵经轮转后是否一致",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.9%",
        "frontend_id": "1886",
        "title_slug": "determine-whether-matrix-can-be-obtained-by-rotation"
    },
    {
        "_id": "reduction-operations-to-make-the-array-elements-equal",
        "title_cn": "使数组元素相等的减少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "1887",
        "title_slug": "reduction-operations-to-make-the-array-elements-equal"
    },
    {
        "_id": "minimum-number-of-flips-to-make-the-binary-string-alternating",
        "title_cn": "使二进制字符串字符交替的最少反转次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "36.4%",
        "frontend_id": "1888",
        "title_slug": "minimum-number-of-flips-to-make-the-binary-string-alternating"
    },
    {
        "_id": "minimum-space-wasted-from-packaging",
        "title_cn": "装包裹的最小浪费空间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "30.4%",
        "frontend_id": "1889",
        "title_slug": "minimum-space-wasted-from-packaging"
    },
    {
        "_id": "product-of-two-run-length-encoded-arrays",
        "title_cn": "两个行程编码数组的积",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "49.6%",
        "frontend_id": "1868",
        "title_slug": "product-of-two-run-length-encoded-arrays"
    },
    {
        "_id": "remove-one-element-to-make-the-array-strictly-increasing",
        "title_cn": "删除一个元素使数组严格递增",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "30.3%",
        "frontend_id": "1909",
        "title_slug": "remove-one-element-to-make-the-array-strictly-increasing"
    },
    {
        "_id": "remove-all-occurrences-of-a-substring",
        "title_cn": "删除一个字符串中所有出现的给定子字符串",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.6%",
        "frontend_id": "1910",
        "title_slug": "remove-all-occurrences-of-a-substring"
    },
    {
        "_id": "maximum-alternating-subsequence-sum",
        "title_cn": "最大子序列交替和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.5%",
        "frontend_id": "1911",
        "title_slug": "maximum-alternating-subsequence-sum"
    },
    {
        "_id": "redistribute-characters-to-make-all-strings-equal",
        "title_cn": "重新分配字符使所有字符串都相等",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "1897",
        "title_slug": "redistribute-characters-to-make-all-strings-equal"
    },
    {
        "_id": "merge-triplets-to-form-target-triplet",
        "title_cn": "合并若干三元组以形成目标三元组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "66.1%",
        "frontend_id": "1899",
        "title_slug": "merge-triplets-to-form-target-triplet"
    },
    {
        "_id": "maximum-number-of-removable-characters",
        "title_cn": "可移除字符的最大数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "string",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "1898",
        "title_slug": "maximum-number-of-removable-characters"
    },
    {
        "_id": "the-earliest-and-latest-rounds-where-players-compete",
        "title_cn": "最佳运动员的比拼回合",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "1900",
        "title_slug": "the-earliest-and-latest-rounds-where-players-compete"
    },
    {
        "_id": "minimize-product-sum-of-two-arrays",
        "title_cn": "两个数组的最小乘积和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "87.0%",
        "frontend_id": "1874",
        "title_slug": "minimize-product-sum-of-two-arrays"
    },
    {
        "_id": "egg-drop-with-2-eggs-and-n-floors",
        "title_cn": "鸡蛋掉落-两枚鸡蛋",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "71.2%",
        "frontend_id": "1884",
        "title_slug": "egg-drop-with-2-eggs-and-n-floors"
    },
    {
        "_id": "largest-odd-number-in-string",
        "title_cn": "字符串中的最大奇数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "1903",
        "title_slug": "largest-odd-number-in-string"
    },
    {
        "_id": "the-number-of-full-rounds-you-have-played",
        "title_cn": "你完成的完整对局数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "32.2%",
        "frontend_id": "1904",
        "title_slug": "the-number-of-full-rounds-you-have-played"
    },
    {
        "_id": "count-sub-islands",
        "title_cn": "统计子岛屿",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "67.3%",
        "frontend_id": "1905",
        "title_slug": "count-sub-islands"
    },
    {
        "_id": "count-square-sum-triples",
        "title_cn": "统计平方和三元组的数目",
        "difficulty": 1,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "1925",
        "title_slug": "count-square-sum-triples"
    },
    {
        "_id": "nearest-exit-from-entrance-in-maze",
        "title_cn": "迷宫中离入口最近的出口",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "40.4%",
        "frontend_id": "1926",
        "title_slug": "nearest-exit-from-entrance-in-maze"
    },
    {
        "_id": "sum-game",
        "title_cn": "求和游戏",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "string",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "1927",
        "title_slug": "sum-game"
    },
    {
        "_id": "minimum-cost-to-reach-destination-in-time",
        "title_cn": "规定时间内到达终点的最小花费",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "1928",
        "title_slug": "minimum-cost-to-reach-destination-in-time"
    },
    {
        "_id": "maximum-product-difference-between-two-pairs",
        "title_cn": "两个数对之间的最大乘积差",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "80.7%",
        "frontend_id": "1913",
        "title_slug": "maximum-product-difference-between-two-pairs"
    },
    {
        "_id": "cyclically-rotating-a-grid",
        "title_cn": "循环轮转矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "47.2%",
        "frontend_id": "1914",
        "title_slug": "cyclically-rotating-a-grid"
    },
    {
        "_id": "number-of-wonderful-substrings",
        "title_cn": "最美子字符串的数目",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "1915",
        "title_slug": "number-of-wonderful-substrings"
    },
    {
        "_id": "cutting-ribbons",
        "title_cn": "割绳子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "42.8%",
        "frontend_id": "1891",
        "title_slug": "cutting-ribbons"
    },
    {
        "_id": "find-a-peak-element-ii",
        "title_cn": "寻找峰值 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "1901",
        "title_slug": "find-a-peak-element-ii"
    },
    {
        "_id": "build-array-from-permutation",
        "title_cn": "基于排列构建数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "86.4%",
        "frontend_id": "1920",
        "title_slug": "build-array-from-permutation"
    },
    {
        "_id": "eliminate-maximum-number-of-monsters",
        "title_cn": "消灭怪物的最大数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "1921",
        "title_slug": "eliminate-maximum-number-of-monsters"
    },
    {
        "_id": "count-good-numbers",
        "title_cn": "统计好数字的数目",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "1922",
        "title_slug": "count-good-numbers"
    },
    {
        "_id": "longest-common-subpath",
        "title_cn": "最长公共子路径",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "suffix-array",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "27.4%",
        "frontend_id": "1923",
        "title_slug": "longest-common-subpath"
    },
    {
        "_id": "depth-of-bst-given-insertion-order",
        "title_cn": "给定二叉搜索树的插入顺序求深度",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "binary-tree",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "48.8%",
        "frontend_id": "1902",
        "title_slug": "depth-of-bst-given-insertion-order"
    },
    {
        "_id": "check-if-all-characters-have-equal-number-of-occurrences",
        "title_cn": "检查是否所有字符出现次数相同",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "73.6%",
        "frontend_id": "1941",
        "title_slug": "check-if-all-characters-have-equal-number-of-occurrences"
    },
    {
        "_id": "the-number-of-the-smallest-unoccupied-chair",
        "title_cn": "最小未被占据椅子的编号",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.8%",
        "frontend_id": "1942",
        "title_slug": "the-number-of-the-smallest-unoccupied-chair"
    },
    {
        "_id": "describe-the-painting",
        "title_cn": "描述绘画结果",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.2%",
        "frontend_id": "1943",
        "title_slug": "describe-the-painting"
    },
    {
        "_id": "jump-game-viii",
        "title_cn": "跳跃游戏 VIII",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "graph",
            "array",
            "dynamic-programming",
            "shortest-path",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "58.5%",
        "frontend_id": "2297",
        "title_slug": "jump-game-viii"
    },
    {
        "_id": "concatenation-of-array",
        "title_cn": "数组串联",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "83.3%",
        "frontend_id": "1929",
        "title_slug": "concatenation-of-array"
    },
    {
        "_id": "unique-length-3-palindromic-subsequences",
        "title_cn": "长度为 3 的不同回文子序列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "53.2%",
        "frontend_id": "1930",
        "title_slug": "unique-length-3-palindromic-subsequences"
    },
    {
        "_id": "merge-bsts-to-create-single-bst",
        "title_cn": "合并多棵二叉搜索树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "hash-table",
            "binary-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "33.7%",
        "frontend_id": "1932",
        "title_slug": "merge-bsts-to-create-single-bst"
    },
    {
        "_id": "painting-a-grid-with-three-different-colors",
        "title_cn": "用三种不同颜色为网格涂色",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "1931",
        "title_slug": "painting-a-grid-with-three-different-colors"
    },
    {
        "_id": "game-of-nim",
        "title_cn": "Nim 游戏 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": true,
        "ac_rate": "64.1%",
        "frontend_id": "1908",
        "title_slug": "game-of-nim"
    },
    {
        "_id": "check-for-contradictions-in-equations",
        "title_cn": "检查方程中的矛盾之处",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "union-find",
            "graph",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "45.2%",
        "frontend_id": "2307",
        "title_slug": "check-for-contradictions-in-equations"
    },
    {
        "_id": "add-minimum-number-of-rungs",
        "title_cn": "新增的最少台阶数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "1936",
        "title_slug": "add-minimum-number-of-rungs"
    },
    {
        "_id": "maximum-number-of-points-with-cost",
        "title_cn": "扣分后的最大得分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "29.7%",
        "frontend_id": "1937",
        "title_slug": "maximum-number-of-points-with-cost"
    },
    {
        "_id": "maximum-genetic-difference-query",
        "title_cn": "查询最大基因差",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "41.7%",
        "frontend_id": "1938",
        "title_slug": "maximum-genetic-difference-query"
    },
    {
        "_id": "kth-smallest-subarray-sum",
        "title_cn": "第 K 小的子数组和·",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "49.2%",
        "frontend_id": "1918",
        "title_slug": "kth-smallest-subarray-sum"
    },
    {
        "_id": "check-if-string-is-decomposable-into-value-equal-substrings",
        "title_cn": "判断字符串是否可分解为值均等的子串",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": true,
        "ac_rate": "49.5%",
        "frontend_id": "1933",
        "title_slug": "check-if-string-is-decomposable-into-value-equal-substrings"
    },
    {
        "_id": "longest-common-subsequence-between-sorted-arrays",
        "title_cn": "排序数组之间的最长公共子序列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": true,
        "ac_rate": "74.3%",
        "frontend_id": "1940",
        "title_slug": "longest-common-subsequence-between-sorted-arrays"
    },
    {
        "_id": "maximum-of-minimum-values-in-all-subarrays",
        "title_cn": "所有子数组最小值中的最大值",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "49.3%",
        "frontend_id": "1950",
        "title_slug": "maximum-of-minimum-values-in-all-subarrays"
    },
    {
        "_id": "minimum-time-for-k-virus-variants-to-spread",
        "title_cn": "感染 K 种病毒所需的最短时间",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "binary-search",
            "enumeration"
        ],
        "paid_only": true,
        "ac_rate": "34.3%",
        "frontend_id": "1956",
        "title_slug": "minimum-time-for-k-virus-variants-to-spread"
    },
    {
        "_id": "erect-the-fence-ii",
        "title_cn": "安装栅栏 II",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "42.4%",
        "frontend_id": "1924",
        "title_slug": "erect-the-fence-ii"
    },
    {
        "_id": "brightest-position-on-street",
        "title_cn": "街上最亮的位置",
        "difficulty": 2,
        "tags_q": [
            "array",
            "ordered-set",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "61.4%",
        "frontend_id": "2021",
        "title_slug": "brightest-position-on-street"
    },
    {
        "_id": "sum-of-digits-of-string-after-convert",
        "title_cn": "字符串转化后的各位数字之和",
        "difficulty": 1,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "1945",
        "title_slug": "sum-of-digits-of-string-after-convert"
    },
    {
        "_id": "largest-number-after-mutating-substring",
        "title_cn": "子字符串突变后可能得到的最大整数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "32.9%",
        "frontend_id": "1946",
        "title_slug": "largest-number-after-mutating-substring"
    },
    {
        "_id": "maximum-compatibility-score-sum",
        "title_cn": "最大兼容性评分和",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "1947",
        "title_slug": "maximum-compatibility-score-sum"
    },
    {
        "_id": "delete-duplicate-folders-in-system",
        "title_cn": "删除系统中的重复文件夹",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "54.4%",
        "frontend_id": "1948",
        "title_slug": "delete-duplicate-folders-in-system"
    },
    {
        "_id": "check-if-move-is-legal",
        "title_cn": "检查操作是否合法",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "1958",
        "title_slug": "check-if-move-is-legal"
    },
    {
        "_id": "minimum-cost-to-separate-sentence-into-rows",
        "title_cn": "将句子分隔成行的最低成本",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "44.9%",
        "frontend_id": "2052",
        "title_slug": "minimum-cost-to-separate-sentence-into-rows"
    },
    {
        "_id": "three-divisors",
        "title_cn": "三除数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "enumeration",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "1952",
        "title_slug": "three-divisors"
    },
    {
        "_id": "maximum-number-of-weeks-for-which-you-can-work",
        "title_cn": "你可以工作的最大周数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "1953",
        "title_slug": "maximum-number-of-weeks-for-which-you-can-work"
    },
    {
        "_id": "array-with-elements-not-equal-to-average-of-neighbors",
        "title_cn": "构造元素不等于两相邻元素平均值的数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "40.3%",
        "frontend_id": "1968",
        "title_slug": "array-with-elements-not-equal-to-average-of-neighbors"
    },
    {
        "_id": "count-number-of-special-subsequences",
        "title_cn": "统计特殊子序列的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "1955",
        "title_slug": "count-number-of-special-subsequences"
    },
    {
        "_id": "minimum-time-to-type-word-using-special-typewriter",
        "title_cn": "使用特殊打字机键入单词的最少时间",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "72.0%",
        "frontend_id": "1974",
        "title_slug": "minimum-time-to-type-word-using-special-typewriter"
    },
    {
        "_id": "maximum-matrix-sum",
        "title_cn": "最大方阵和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "1975",
        "title_slug": "maximum-matrix-sum"
    },
    {
        "_id": "number-of-ways-to-arrive-at-destination",
        "title_cn": "到达目的地的方案数",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort",
            "dynamic-programming",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "1976",
        "title_slug": "number-of-ways-to-arrive-at-destination"
    },
    {
        "_id": "number-of-ways-to-separate-numbers",
        "title_cn": "划分数字的方案数",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "suffix-array"
        ],
        "paid_only": false,
        "ac_rate": "30.3%",
        "frontend_id": "1977",
        "title_slug": "number-of-ways-to-separate-numbers"
    },
    {
        "_id": "check-if-string-is-a-prefix-of-array",
        "title_cn": "检查字符串是否为数组前缀",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "1961",
        "title_slug": "check-if-string-is-a-prefix-of-array"
    },
    {
        "_id": "remove-stones-to-minimize-the-total",
        "title_cn": "移除石子使总数最小",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "1962",
        "title_slug": "remove-stones-to-minimize-the-total"
    },
    {
        "_id": "find-the-longest-valid-obstacle-course-at-each-position",
        "title_cn": "找出到每个位置为止最长的有效障碍赛跑路线",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "1964",
        "title_slug": "find-the-longest-valid-obstacle-course-at-each-position"
    },
    {
        "_id": "number-of-strings-that-appear-as-substrings-in-word",
        "title_cn": "作为子字符串出现在单词中的字符串数目",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "79.7%",
        "frontend_id": "1967",
        "title_slug": "number-of-strings-that-appear-as-substrings-in-word"
    },
    {
        "_id": "minimum-non-zero-product-of-the-array-elements",
        "title_cn": "数组元素的最小非零乘积",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "42.7%",
        "frontend_id": "1969",
        "title_slug": "minimum-non-zero-product-of-the-array-elements"
    },
    {
        "_id": "last-day-where-you-can-still-cross",
        "title_cn": "你能穿过矩阵的最后一天",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "1970",
        "title_slug": "last-day-where-you-can-still-cross"
    },
    {
        "_id": "find-the-middle-index-in-array",
        "title_cn": "找到数组的中间位置",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "1991",
        "title_slug": "find-the-middle-index-in-array"
    },
    {
        "_id": "find-all-groups-of-farmland",
        "title_cn": "找到所有的农场组",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "61.5%",
        "frontend_id": "1992",
        "title_slug": "find-all-groups-of-farmland"
    },
    {
        "_id": "operations-on-tree",
        "title_cn": "树上的操作",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "1993",
        "title_slug": "operations-on-tree"
    },
    {
        "_id": "the-number-of-good-subsets",
        "title_cn": "好子集的数目",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "1994",
        "title_slug": "the-number-of-good-subsets"
    },
    {
        "_id": "find-greatest-common-divisor-of-array",
        "title_cn": "找出数组的最大公约数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "76.8%",
        "frontend_id": "1979",
        "title_slug": "find-greatest-common-divisor-of-array"
    },
    {
        "_id": "find-unique-binary-string",
        "title_cn": "找出不同的二进制字符串",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "60.8%",
        "frontend_id": "1980",
        "title_slug": "find-unique-binary-string"
    },
    {
        "_id": "minimize-the-difference-between-target-and-chosen-elements",
        "title_cn": "最小化目标值与所选元素的差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "34.0%",
        "frontend_id": "1981",
        "title_slug": "minimize-the-difference-between-target-and-chosen-elements"
    },
    {
        "_id": "find-array-given-subset-sums",
        "title_cn": "从子集的和还原数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "divide-and-conquer"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "1982",
        "title_slug": "find-array-given-subset-sums"
    },
    {
        "_id": "binary-searchable-numbers-in-an-unsorted-array",
        "title_cn": "未排序数组中的可被二分搜索的数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "60.3%",
        "frontend_id": "1966",
        "title_slug": "binary-searchable-numbers-in-an-unsorted-array"
    },
    {
        "_id": "minimum-difference-between-highest-and-lowest-of-k-scores",
        "title_cn": "学生分数的最小差值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "1984",
        "title_slug": "minimum-difference-between-highest-and-lowest-of-k-scores"
    },
    {
        "_id": "find-the-kth-largest-integer-in-the-array",
        "title_cn": "找出数组中的第 K 大整数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.6%",
        "frontend_id": "1985",
        "title_slug": "find-the-kth-largest-integer-in-the-array"
    },
    {
        "_id": "minimum-number-of-work-sessions-to-finish-the-tasks",
        "title_cn": "完成任务的最少工作时间段",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "34.6%",
        "frontend_id": "1986",
        "title_slug": "minimum-number-of-work-sessions-to-finish-the-tasks"
    },
    {
        "_id": "number-of-unique-good-subsequences",
        "title_cn": "不同的好子序列数目",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "1987",
        "title_slug": "number-of-unique-good-subsequences"
    },
    {
        "_id": "count-number-of-pairs-with-absolute-difference-k",
        "title_cn": "差的绝对值为 K 的数对数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "82.8%",
        "frontend_id": "2006",
        "title_slug": "count-number-of-pairs-with-absolute-difference-k"
    },
    {
        "_id": "find-original-array-from-doubled-array",
        "title_cn": "从双倍数组中还原原数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "34.5%",
        "frontend_id": "2007",
        "title_slug": "find-original-array-from-doubled-array"
    },
    {
        "_id": "maximum-earnings-from-taxi",
        "title_cn": "出租车的最大盈利",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "2008",
        "title_slug": "maximum-earnings-from-taxi"
    },
    {
        "_id": "minimum-number-of-operations-to-make-array-continuous",
        "title_cn": "使数组连续的最少操作数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.1%",
        "frontend_id": "2009",
        "title_slug": "minimum-number-of-operations-to-make-array-continuous"
    },
    {
        "_id": "find-if-path-exists-in-graph",
        "title_cn": "寻找图中是否存在路径",
        "difficulty": 1,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "53.9%",
        "frontend_id": "1971",
        "title_slug": "find-if-path-exists-in-graph"
    },
    {
        "_id": "count-special-quadruplets",
        "title_cn": "统计特殊四元组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "1995",
        "title_slug": "count-special-quadruplets"
    },
    {
        "_id": "the-number-of-weak-characters-in-the-game",
        "title_cn": "游戏中弱角色的数量",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "1996",
        "title_slug": "the-number-of-weak-characters-in-the-game"
    },
    {
        "_id": "first-day-where-you-have-been-in-all-the-rooms",
        "title_cn": "访问完所有房间的第一天",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "35.8%",
        "frontend_id": "1997",
        "title_slug": "first-day-where-you-have-been-in-all-the-rooms"
    },
    {
        "_id": "count-nodes-equal-to-sum-of-descendants",
        "title_cn": "值等于子节点值之和的节点数量",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "61.5%",
        "frontend_id": "1973",
        "title_slug": "count-nodes-equal-to-sum-of-descendants"
    },
    {
        "_id": "reverse-prefix-of-word",
        "title_cn": "反转单词前缀",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.2%",
        "frontend_id": "2000",
        "title_slug": "reverse-prefix-of-word"
    },
    {
        "_id": "number-of-pairs-of-interchangeable-rectangles",
        "title_cn": "可互换矩形的组数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "counting",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "39.9%",
        "frontend_id": "2001",
        "title_slug": "number-of-pairs-of-interchangeable-rectangles"
    },
    {
        "_id": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "title_cn": "两个回文子序列长度的最大乘积",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "2002",
        "title_slug": "maximum-product-of-the-length-of-two-palindromic-subsequences"
    },
    {
        "_id": "smallest-missing-genetic-value-in-each-subtree",
        "title_cn": "每棵子树内缺失的最小基因值",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "union-find",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "2003",
        "title_slug": "smallest-missing-genetic-value-in-each-subtree"
    },
    {
        "_id": "convert-1d-array-into-2d-array",
        "title_cn": "将一维数组转变成二维数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "2022",
        "title_slug": "convert-1d-array-into-2d-array"
    },
    {
        "_id": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
        "title_cn": "连接后等于目标字符串的字符串对",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "74.2%",
        "frontend_id": "2023",
        "title_slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target"
    },
    {
        "_id": "maximize-the-confusion-of-an-exam",
        "title_cn": "考试的最大困扰度",
        "difficulty": 2,
        "tags_q": [
            "string",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "57.8%",
        "frontend_id": "2024",
        "title_slug": "maximize-the-confusion-of-an-exam"
    },
    {
        "_id": "maximum-number-of-ways-to-partition-an-array",
        "title_cn": "分割数组的最多方案数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "enumeration",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "31.0%",
        "frontend_id": "2025",
        "title_slug": "maximum-number-of-ways-to-partition-an-array"
    },
    {
        "_id": "final-value-of-variable-after-performing-operations",
        "title_cn": "执行操作后的变量值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "86.1%",
        "frontend_id": "2011",
        "title_slug": "final-value-of-variable-after-performing-operations"
    },
    {
        "_id": "sum-of-beauty-in-the-array",
        "title_cn": "数组美丽值求和",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "40.1%",
        "frontend_id": "2012",
        "title_slug": "sum-of-beauty-in-the-array"
    },
    {
        "_id": "detect-squares",
        "title_cn": "检测正方形",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "2013",
        "title_slug": "detect-squares"
    },
    {
        "_id": "longest-subsequence-repeated-k-times",
        "title_cn": "重复 K 次的最长子序列",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "string",
            "backtracking",
            "counting",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "2014",
        "title_slug": "longest-subsequence-repeated-k-times"
    },
    {
        "_id": "smallest-greater-multiple-made-of-two-digits",
        "title_cn": "最小的仅由两个数组成的倍数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": true,
        "ac_rate": "44.4%",
        "frontend_id": "1999",
        "title_slug": "smallest-greater-multiple-made-of-two-digits"
    },
    {
        "_id": "average-height-of-buildings-in-each-segment",
        "title_cn": "每段建筑物的平均高度",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "55.8%",
        "frontend_id": "2015",
        "title_slug": "average-height-of-buildings-in-each-segment"
    },
    {
        "_id": "maximum-difference-between-increasing-elements",
        "title_cn": "增量元素之间的最大差值",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "59.8%",
        "frontend_id": "2016",
        "title_slug": "maximum-difference-between-increasing-elements"
    },
    {
        "_id": "grid-game",
        "title_cn": "网格游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "2017",
        "title_slug": "grid-game"
    },
    {
        "_id": "check-if-word-can-be-placed-in-crossword",
        "title_cn": "判断单词是否能放入填字游戏内",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "42.7%",
        "frontend_id": "2018",
        "title_slug": "check-if-word-can-be-placed-in-crossword"
    },
    {
        "_id": "the-score-of-students-solving-math-expression",
        "title_cn": "解出数学表达式的学生分数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "memoization",
            "array",
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "2019",
        "title_slug": "the-score-of-students-solving-math-expression"
    },
    {
        "_id": "minimum-number-of-moves-to-seat-everyone",
        "title_cn": "使每位学生都有座位的最少移动次数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "84.6%",
        "frontend_id": "2037",
        "title_slug": "minimum-number-of-moves-to-seat-everyone"
    },
    {
        "_id": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
        "title_cn": "如果相邻两个颜色均相同则删除当前颜色",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "string",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "2038",
        "title_slug": "remove-colored-pieces-if-both-neighbors-are-the-same-color"
    },
    {
        "_id": "kth-smallest-product-of-two-sorted-arrays",
        "title_cn": "两个有序数组的第 K 小乘积",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "34.6%",
        "frontend_id": "2040",
        "title_slug": "kth-smallest-product-of-two-sorted-arrays"
    },
    {
        "_id": "the-time-when-the-network-becomes-idle",
        "title_cn": "网络空闲的时刻",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "2039",
        "title_slug": "the-time-when-the-network-becomes-idle"
    },
    {
        "_id": "subtree-removal-game-with-fibonacci-tree",
        "title_cn": "斐波那契树的移除子树游戏",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "math",
            "dynamic-programming",
            "binary-tree",
            "game-theory"
        ],
        "paid_only": true,
        "ac_rate": "48.7%",
        "frontend_id": "2005",
        "title_slug": "subtree-removal-game-with-fibonacci-tree"
    },
    {
        "_id": "minimum-moves-to-convert-string",
        "title_cn": "转换字符串的最少操作次数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "2027",
        "title_slug": "minimum-moves-to-convert-string"
    },
    {
        "_id": "find-missing-observations",
        "title_cn": "找出缺失的观测数据",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "50.8%",
        "frontend_id": "2028",
        "title_slug": "find-missing-observations"
    },
    {
        "_id": "stone-game-ix",
        "title_cn": "石子游戏 IX",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "counting",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "2029",
        "title_slug": "stone-game-ix"
    },
    {
        "_id": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
        "title_cn": "含特定字母的最小子序列",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "36.7%",
        "frontend_id": "2030",
        "title_slug": "smallest-k-length-subsequence-with-occurrences-of-a-letter"
    },
    {
        "_id": "two-out-of-three",
        "title_cn": "至少在两个数组中出现的值",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "73.0%",
        "frontend_id": "2032",
        "title_slug": "two-out-of-three"
    },
    {
        "_id": "minimum-operations-to-make-a-uni-value-grid",
        "title_cn": "获取单值网格的最小操作数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.7%",
        "frontend_id": "2033",
        "title_slug": "minimum-operations-to-make-a-uni-value-grid"
    },
    {
        "_id": "stock-price-fluctuation",
        "title_cn": "股票价格波动",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "data-stream",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "2034",
        "title_slug": "stock-price-fluctuation"
    },
    {
        "_id": "partition-array-into-two-arrays-to-minimize-sum-difference",
        "title_cn": "将数组分成两个数组并最小化数组和的差",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "two-pointers",
            "binary-search",
            "dynamic-programming",
            "bitmask",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "37.1%",
        "frontend_id": "2035",
        "title_slug": "partition-array-into-two-arrays-to-minimize-sum-difference"
    },
    {
        "_id": "kth-distinct-string-in-an-array",
        "title_cn": "数组中第 K 个独一无二的字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "71.9%",
        "frontend_id": "2053",
        "title_slug": "kth-distinct-string-in-an-array"
    },
    {
        "_id": "two-best-non-overlapping-events",
        "title_cn": "两个最好的不重叠活动",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "2054",
        "title_slug": "two-best-non-overlapping-events"
    },
    {
        "_id": "plates-between-candles",
        "title_cn": "蜡烛之间的盘子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "binary-search",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "43.6%",
        "frontend_id": "2055",
        "title_slug": "plates-between-candles"
    },
    {
        "_id": "number-of-valid-move-combinations-on-chessboard",
        "title_cn": "棋盘上有效移动组合的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string",
            "backtracking",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "2056",
        "title_slug": "number-of-valid-move-combinations-on-chessboard"
    },
    {
        "_id": "check-if-numbers-are-ascending-in-a-sentence",
        "title_cn": "检查句子中的数字是否递增",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.8%",
        "frontend_id": "2042",
        "title_slug": "check-if-numbers-are-ascending-in-a-sentence"
    },
    {
        "_id": "simple-bank-system",
        "title_cn": "简易银行系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "2043",
        "title_slug": "simple-bank-system"
    },
    {
        "_id": "count-number-of-maximum-bitwise-or-subsets",
        "title_cn": "统计按位或能得到最大值的子集数目",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "81.8%",
        "frontend_id": "2044",
        "title_slug": "count-number-of-maximum-bitwise-or-subsets"
    },
    {
        "_id": "second-minimum-time-to-reach-destination",
        "title_cn": "到达目的地的第二短时间",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "2045",
        "title_slug": "second-minimum-time-to-reach-destination"
    },
    {
        "_id": "number-of-valid-words-in-a-sentence",
        "title_cn": "句子中的有效单词数",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "2047",
        "title_slug": "number-of-valid-words-in-a-sentence"
    },
    {
        "_id": "next-greater-numerically-balanced-number",
        "title_cn": "下一个更大的数值平衡数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "2048",
        "title_slug": "next-greater-numerically-balanced-number"
    },
    {
        "_id": "count-nodes-with-the-highest-score",
        "title_cn": "统计最高分的节点数目",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "51.9%",
        "frontend_id": "2049",
        "title_slug": "count-nodes-with-the-highest-score"
    },
    {
        "_id": "parallel-courses-iii",
        "title_cn": "并行课程 III",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "2050",
        "title_slug": "parallel-courses-iii"
    },
    {
        "_id": "check-whether-two-strings-are-almost-equivalent",
        "title_cn": "检查两个字符串是否几乎相等",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "69.9%",
        "frontend_id": "2068",
        "title_slug": "check-whether-two-strings-are-almost-equivalent"
    },
    {
        "_id": "walking-robot-simulation-ii",
        "title_cn": "模拟行走机器人 II",
        "difficulty": 2,
        "tags_q": [
            "design",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "22.6%",
        "frontend_id": "2069",
        "title_slug": "walking-robot-simulation-ii"
    },
    {
        "_id": "most-beautiful-item-for-each-query",
        "title_cn": "每一个查询的最大美丽值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "2070",
        "title_slug": "most-beautiful-item-for-each-query"
    },
    {
        "_id": "maximum-number-of-tasks-you-can-assign",
        "title_cn": "你可以安排的最多任务数目",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "queue",
            "array",
            "binary-search",
            "sorting",
            "monotonic-queue"
        ],
        "paid_only": false,
        "ac_rate": "31.5%",
        "frontend_id": "2071",
        "title_slug": "maximum-number-of-tasks-you-can-assign"
    },
    {
        "_id": "smallest-index-with-equal-value",
        "title_cn": "值相等的最小索引",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "76.1%",
        "frontend_id": "2057",
        "title_slug": "smallest-index-with-equal-value"
    },
    {
        "_id": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
        "title_cn": "找出临界点之间的最小和最大距离",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "2058",
        "title_slug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points"
    },
    {
        "_id": "minimum-operations-to-convert-number",
        "title_cn": "转化数字的最小运算数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "2059",
        "title_slug": "minimum-operations-to-convert-number"
    },
    {
        "_id": "check-if-an-original-string-exists-given-two-encoded-strings",
        "title_cn": "同源字符串检测",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "2060",
        "title_slug": "check-if-an-original-string-exists-given-two-encoded-strings"
    },
    {
        "_id": "count-vowel-substrings-of-a-string",
        "title_cn": "统计字符串中的元音子字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "2062",
        "title_slug": "count-vowel-substrings-of-a-string"
    },
    {
        "_id": "vowels-of-all-substrings",
        "title_cn": "所有子字符串中的元音",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "2063",
        "title_slug": "vowels-of-all-substrings"
    },
    {
        "_id": "minimized-maximum-of-products-distributed-to-any-store",
        "title_cn": "分配给商店的最多商品的最小值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "2064",
        "title_slug": "minimized-maximum-of-products-distributed-to-any-store"
    },
    {
        "_id": "maximum-path-quality-of-a-graph",
        "title_cn": "最大化一张图中的路径价值",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "2065",
        "title_slug": "maximum-path-quality-of-a-graph"
    },
    {
        "_id": "count-common-words-with-one-occurrence",
        "title_cn": "统计出现过一次的公共字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "77.3%",
        "frontend_id": "2085",
        "title_slug": "count-common-words-with-one-occurrence"
    },
    {
        "_id": "minimum-number-of-food-buckets-to-feed-the-hamsters",
        "title_cn": "喂食仓鼠的最小食物桶数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "2086",
        "title_slug": "minimum-number-of-food-buckets-to-feed-the-hamsters"
    },
    {
        "_id": "minimum-cost-homecoming-of-a-robot-in-a-grid",
        "title_cn": "网格图中机器人回家的最小代价",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "2087",
        "title_slug": "minimum-cost-homecoming-of-a-robot-in-a-grid"
    },
    {
        "_id": "count-fertile-pyramids-in-a-land",
        "title_cn": "统计农场中肥沃金字塔的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "2088",
        "title_slug": "count-fertile-pyramids-in-a-land"
    },
    {
        "_id": "time-needed-to-buy-tickets",
        "title_cn": "买票需要的时间",
        "difficulty": 1,
        "tags_q": [
            "queue",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "2073",
        "title_slug": "time-needed-to-buy-tickets"
    },
    {
        "_id": "reverse-nodes-in-even-length-groups",
        "title_cn": "反转偶数长度组的节点",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "2074",
        "title_slug": "reverse-nodes-in-even-length-groups"
    },
    {
        "_id": "decode-the-slanted-ciphertext",
        "title_cn": "解码斜向换位密码",
        "difficulty": 2,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "2075",
        "title_slug": "decode-the-slanted-ciphertext"
    },
    {
        "_id": "process-restricted-friend-requests",
        "title_cn": "处理含限制条件的好友请求",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "2076",
        "title_slug": "process-restricted-friend-requests"
    },
    {
        "_id": "two-furthest-houses-with-different-colors",
        "title_cn": "两栋颜色不同且距离最远的房子",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "71.7%",
        "frontend_id": "2078",
        "title_slug": "two-furthest-houses-with-different-colors"
    },
    {
        "_id": "stamping-the-grid",
        "title_cn": "用邮票贴满网格图",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "49.7%",
        "frontend_id": "2132",
        "title_slug": "stamping-the-grid"
    },
    {
        "_id": "valid-arrangement-of-pairs",
        "title_cn": "合法重新排列数对",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "eulerian-circuit"
        ],
        "paid_only": false,
        "ac_rate": "38.7%",
        "frontend_id": "2097",
        "title_slug": "valid-arrangement-of-pairs"
    },
    {
        "_id": "number-of-spaces-cleaning-robot-cleaned",
        "title_cn": "扫地机器人清扫过的空间个数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "48.7%",
        "frontend_id": "2061",
        "title_slug": "number-of-spaces-cleaning-robot-cleaned"
    },
    {
        "_id": "find-subsequence-of-length-k-with-the-largest-sum",
        "title_cn": "找到和最大的长度为 K 的子序列",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "2099",
        "title_slug": "find-subsequence-of-length-k-with-the-largest-sum"
    },
    {
        "_id": "find-good-days-to-rob-the-bank",
        "title_cn": "适合野炊的日子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "2100",
        "title_slug": "find-good-days-to-rob-the-bank"
    },
    {
        "_id": "detonate-the-maximum-bombs",
        "title_cn": "引爆最多的炸弹",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "40.8%",
        "frontend_id": "2101",
        "title_slug": "detonate-the-maximum-bombs"
    },
    {
        "_id": "sequentially-ordinal-rank-tracker",
        "title_cn": "序列顺序查询",
        "difficulty": 3,
        "tags_q": [
            "design",
            "data-stream",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "2102",
        "title_slug": "sequentially-ordinal-rank-tracker"
    },
    {
        "_id": "find-target-indices-after-sorting-array",
        "title_cn": "找出数组排序后的目标下标",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.5%",
        "frontend_id": "2089",
        "title_slug": "find-target-indices-after-sorting-array"
    },
    {
        "_id": "k-radius-subarray-averages",
        "title_cn": "半径为 k 的子数组平均值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "38.7%",
        "frontend_id": "2090",
        "title_slug": "k-radius-subarray-averages"
    },
    {
        "_id": "removing-minimum-and-maximum-from-array",
        "title_cn": "从数组中移除最大值和最小值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "2091",
        "title_slug": "removing-minimum-and-maximum-from-array"
    },
    {
        "_id": "find-all-people-with-secret",
        "title_cn": "找出知晓秘密的所有专家",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "30.5%",
        "frontend_id": "2092",
        "title_slug": "find-all-people-with-secret"
    },
    {
        "_id": "finding-3-digit-even-numbers",
        "title_cn": "找出 3 位偶数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "2094",
        "title_slug": "finding-3-digit-even-numbers"
    },
    {
        "_id": "delete-the-middle-node-of-a-linked-list",
        "title_cn": "删除链表的中间节点",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "2095",
        "title_slug": "delete-the-middle-node-of-a-linked-list"
    },
    {
        "_id": "step-by-step-directions-from-a-binary-tree-node-to-another",
        "title_cn": "从二叉树一个节点到另一个节点每一步的方向",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "45.5%",
        "frontend_id": "2096",
        "title_slug": "step-by-step-directions-from-a-binary-tree-node-to-another"
    },
    {
        "_id": "paths-in-maze-that-lead-to-same-room",
        "title_cn": "殊途同归",
        "difficulty": 2,
        "tags_q": [
            "graph"
        ],
        "paid_only": true,
        "ac_rate": "60.6%",
        "frontend_id": "2077",
        "title_slug": "paths-in-maze-that-lead-to-same-room"
    },
    {
        "_id": "maximum-number-of-words-found-in-sentences",
        "title_cn": "句子中的最多单词数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "84.2%",
        "frontend_id": "2114",
        "title_slug": "maximum-number-of-words-found-in-sentences"
    },
    {
        "_id": "find-all-possible-recipes-from-given-supplies",
        "title_cn": "从给定原材料中找到所有可以做出的菜",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.0%",
        "frontend_id": "2115",
        "title_slug": "find-all-possible-recipes-from-given-supplies"
    },
    {
        "_id": "check-if-a-parentheses-string-can-be-valid",
        "title_cn": "判断一个括号字符串是否有效",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "32.0%",
        "frontend_id": "2116",
        "title_slug": "check-if-a-parentheses-string-can-be-valid"
    },
    {
        "_id": "abbreviating-the-product-of-a-range",
        "title_cn": "一个区间内所有数乘积的缩写",
        "difficulty": 3,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "30.0%",
        "frontend_id": "2117",
        "title_slug": "abbreviating-the-product-of-a-range"
    },
    {
        "_id": "rings-and-rods",
        "title_cn": "环和杆",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.8%",
        "frontend_id": "2103",
        "title_slug": "rings-and-rods"
    },
    {
        "_id": "sum-of-subarray-ranges",
        "title_cn": "子数组范围和",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "63.2%",
        "frontend_id": "2104",
        "title_slug": "sum-of-subarray-ranges"
    },
    {
        "_id": "watering-plants-ii",
        "title_cn": "给植物浇水 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "2105",
        "title_slug": "watering-plants-ii"
    },
    {
        "_id": "maximum-fruits-harvested-after-at-most-k-steps",
        "title_cn": "摘水果",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "45.1%",
        "frontend_id": "2106",
        "title_slug": "maximum-fruits-harvested-after-at-most-k-steps"
    },
    {
        "_id": "minimum-cost-to-reach-city-with-discounts",
        "title_cn": "前往目标城市的最小费用",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "56.5%",
        "frontend_id": "2093",
        "title_slug": "minimum-cost-to-reach-city-with-discounts"
    },
    {
        "_id": "find-first-palindromic-string-in-the-array",
        "title_cn": "找出数组中的第一个回文字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.9%",
        "frontend_id": "2108",
        "title_slug": "find-first-palindromic-string-in-the-array"
    },
    {
        "_id": "adding-spaces-to-a-string",
        "title_cn": "向字符串添加空格",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "61.5%",
        "frontend_id": "2109",
        "title_slug": "adding-spaces-to-a-string"
    },
    {
        "_id": "number-of-smooth-descent-periods-of-a-stock",
        "title_cn": "股票平滑下跌阶段的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "54.0%",
        "frontend_id": "2110",
        "title_slug": "number-of-smooth-descent-periods-of-a-stock"
    },
    {
        "_id": "minimum-operations-to-make-the-array-k-increasing",
        "title_cn": "使数组 K 递增的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "2111",
        "title_slug": "minimum-operations-to-make-the-array-k-increasing"
    },
    {
        "_id": "capitalize-the-title",
        "title_cn": "将标题首字母大写",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "2129",
        "title_slug": "capitalize-the-title"
    },
    {
        "_id": "maximum-twin-sum-of-a-linked-list",
        "title_cn": "链表最大孪生和",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "78.4%",
        "frontend_id": "2130",
        "title_slug": "maximum-twin-sum-of-a-linked-list"
    },
    {
        "_id": "longest-palindrome-by-concatenating-two-letter-words",
        "title_cn": "连接两字母单词得到的最长回文串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "2131",
        "title_slug": "longest-palindrome-by-concatenating-two-letter-words"
    },
    {
        "_id": "a-number-after-a-double-reversal",
        "title_cn": "反转两次的数字",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "2119",
        "title_slug": "a-number-after-a-double-reversal"
    },
    {
        "_id": "execution-of-all-suffix-instructions-staying-in-a-grid",
        "title_cn": "执行所有后缀指令",
        "difficulty": 2,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "82.5%",
        "frontend_id": "2120",
        "title_slug": "execution-of-all-suffix-instructions-staying-in-a-grid"
    },
    {
        "_id": "intervals-between-identical-elements",
        "title_cn": "相同元素的间隔之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "39.3%",
        "frontend_id": "2121",
        "title_slug": "intervals-between-identical-elements"
    },
    {
        "_id": "recover-the-original-array",
        "title_cn": "还原原数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "2122",
        "title_slug": "recover-the-original-array"
    },
    {
        "_id": "subsequence-of-size-k-with-the-largest-even-sum",
        "title_cn": "长度为 K 的最大偶数和子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "34.9%",
        "frontend_id": "2098",
        "title_slug": "subsequence-of-size-k-with-the-largest-even-sum"
    },
    {
        "_id": "check-if-all-as-appears-before-all-bs",
        "title_cn": "检查是否所有 A 都在 B 之前",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "68.9%",
        "frontend_id": "2124",
        "title_slug": "check-if-all-as-appears-before-all-bs"
    },
    {
        "_id": "number-of-laser-beams-in-a-bank",
        "title_cn": "银行中的激光束数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "string",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "82.6%",
        "frontend_id": "2125",
        "title_slug": "number-of-laser-beams-in-a-bank"
    },
    {
        "_id": "destroying-asteroids",
        "title_cn": "摧毁小行星",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.5%",
        "frontend_id": "2126",
        "title_slug": "destroying-asteroids"
    },
    {
        "_id": "maximum-employees-to-be-invited-to-a-meeting",
        "title_cn": "参加会议的最多员工数",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "52.9%",
        "frontend_id": "2127",
        "title_slug": "maximum-employees-to-be-invited-to-a-meeting"
    },
    {
        "_id": "number-of-unique-flavors-after-sharing-k-candies",
        "title_cn": "分享 K 个糖果后独特口味的数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "40.4%",
        "frontend_id": "2107",
        "title_slug": "number-of-unique-flavors-after-sharing-k-candies"
    },
    {
        "_id": "minimum-cost-of-buying-candies-with-discount",
        "title_cn": "打折购买糖果的最小开销",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "2144",
        "title_slug": "minimum-cost-of-buying-candies-with-discount"
    },
    {
        "_id": "count-the-hidden-sequences",
        "title_cn": "统计隐藏数组数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.7%",
        "frontend_id": "2145",
        "title_slug": "count-the-hidden-sequences"
    },
    {
        "_id": "k-highest-ranked-items-within-a-price-range",
        "title_cn": "价格范围内最高排名的 K 样物品",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "2146",
        "title_slug": "k-highest-ranked-items-within-a-price-range"
    },
    {
        "_id": "number-of-ways-to-divide-a-long-corridor",
        "title_cn": "分隔长廊的方案数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "2147",
        "title_slug": "number-of-ways-to-divide-a-long-corridor"
    },
    {
        "_id": "check-if-every-row-and-column-contains-all-numbers",
        "title_cn": "检查是否每一行每一列都包含全部整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "2133",
        "title_slug": "check-if-every-row-and-column-contains-all-numbers"
    },
    {
        "_id": "minimum-swaps-to-group-all-1s-together-ii",
        "title_cn": "最少交换次数来组合所有的 1 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "2134",
        "title_slug": "minimum-swaps-to-group-all-1s-together-ii"
    },
    {
        "_id": "count-words-obtained-after-adding-a-letter",
        "title_cn": "统计追加字母可以获得的单词数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.9%",
        "frontend_id": "2135",
        "title_slug": "count-words-obtained-after-adding-a-letter"
    },
    {
        "_id": "elements-in-array-after-removing-and-replacing-elements",
        "title_cn": "查询删除和添加元素后的数组",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": true,
        "ac_rate": "61.6%",
        "frontend_id": "2113",
        "title_slug": "elements-in-array-after-removing-and-replacing-elements"
    },
    {
        "_id": "minimum-operations-to-remove-adjacent-ones-in-matrix",
        "title_cn": "使矩阵中的 1 互不相邻的最小操作数",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "50.5%",
        "frontend_id": "2123",
        "title_slug": "minimum-operations-to-remove-adjacent-ones-in-matrix"
    },
    {
        "_id": "divide-a-string-into-groups-of-size-k",
        "title_cn": "将字符串拆分为若干长度为 k 的组",
        "difficulty": 1,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "2138",
        "title_slug": "divide-a-string-into-groups-of-size-k"
    },
    {
        "_id": "all-divisions-with-the-highest-score-of-a-binary-array",
        "title_cn": "分组得分最高的所有下标",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "2155",
        "title_slug": "all-divisions-with-the-highest-score-of-a-binary-array"
    },
    {
        "_id": "solving-questions-with-brainpower",
        "title_cn": "解决智力问题",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "2140",
        "title_slug": "solving-questions-with-brainpower"
    },
    {
        "_id": "maximum-running-time-of-n-computers",
        "title_cn": "同时运行 N 台电脑的最长时间",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "2141",
        "title_slug": "maximum-running-time-of-n-computers"
    },
    {
        "_id": "minimum-sum-of-four-digit-number-after-splitting-digits",
        "title_cn": "拆分数位后四位数字的最小和",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "83.6%",
        "frontend_id": "2160",
        "title_slug": "minimum-sum-of-four-digit-number-after-splitting-digits"
    },
    {
        "_id": "partition-array-according-to-given-pivot",
        "title_cn": "根据给定数字划分数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "82.4%",
        "frontend_id": "2161",
        "title_slug": "partition-array-according-to-given-pivot"
    },
    {
        "_id": "minimum-cost-to-set-cooking-time",
        "title_cn": "设置时间的最少代价",
        "difficulty": 2,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "35.0%",
        "frontend_id": "2162",
        "title_slug": "minimum-cost-to-set-cooking-time"
    },
    {
        "_id": "minimum-difference-in-sums-after-removal-of-elements",
        "title_cn": "删除元素后和的最小差值",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "49.7%",
        "frontend_id": "2163",
        "title_slug": "minimum-difference-in-sums-after-removal-of-elements"
    },
    {
        "_id": "remove-all-ones-with-row-and-column-flips",
        "title_cn": "通过翻转行或列来去除所有的 1",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "73.5%",
        "frontend_id": "2128",
        "title_slug": "remove-all-ones-with-row-and-column-flips"
    },
    {
        "_id": "count-elements-with-strictly-smaller-and-greater-elements",
        "title_cn": "元素计数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "2148",
        "title_slug": "count-elements-with-strictly-smaller-and-greater-elements"
    },
    {
        "_id": "find-all-lonely-numbers-in-the-array",
        "title_cn": "找出数组中的所有孤独数字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "2150",
        "title_slug": "find-all-lonely-numbers-in-the-array"
    },
    {
        "_id": "rearrange-array-elements-by-sign",
        "title_cn": "按符号重排数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.9%",
        "frontend_id": "2149",
        "title_slug": "rearrange-array-elements-by-sign"
    },
    {
        "_id": "maximum-good-people-based-on-statements",
        "title_cn": "基于陈述统计最多好人数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "2151",
        "title_slug": "maximum-good-people-based-on-statements"
    },
    {
        "_id": "pour-water-between-buckets-to-make-water-levels-equal",
        "title_cn": "通过倒水操作让所有的水桶所含水量相等",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "64.4%",
        "frontend_id": "2137",
        "title_slug": "pour-water-between-buckets-to-make-water-levels-equal"
    },
    {
        "_id": "keep-multiplying-found-values-by-two",
        "title_cn": "将找到的值乘以 2",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "2154",
        "title_slug": "keep-multiplying-found-values-by-two"
    },
    {
        "_id": "find-substring-with-given-hash-value",
        "title_cn": "查找给定哈希值的子串",
        "difficulty": 3,
        "tags_q": [
            "string",
            "sliding-window",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "26.2%",
        "frontend_id": "2156",
        "title_slug": "find-substring-with-given-hash-value"
    },
    {
        "_id": "groups-of-strings",
        "title_cn": "字符串分组",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "union-find",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "31.6%",
        "frontend_id": "2157",
        "title_slug": "groups-of-strings"
    },
    {
        "_id": "count-equal-and-divisible-pairs-in-an-array",
        "title_cn": "统计数组中相等且可以被整除的数对",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "78.8%",
        "frontend_id": "2176",
        "title_slug": "count-equal-and-divisible-pairs-in-an-array"
    },
    {
        "_id": "find-three-consecutive-integers-that-sum-to-a-given-number",
        "title_cn": "找到和为给定整数的三个连续整数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "2177",
        "title_slug": "find-three-consecutive-integers-that-sum-to-a-given-number"
    },
    {
        "_id": "maximum-split-of-positive-even-integers",
        "title_cn": "拆分成最多数目的正偶数之和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "64.1%",
        "frontend_id": "2178",
        "title_slug": "maximum-split-of-positive-even-integers"
    },
    {
        "_id": "count-good-triplets-in-an-array",
        "title_cn": "统计数组中好三元组数目",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "38.6%",
        "frontend_id": "2179",
        "title_slug": "count-good-triplets-in-an-array"
    },
    {
        "_id": "choose-numbers-from-two-arrays-in-range",
        "title_cn": "在两个数组的区间中选取数字",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "51.2%",
        "frontend_id": "2143",
        "title_slug": "choose-numbers-from-two-arrays-in-range"
    },
    {
        "_id": "sort-even-and-odd-indices-independently",
        "title_cn": "对奇偶下标分别排序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.6%",
        "frontend_id": "2164",
        "title_slug": "sort-even-and-odd-indices-independently"
    },
    {
        "_id": "smallest-value-of-the-rearranged-number",
        "title_cn": "重排数字的最小值",
        "difficulty": 2,
        "tags_q": [
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "2165",
        "title_slug": "smallest-value-of-the-rearranged-number"
    },
    {
        "_id": "design-bitset",
        "title_cn": "设计位集",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "31.5%",
        "frontend_id": "2166",
        "title_slug": "design-bitset"
    },
    {
        "_id": "minimum-time-to-remove-all-cars-containing-illegal-goods",
        "title_cn": "移除所有载有违禁货物车厢所需的最少时间",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.0%",
        "frontend_id": "2167",
        "title_slug": "minimum-time-to-remove-all-cars-containing-illegal-goods"
    },
    {
        "_id": "minimum-number-of-lines-to-cover-points",
        "title_cn": "穿过所有点的所需最少直线数量",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "geometry",
            "array",
            "hash-table",
            "math",
            "dynamic-programming",
            "backtracking",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "51.1%",
        "frontend_id": "2152",
        "title_slug": "minimum-number-of-lines-to-cover-points"
    },
    {
        "_id": "count-operations-to-obtain-zero",
        "title_cn": "得到 0 的操作数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "73.1%",
        "frontend_id": "2169",
        "title_slug": "count-operations-to-obtain-zero"
    },
    {
        "_id": "minimum-operations-to-make-the-array-alternating",
        "title_cn": "使数组变成交替数组的最少操作数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "31.6%",
        "frontend_id": "2170",
        "title_slug": "minimum-operations-to-make-the-array-alternating"
    },
    {
        "_id": "removing-minimum-number-of-magic-beans",
        "title_cn": "拿出最少数目的魔法豆",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "enumeration",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "2171",
        "title_slug": "removing-minimum-number-of-magic-beans"
    },
    {
        "_id": "maximum-and-sum-of-array",
        "title_cn": "数组的最大与和",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "52.1%",
        "frontend_id": "2172",
        "title_slug": "maximum-and-sum-of-array"
    },
    {
        "_id": "counting-words-with-a-given-prefix",
        "title_cn": "统计包含给定前缀的字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "81.4%",
        "frontend_id": "2185",
        "title_slug": "counting-words-with-a-given-prefix"
    },
    {
        "_id": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
        "title_cn": "制造字母异位词的最小步骤数 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "73.0%",
        "frontend_id": "2186",
        "title_slug": "minimum-number-of-steps-to-make-two-strings-anagram-ii"
    },
    {
        "_id": "minimum-time-to-complete-trips",
        "title_cn": "完成旅途的最少时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "29.9%",
        "frontend_id": "2187",
        "title_slug": "minimum-time-to-complete-trips"
    },
    {
        "_id": "amount-of-new-area-painted-each-day",
        "title_cn": "每天绘制新区域的数量",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "array",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "56.2%",
        "frontend_id": "2158",
        "title_slug": "amount-of-new-area-painted-each-day"
    },
    {
        "_id": "count-integers-with-even-digit-sum",
        "title_cn": "统计各位数字之和为偶数的整数个数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "2180",
        "title_slug": "count-integers-with-even-digit-sum"
    },
    {
        "_id": "merge-nodes-in-between-zeros",
        "title_cn": "合并零之间的节点",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "84.1%",
        "frontend_id": "2181",
        "title_slug": "merge-nodes-in-between-zeros"
    },
    {
        "_id": "construct-string-with-repeat-limit",
        "title_cn": "构造限制重复的字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "counting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "2182",
        "title_slug": "construct-string-with-repeat-limit"
    },
    {
        "_id": "count-array-pairs-divisible-by-k",
        "title_cn": "统计可以被 K 整除的下标对数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "28.8%",
        "frontend_id": "2183",
        "title_slug": "count-array-pairs-divisible-by-k"
    },
    {
        "_id": "unique-substrings-with-equal-digit-frequency",
        "title_cn": "每个数字的频率都相同的独特子字符串的数量",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": true,
        "ac_rate": "62.7%",
        "frontend_id": "2168",
        "title_slug": "unique-substrings-with-equal-digit-frequency"
    },
    {
        "_id": "cells-in-a-range-on-an-excel-sheet",
        "title_cn": "Excel 表中某个范围内的单元格",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "84.0%",
        "frontend_id": "2194",
        "title_slug": "cells-in-a-range-on-an-excel-sheet"
    },
    {
        "_id": "append-k-integers-with-minimal-sum",
        "title_cn": "向数组中追加 K 个整数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "24.5%",
        "frontend_id": "2195",
        "title_slug": "append-k-integers-with-minimal-sum"
    },
    {
        "_id": "create-binary-tree-from-descriptions",
        "title_cn": "根据描述创建二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.1%",
        "frontend_id": "2196",
        "title_slug": "create-binary-tree-from-descriptions"
    },
    {
        "_id": "replace-non-coprime-numbers-in-array",
        "title_cn": "替换数组中的非互质数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "35.2%",
        "frontend_id": "2197",
        "title_slug": "replace-non-coprime-numbers-in-array"
    },
    {
        "_id": "divide-array-into-equal-pairs",
        "title_cn": "将数组划分成相等数对",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "72.9%",
        "frontend_id": "2206",
        "title_slug": "divide-array-into-equal-pairs"
    },
    {
        "_id": "maximize-number-of-subsequences-in-a-string",
        "title_cn": "字符串中最多数目的子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "32.2%",
        "frontend_id": "2207",
        "title_slug": "maximize-number-of-subsequences-in-a-string"
    },
    {
        "_id": "minimum-operations-to-halve-array-sum",
        "title_cn": "将数组和减半的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "2208",
        "title_slug": "minimum-operations-to-halve-array-sum"
    },
    {
        "_id": "minimum-white-tiles-after-covering-with-carpets",
        "title_cn": "用地毯覆盖后的最少白色砖块",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "2209",
        "title_slug": "minimum-white-tiles-after-covering-with-carpets"
    },
    {
        "_id": "most-frequent-number-following-key-in-an-array",
        "title_cn": "数组中紧跟 key 之后出现最频繁的数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "2190",
        "title_slug": "most-frequent-number-following-key-in-an-array"
    },
    {
        "_id": "remove-all-ones-with-row-and-column-flips-ii",
        "title_cn": "通过翻转行或列来去除所有的 1 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "64.4%",
        "frontend_id": "2174",
        "title_slug": "remove-all-ones-with-row-and-column-flips-ii"
    },
    {
        "_id": "count-hills-and-valleys-in-an-array",
        "title_cn": "统计数组中峰和谷的数量",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "2210",
        "title_slug": "count-hills-and-valleys-in-an-array"
    },
    {
        "_id": "count-collisions-on-a-road",
        "title_cn": "统计道路上的碰撞次数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "41.7%",
        "frontend_id": "2211",
        "title_slug": "count-collisions-on-a-road"
    },
    {
        "_id": "maximum-points-in-an-archery-competition",
        "title_cn": "射箭比赛中的最大得分",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "48.4%",
        "frontend_id": "2212",
        "title_slug": "maximum-points-in-an-archery-competition"
    },
    {
        "_id": "longest-substring-of-one-repeating-character",
        "title_cn": "由单个字符重复的最长子字符串",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "array",
            "string",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "41.2%",
        "frontend_id": "2213",
        "title_slug": "longest-substring-of-one-repeating-character"
    },
    {
        "_id": "find-all-k-distant-indices-in-an-array",
        "title_cn": "找出数组中的所有 K 近邻下标",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "54.8%",
        "frontend_id": "2200",
        "title_slug": "find-all-k-distant-indices-in-an-array"
    },
    {
        "_id": "minimum-weighted-subgraph-with-the-required-paths",
        "title_cn": "得到要求路径的最小带权子图",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "2203",
        "title_slug": "minimum-weighted-subgraph-with-the-required-paths"
    },
    {
        "_id": "number-of-ways-to-build-sturdy-brick-wall",
        "title_cn": "建造坚实的砖墙的方法数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "55.8%",
        "frontend_id": "2184",
        "title_slug": "number-of-ways-to-build-sturdy-brick-wall"
    },
    {
        "_id": "minimum-bit-flips-to-convert-number",
        "title_cn": "转换数字的最少位翻转次数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "82.5%",
        "frontend_id": "2220",
        "title_slug": "minimum-bit-flips-to-convert-number"
    },
    {
        "_id": "find-triangular-sum-of-an-array",
        "title_cn": "数组的三角和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "combinatorics",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.1%",
        "frontend_id": "2221",
        "title_slug": "find-triangular-sum-of-an-array"
    },
    {
        "_id": "number-of-ways-to-select-buildings",
        "title_cn": "选择建筑的方案数",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "50.6%",
        "frontend_id": "2222",
        "title_slug": "number-of-ways-to-select-buildings"
    },
    {
        "_id": "sum-of-scores-of-built-strings",
        "title_cn": "构造字符串的总得分和",
        "difficulty": 3,
        "tags_q": [
            "string",
            "binary-search",
            "string-matching",
            "suffix-array",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "2223",
        "title_slug": "sum-of-scores-of-built-strings"
    },
    {
        "_id": "largest-number-after-digit-swaps-by-parity",
        "title_cn": "按奇偶性交换后的最大数字",
        "difficulty": 1,
        "tags_q": [
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "2231",
        "title_slug": "largest-number-after-digit-swaps-by-parity"
    },
    {
        "_id": "minimize-result-by-adding-parentheses-to-expression",
        "title_cn": "向表达式添加括号后的最小结果",
        "difficulty": 2,
        "tags_q": [
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "2232",
        "title_slug": "minimize-result-by-adding-parentheses-to-expression"
    },
    {
        "_id": "maximum-product-after-k-increments",
        "title_cn": "K 次增加后的最大乘积",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "2233",
        "title_slug": "maximum-product-after-k-increments"
    },
    {
        "_id": "maximum-total-beauty-of-the-gardens",
        "title_cn": "花园的最大总美丽值",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "28.2%",
        "frontend_id": "2234",
        "title_slug": "maximum-total-beauty-of-the-gardens"
    },
    {
        "_id": "intersection-of-multiple-arrays",
        "title_cn": "多个数组求交集",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "2248",
        "title_slug": "intersection-of-multiple-arrays"
    },
    {
        "_id": "count-lattice-points-inside-a-circle",
        "title_cn": "统计圆内格点数目",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "hash-table",
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "2249",
        "title_slug": "count-lattice-points-inside-a-circle"
    },
    {
        "_id": "count-number-of-rectangles-containing-each-point",
        "title_cn": "统计包含每个点的矩形数目",
        "difficulty": 2,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.5%",
        "frontend_id": "2250",
        "title_slug": "count-number-of-rectangles-containing-each-point"
    },
    {
        "_id": "number-of-flowers-in-full-bloom",
        "title_cn": "花期内花的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "ordered-set",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "2251",
        "title_slug": "number-of-flowers-in-full-bloom"
    },
    {
        "_id": "remove-digit-from-number-to-maximize-result",
        "title_cn": "移除指定数字得到的最大结果",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "2259",
        "title_slug": "remove-digit-from-number-to-maximize-result"
    },
    {
        "_id": "minimum-consecutive-cards-to-pick-up",
        "title_cn": "必须拿起的最小连续卡牌数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "51.4%",
        "frontend_id": "2260",
        "title_slug": "minimum-consecutive-cards-to-pick-up"
    },
    {
        "_id": "k-divisible-elements-subarrays",
        "title_cn": "含最多 K 个可整除元素的子数组",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "enumeration",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "2261",
        "title_slug": "k-divisible-elements-subarrays"
    },
    {
        "_id": "total-appeal-of-a-string",
        "title_cn": "字符串的总引力",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "2262",
        "title_slug": "total-appeal-of-a-string"
    },
    {
        "_id": "count-prefixes-of-a-given-string",
        "title_cn": "统计是给定字符串前缀的字符串数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.6%",
        "frontend_id": "2255",
        "title_slug": "count-prefixes-of-a-given-string"
    },
    {
        "_id": "minimum-average-difference",
        "title_cn": "最小平均差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "2256",
        "title_slug": "minimum-average-difference"
    },
    {
        "_id": "count-unguarded-cells-in-the-grid",
        "title_cn": "统计网格图中没有被保卫的格子数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "2257",
        "title_slug": "count-unguarded-cells-in-the-grid"
    },
    {
        "_id": "escape-the-spreading-fire",
        "title_cn": "逃离火灾",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "2258",
        "title_slug": "escape-the-spreading-fire"
    },
    {
        "_id": "minimum-number-of-operations-to-convert-time",
        "title_cn": "转化时间需要的最少操作数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "2224",
        "title_slug": "minimum-number-of-operations-to-convert-time"
    },
    {
        "_id": "largest-3-same-digit-number-in-string",
        "title_cn": "字符串中最大的 3 位相同数字",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "2264",
        "title_slug": "largest-3-same-digit-number-in-string"
    },
    {
        "_id": "count-nodes-equal-to-average-of-subtree",
        "title_cn": "统计值等于子树平均值的节点数",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "82.5%",
        "frontend_id": "2265",
        "title_slug": "count-nodes-equal-to-average-of-subtree"
    },
    {
        "_id": "count-number-of-texts",
        "title_cn": "统计打字方案数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "2266",
        "title_slug": "count-number-of-texts"
    },
    {
        "_id": "check-if-there-is-a-valid-parentheses-string-path",
        "title_cn": "检查是否有合法括号字符串路径",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "2267",
        "title_slug": "check-if-there-is-a-valid-parentheses-string-path"
    },
    {
        "_id": "find-closest-number-to-zero",
        "title_cn": "找到最接近 0 的数字",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "2239",
        "title_slug": "find-closest-number-to-zero"
    },
    {
        "_id": "number-of-ways-to-buy-pens-and-pencils",
        "title_cn": "买钢笔和铅笔的方案数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "62.0%",
        "frontend_id": "2240",
        "title_slug": "number-of-ways-to-buy-pens-and-pencils"
    },
    {
        "_id": "design-an-atm-machine",
        "title_cn": "设计一个 ATM 机器",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "design",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "2241",
        "title_slug": "design-an-atm-machine"
    },
    {
        "_id": "maximum-score-of-a-node-sequence",
        "title_cn": "节点序列的最大得分",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "array",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.2%",
        "frontend_id": "2242",
        "title_slug": "maximum-score-of-a-node-sequence"
    },
    {
        "_id": "minimum-health-to-beat-game",
        "title_cn": "通关游戏所需的最低生命值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "54.9%",
        "frontend_id": "2214",
        "title_slug": "minimum-health-to-beat-game"
    },
    {
        "_id": "maximum-consecutive-floors-without-special-floors",
        "title_cn": "不含特殊楼层的最大连续楼层数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "2274",
        "title_slug": "maximum-consecutive-floors-without-special-floors"
    },
    {
        "_id": "largest-combination-with-bitwise-and-greater-than-zero",
        "title_cn": "按位与结果大于零的最长组合",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "61.2%",
        "frontend_id": "2275",
        "title_slug": "largest-combination-with-bitwise-and-greater-than-zero"
    },
    {
        "_id": "count-integers-in-intervals",
        "title_cn": "统计区间中的整数数目",
        "difficulty": 3,
        "tags_q": [
            "design",
            "segment-tree",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "2276",
        "title_slug": "count-integers-in-intervals"
    },
    {
        "_id": "number-of-ways-to-split-array",
        "title_cn": "分割数组的方案数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "46.8%",
        "frontend_id": "2270",
        "title_slug": "number-of-ways-to-split-array"
    },
    {
        "_id": "substring-with-largest-variance",
        "title_cn": "最大波动的子字符串",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.6%",
        "frontend_id": "2272",
        "title_slug": "substring-with-largest-variance"
    },
    {
        "_id": "calculate-digit-sum-of-a-string",
        "title_cn": "计算字符串的数字和",
        "difficulty": 1,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2243",
        "title_slug": "calculate-digit-sum-of-a-string"
    },
    {
        "_id": "minimum-rounds-to-complete-all-tasks",
        "title_cn": "完成所有任务需要的最少轮数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "2244",
        "title_slug": "minimum-rounds-to-complete-all-tasks"
    },
    {
        "_id": "longest-path-with-different-adjacent-characters",
        "title_cn": "相邻字符不同的最长路径",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "graph",
            "topological-sort",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "49.2%",
        "frontend_id": "2246",
        "title_slug": "longest-path-with-different-adjacent-characters"
    },
    {
        "_id": "percentage-of-letter-in-string",
        "title_cn": "字母在字符串中的百分比",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "80.2%",
        "frontend_id": "2278",
        "title_slug": "percentage-of-letter-in-string"
    },
    {
        "_id": "maximum-bags-with-full-capacity-of-rocks",
        "title_cn": "装满石头的背包的最大数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "2279",
        "title_slug": "maximum-bags-with-full-capacity-of-rocks"
    },
    {
        "_id": "minimum-lines-to-represent-a-line-chart",
        "title_cn": "表示一个折线图的最少线段数",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "number-theory",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "23.3%",
        "frontend_id": "2280",
        "title_slug": "minimum-lines-to-represent-a-line-chart"
    },
    {
        "_id": "sum-of-total-strength-of-wizards",
        "title_cn": "巫师的总力量和",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "prefix-sum",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "27.9%",
        "frontend_id": "2281",
        "title_slug": "sum-of-total-strength-of-wizards"
    },
    {
        "_id": "rearrange-characters-to-make-target-string",
        "title_cn": "重排字符形成目标字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "2287",
        "title_slug": "rearrange-characters-to-make-target-string"
    },
    {
        "_id": "apply-discount-to-prices",
        "title_cn": "价格减免",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "32.1%",
        "frontend_id": "2288",
        "title_slug": "apply-discount-to-prices"
    },
    {
        "_id": "steps-to-make-array-non-decreasing",
        "title_cn": "使数组按非递减顺序排列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "linked-list",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "22.5%",
        "frontend_id": "2289",
        "title_slug": "steps-to-make-array-non-decreasing"
    },
    {
        "_id": "minimum-obstacle-removal-to-reach-corner",
        "title_cn": "到达角落需要移除障碍物的最小数目",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "2290",
        "title_slug": "minimum-obstacle-removal-to-reach-corner"
    },
    {
        "_id": "check-if-number-has-equal-digit-count-and-digit-value",
        "title_cn": "判断一个数的数字计数是否等于数位的值",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "78.5%",
        "frontend_id": "2283",
        "title_slug": "check-if-number-has-equal-digit-count-and-digit-value"
    },
    {
        "_id": "sender-with-largest-word-count",
        "title_cn": "最多单词数的发件人",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "2284",
        "title_slug": "sender-with-largest-word-count"
    },
    {
        "_id": "maximum-total-importance-of-roads",
        "title_cn": "道路的最大总重要性",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "graph",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "2285",
        "title_slug": "maximum-total-importance-of-roads"
    },
    {
        "_id": "add-two-integers",
        "title_cn": "两整数相加",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "79.3%",
        "frontend_id": "2235",
        "title_slug": "add-two-integers"
    },
    {
        "_id": "root-equals-sum-of-children",
        "title_cn": "判断根结点是否等于子结点之和",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "2236",
        "title_slug": "root-equals-sum-of-children"
    },
    {
        "_id": "count-positions-on-street-with-required-brightness",
        "title_cn": "计算街道上满足所需亮度的位置数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "71.2%",
        "frontend_id": "2237",
        "title_slug": "count-positions-on-street-with-required-brightness"
    },
    {
        "_id": "min-max-game",
        "title_cn": "极大极小游戏",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "72.9%",
        "frontend_id": "2293",
        "title_slug": "min-max-game"
    },
    {
        "_id": "partition-array-such-that-maximum-difference-is-k",
        "title_cn": "划分数组使最大差为 K",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "2294",
        "title_slug": "partition-array-such-that-maximum-difference-is-k"
    },
    {
        "_id": "replace-elements-in-an-array",
        "title_cn": "替换数组中的元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "58.4%",
        "frontend_id": "2295",
        "title_slug": "replace-elements-in-an-array"
    },
    {
        "_id": "design-a-text-editor",
        "title_cn": "设计一个文本编辑器",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "design",
            "linked-list",
            "string",
            "doubly-linked-list",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "2296",
        "title_slug": "design-a-text-editor"
    },
    {
        "_id": "naming-a-company",
        "title_cn": "公司命名",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "44.9%",
        "frontend_id": "2306",
        "title_slug": "naming-a-company"
    },
    {
        "_id": "strong-password-checker-ii",
        "title_cn": "强密码检验器 II",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "2299",
        "title_slug": "strong-password-checker-ii"
    },
    {
        "_id": "successful-pairs-of-spells-and-potions",
        "title_cn": "咒语和药水的成功对数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "2300",
        "title_slug": "successful-pairs-of-spells-and-potions"
    },
    {
        "_id": "match-substring-after-replacement",
        "title_cn": "替换字符后匹配",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "2301",
        "title_slug": "match-substring-after-replacement"
    },
    {
        "_id": "count-subarrays-with-score-less-than-k",
        "title_cn": "统计得分小于 K 的子数组数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "2302",
        "title_slug": "count-subarrays-with-score-less-than-k"
    },
    {
        "_id": "longest-binary-subsequence-less-than-or-equal-to-k",
        "title_cn": "小于等于 K 的最长二进制子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "memoization",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.6%",
        "frontend_id": "2311",
        "title_slug": "longest-binary-subsequence-less-than-or-equal-to-k"
    },
    {
        "_id": "design-video-sharing-platform",
        "title_cn": "设计视频共享平台",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "design",
            "hash-table",
            "ordered-set"
        ],
        "paid_only": true,
        "ac_rate": "60.0%",
        "frontend_id": "2254",
        "title_slug": "design-video-sharing-platform"
    },
    {
        "_id": "count-number-of-ways-to-place-houses",
        "title_cn": "统计放置房子的方式数",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "2320",
        "title_slug": "count-number-of-ways-to-place-houses"
    },
    {
        "_id": "check-if-matrix-is-x-matrix",
        "title_cn": "判断矩阵是否是一个 X 矩阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "75.9%",
        "frontend_id": "2319",
        "title_slug": "check-if-matrix-is-x-matrix"
    },
    {
        "_id": "minimum-flips-in-binary-tree-to-get-result",
        "title_cn": "二叉树中得到结果所需的最少翻转次数",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "66.5%",
        "frontend_id": "2313",
        "title_slug": "minimum-flips-in-binary-tree-to-get-result"
    },
    {
        "_id": "minimum-score-after-removals-on-a-tree",
        "title_cn": "从树中删除边的最小分数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "depth-first-search",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "2322",
        "title_slug": "minimum-score-after-removals-on-a-tree"
    },
    {
        "_id": "count-asterisks",
        "title_cn": "统计星号",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.1%",
        "frontend_id": "2315",
        "title_slug": "count-asterisks"
    },
    {
        "_id": "maximum-xor-after-operations",
        "title_cn": "操作后的最大异或和",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "2317",
        "title_slug": "maximum-xor-after-operations"
    },
    {
        "_id": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
        "title_cn": "统计无向图中无法互相到达点对数",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "2316",
        "title_slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph"
    },
    {
        "_id": "number-of-distinct-roll-sequences",
        "title_cn": "不同骰子序列的数目",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "2318",
        "title_slug": "number-of-distinct-roll-sequences"
    },
    {
        "_id": "minimum-number-of-keypresses",
        "title_cn": "最少按键次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "67.7%",
        "frontend_id": "2268",
        "title_slug": "minimum-number-of-keypresses"
    },
    {
        "_id": "decode-the-message",
        "title_cn": "解密消息",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "84.8%",
        "frontend_id": "2325",
        "title_slug": "decode-the-message"
    },
    {
        "_id": "number-of-people-aware-of-a-secret",
        "title_cn": "知道秘密的人数",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "dynamic-programming",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "45.8%",
        "frontend_id": "2327",
        "title_slug": "number-of-people-aware-of-a-secret"
    },
    {
        "_id": "number-of-increasing-paths-in-a-grid",
        "title_cn": "网格图中递增路径的数目",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "2328",
        "title_slug": "number-of-increasing-paths-in-a-grid"
    },
    {
        "_id": "spiral-matrix-iv",
        "title_cn": "螺旋矩阵 IV",
        "difficulty": 2,
        "tags_q": [
            "array",
            "linked-list",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "67.1%",
        "frontend_id": "2326",
        "title_slug": "spiral-matrix-iv"
    },
    {
        "_id": "minimum-amount-of-time-to-fill-cups",
        "title_cn": "装满杯子需要的最短总时长",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "2335",
        "title_slug": "minimum-amount-of-time-to-fill-cups"
    },
    {
        "_id": "smallest-number-in-infinite-set",
        "title_cn": "无限集中的最小数字",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "2336",
        "title_slug": "smallest-number-in-infinite-set"
    },
    {
        "_id": "move-pieces-to-obtain-a-string",
        "title_cn": "移动片段得到字符串",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "2337",
        "title_slug": "move-pieces-to-obtain-a-string"
    },
    {
        "_id": "count-the-number-of-ideal-arrays",
        "title_cn": "统计理想数组的数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "31.2%",
        "frontend_id": "2338",
        "title_slug": "count-the-number-of-ideal-arrays"
    },
    {
        "_id": "evaluate-boolean-binary-tree",
        "title_cn": "计算布尔二叉树的值",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "82.9%",
        "frontend_id": "2331",
        "title_slug": "evaluate-boolean-binary-tree"
    },
    {
        "_id": "the-latest-time-to-catch-a-bus",
        "title_cn": "坐上公交的最晚时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "25.3%",
        "frontend_id": "2332",
        "title_slug": "the-latest-time-to-catch-a-bus"
    },
    {
        "_id": "minimum-sum-of-squared-difference",
        "title_cn": "最小差值平方和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "27.2%",
        "frontend_id": "2333",
        "title_slug": "minimum-sum-of-squared-difference"
    },
    {
        "_id": "subarray-with-elements-greater-than-varying-threshold",
        "title_cn": "元素值大于变化阈值的子数组",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "union-find",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "2334",
        "title_slug": "subarray-with-elements-greater-than-varying-threshold"
    },
    {
        "_id": "closest-node-to-path-in-tree",
        "title_cn": "树中最接近路径的节点",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "66.5%",
        "frontend_id": "2277",
        "title_slug": "closest-node-to-path-in-tree"
    },
    {
        "_id": "maximum-number-of-pairs-in-array",
        "title_cn": "数组能形成多少数对",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "81.0%",
        "frontend_id": "2341",
        "title_slug": "maximum-number-of-pairs-in-array"
    },
    {
        "_id": "query-kth-smallest-trimmed-number",
        "title_cn": "裁剪数字后查询第 K 小的数字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "divide-and-conquer",
            "quickselect",
            "radix-sort",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "2343",
        "title_slug": "query-kth-smallest-trimmed-number"
    },
    {
        "_id": "minimum-deletions-to-make-array-divisible",
        "title_cn": "使数组可以被整除的最少删除次数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "number-theory",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.9%",
        "frontend_id": "2344",
        "title_slug": "minimum-deletions-to-make-array-divisible"
    },
    {
        "_id": "number-of-people-that-can-be-seen-in-a-grid",
        "title_cn": "在一个网格中可以看到的人数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "matrix",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "47.4%",
        "frontend_id": "2282",
        "title_slug": "number-of-people-that-can-be-seen-in-a-grid"
    },
    {
        "_id": "maximum-profit-from-trading-stocks",
        "title_cn": "最大股票收益",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "57.5%",
        "frontend_id": "2291",
        "title_slug": "maximum-profit-from-trading-stocks"
    },
    {
        "_id": "first-letter-to-appear-twice",
        "title_cn": "第一个出现两次的字母",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "83.9%",
        "frontend_id": "2351",
        "title_slug": "first-letter-to-appear-twice"
    },
    {
        "_id": "equal-row-and-column-pairs",
        "title_cn": "相等行列对",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "73.2%",
        "frontend_id": "2352",
        "title_slug": "equal-row-and-column-pairs"
    },
    {
        "_id": "design-a-food-rating-system",
        "title_cn": "设计食物评分系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "31.3%",
        "frontend_id": "2353",
        "title_slug": "design-a-food-rating-system"
    },
    {
        "_id": "number-of-excellent-pairs",
        "title_cn": "优质数对的数目",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "2354",
        "title_slug": "number-of-excellent-pairs"
    },
    {
        "_id": "number-of-zero-filled-subarrays",
        "title_cn": "全 0 子数组的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "2348",
        "title_slug": "number-of-zero-filled-subarrays"
    },
    {
        "_id": "best-poker-hand",
        "title_cn": "最好的扑克手牌",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "2347",
        "title_slug": "best-poker-hand"
    },
    {
        "_id": "design-a-number-container-system",
        "title_cn": "设计数字容器系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "37.5%",
        "frontend_id": "2349",
        "title_slug": "design-a-number-container-system"
    },
    {
        "_id": "shortest-impossible-sequence-of-rolls",
        "title_cn": "不可能得到的最短骰子序列",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "2350",
        "title_slug": "shortest-impossible-sequence-of-rolls"
    },
    {
        "_id": "make-array-zero-by-subtracting-equal-amounts",
        "title_cn": "使数组中所有元素都等于零",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "75.6%",
        "frontend_id": "2357",
        "title_slug": "make-array-zero-by-subtracting-equal-amounts"
    },
    {
        "_id": "maximum-number-of-groups-entering-a-competition",
        "title_cn": "分组的最大数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "64.8%",
        "frontend_id": "2358",
        "title_slug": "maximum-number-of-groups-entering-a-competition"
    },
    {
        "_id": "find-closest-node-to-given-two-nodes",
        "title_cn": "找到离给定两个节点最近的节点",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "31.1%",
        "frontend_id": "2359",
        "title_slug": "find-closest-node-to-given-two-nodes"
    },
    {
        "_id": "longest-cycle-in-a-graph",
        "title_cn": "图中的最长环",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "38.9%",
        "frontend_id": "2360",
        "title_slug": "longest-cycle-in-a-graph"
    },
    {
        "_id": "number-of-arithmetic-triplets",
        "title_cn": "算术三元组的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "83.2%",
        "frontend_id": "2367",
        "title_slug": "number-of-arithmetic-triplets"
    },
    {
        "_id": "check-if-there-is-a-valid-partition-for-the-array",
        "title_cn": "检查数组是否存在有效划分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "2369",
        "title_slug": "check-if-there-is-a-valid-partition-for-the-array"
    },
    {
        "_id": "longest-ideal-subsequence",
        "title_cn": "最长理想子序列",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "2370",
        "title_slug": "longest-ideal-subsequence"
    },
    {
        "_id": "reachable-nodes-with-restrictions",
        "title_cn": "受限条件下可到达节点的数目",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "57.6%",
        "frontend_id": "2368",
        "title_slug": "reachable-nodes-with-restrictions"
    },
    {
        "_id": "merge-similar-items",
        "title_cn": "合并相似的物品",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "ordered-set",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "2363",
        "title_slug": "merge-similar-items"
    },
    {
        "_id": "count-number-of-bad-pairs",
        "title_cn": "统计坏数对的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2364",
        "title_slug": "count-number-of-bad-pairs"
    },
    {
        "_id": "maximum-number-of-robots-within-budget",
        "title_cn": "预算内的最多机器人数目",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "36.2%",
        "frontend_id": "2398",
        "title_slug": "maximum-number-of-robots-within-budget"
    },
    {
        "_id": "minimum-replacements-to-sort-the-array",
        "title_cn": "将数组排序的最少替换次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "44.0%",
        "frontend_id": "2366",
        "title_slug": "minimum-replacements-to-sort-the-array"
    },
    {
        "_id": "largest-local-values-in-a-matrix",
        "title_cn": "矩阵中的局部最大值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "84.7%",
        "frontend_id": "2373",
        "title_slug": "largest-local-values-in-a-matrix"
    },
    {
        "_id": "node-with-highest-edge-score",
        "title_cn": "边积分最高的节点",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2374",
        "title_slug": "node-with-highest-edge-score"
    },
    {
        "_id": "construct-smallest-number-from-di-string",
        "title_cn": "根据模式串构造最小数字",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "2375",
        "title_slug": "construct-smallest-number-from-di-string"
    },
    {
        "_id": "find-minimum-time-to-finish-all-jobs-ii",
        "title_cn": "完成所有工作的最短时间 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "71.1%",
        "frontend_id": "2323",
        "title_slug": "find-minimum-time-to-finish-all-jobs-ii"
    },
    {
        "_id": "minimum-hours-of-training-to-win-a-competition",
        "title_cn": "赢得比赛需要的最少训练时长",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "2383",
        "title_slug": "minimum-hours-of-training-to-win-a-competition"
    },
    {
        "_id": "amount-of-time-for-binary-tree-to-be-infected",
        "title_cn": "感染二叉树需要的总时间",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "2385",
        "title_slug": "amount-of-time-for-binary-tree-to-be-infected"
    },
    {
        "_id": "find-the-k-sum-of-an-array",
        "title_cn": "找出数组的第 K 大和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "2386",
        "title_slug": "find-the-k-sum-of-an-array"
    },
    {
        "_id": "minimum-recolors-to-get-k-consecutive-black-blocks",
        "title_cn": "得到 K 个黑块的最少涂色次数",
        "difficulty": 1,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "2379",
        "title_slug": "minimum-recolors-to-get-k-consecutive-black-blocks"
    },
    {
        "_id": "time-needed-to-rearrange-a-binary-string",
        "title_cn": "二进制字符串重新安排顺序需要的时间",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "2380",
        "title_slug": "time-needed-to-rearrange-a-binary-string"
    },
    {
        "_id": "shifting-letters-ii",
        "title_cn": "字母移位 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "39.4%",
        "frontend_id": "2381",
        "title_slug": "shifting-letters-ii"
    },
    {
        "_id": "maximum-segment-sum-after-removals",
        "title_cn": "删除操作后的最大子段和",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "ordered-set",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "2382",
        "title_slug": "maximum-segment-sum-after-removals"
    },
    {
        "_id": "valid-palindrome-iv",
        "title_cn": "验证回文串 IV",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "76.7%",
        "frontend_id": "2330",
        "title_slug": "valid-palindrome-iv"
    },
    {
        "_id": "longest-subsequence-with-limited-sum",
        "title_cn": "和有限的最长子序列",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "2389",
        "title_slug": "longest-subsequence-with-limited-sum"
    },
    {
        "_id": "removing-stars-from-a-string",
        "title_cn": "从字符串中移除星号",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "72.3%",
        "frontend_id": "2390",
        "title_slug": "removing-stars-from-a-string"
    },
    {
        "_id": "minimum-amount-of-time-to-collect-garbage",
        "title_cn": "收集垃圾的最少总时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "2391",
        "title_slug": "minimum-amount-of-time-to-collect-garbage"
    },
    {
        "_id": "build-a-matrix-with-conditions",
        "title_cn": "给定条件下构造矩阵",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "topological-sort",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "2392",
        "title_slug": "build-a-matrix-with-conditions"
    },
    {
        "_id": "minimum-adjacent-swaps-to-make-a-valid-array",
        "title_cn": "生成有效数组的最少交换次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "71.8%",
        "frontend_id": "2340",
        "title_slug": "minimum-adjacent-swaps-to-make-a-valid-array"
    },
    {
        "_id": "largest-palindromic-number",
        "title_cn": "最大回文数字",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "32.0%",
        "frontend_id": "2384",
        "title_slug": "largest-palindromic-number"
    },
    {
        "_id": "check-distances-between-same-letters",
        "title_cn": "检查相同字母间的距离",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "2399",
        "title_slug": "check-distances-between-same-letters"
    },
    {
        "_id": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
        "title_cn": "恰好移动 k 步到达某一位置的方法数目",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "33.4%",
        "frontend_id": "2400",
        "title_slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps"
    },
    {
        "_id": "longest-nice-subarray",
        "title_cn": "最长优雅子数组",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "2401",
        "title_slug": "longest-nice-subarray"
    },
    {
        "_id": "meeting-rooms-iii",
        "title_cn": "会议室 III",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "33.3%",
        "frontend_id": "2402",
        "title_slug": "meeting-rooms-iii"
    },
    {
        "_id": "find-subarrays-with-equal-sum",
        "title_cn": "和相等的子数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "2395",
        "title_slug": "find-subarrays-with-equal-sum"
    },
    {
        "_id": "strictly-palindromic-number",
        "title_cn": "严格回文的数字",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "math",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "87.7%",
        "frontend_id": "2396",
        "title_slug": "strictly-palindromic-number"
    },
    {
        "_id": "maximum-rows-covered-by-columns",
        "title_cn": "被列覆盖的最多行数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "enumeration",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "68.9%",
        "frontend_id": "2397",
        "title_slug": "maximum-rows-covered-by-columns"
    },
    {
        "_id": "task-scheduler-ii",
        "title_cn": "任务调度器 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "2365",
        "title_slug": "task-scheduler-ii"
    },
    {
        "_id": "finding-the-number-of-visible-mountains",
        "title_cn": "寻找可见山的数量",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "50.5%",
        "frontend_id": "2345",
        "title_slug": "finding-the-number-of-visible-mountains"
    },
    {
        "_id": "most-frequent-even-element",
        "title_cn": "出现最频繁的偶数元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "2404",
        "title_slug": "most-frequent-even-element"
    },
    {
        "_id": "optimal-partition-of-string",
        "title_cn": "子字符串的最优划分",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "2405",
        "title_slug": "optimal-partition-of-string"
    },
    {
        "_id": "divide-intervals-into-minimum-number-of-groups",
        "title_cn": "将区间分为最少组数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "prefix-sum",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "47.2%",
        "frontend_id": "2406",
        "title_slug": "divide-intervals-into-minimum-number-of-groups"
    },
    {
        "_id": "sort-array-by-moving-items-to-empty-space",
        "title_cn": "通过移动项目到空白区域来排序数组",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "53.6%",
        "frontend_id": "2459",
        "title_slug": "sort-array-by-moving-items-to-empty-space"
    },
    {
        "_id": "maximum-number-of-books-you-can-take",
        "title_cn": "你能拿走的最大图书数量",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "53.8%",
        "frontend_id": "2355",
        "title_slug": "maximum-number-of-books-you-can-take"
    },
    {
        "_id": "smallest-even-multiple",
        "title_cn": "最小偶倍数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "84.4%",
        "frontend_id": "2413",
        "title_slug": "smallest-even-multiple"
    },
    {
        "_id": "length-of-the-longest-alphabetical-continuous-substring",
        "title_cn": "最长的字母序连续子字符串的长度",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "60.9%",
        "frontend_id": "2414",
        "title_slug": "length-of-the-longest-alphabetical-continuous-substring"
    },
    {
        "_id": "reverse-odd-levels-of-binary-tree",
        "title_cn": "反转二叉树的奇数层",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "79.8%",
        "frontend_id": "2415",
        "title_slug": "reverse-odd-levels-of-binary-tree"
    },
    {
        "_id": "sum-of-prefix-scores-of-strings",
        "title_cn": "字符串的前缀分数和",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "2416",
        "title_slug": "sum-of-prefix-scores-of-strings"
    },
    {
        "_id": "count-days-spent-together",
        "title_cn": "统计共同度过的日子数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "2409",
        "title_slug": "count-days-spent-together"
    },
    {
        "_id": "maximum-matching-of-players-with-trainers",
        "title_cn": "运动员和训练师的最大匹配数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.8%",
        "frontend_id": "2410",
        "title_slug": "maximum-matching-of-players-with-trainers"
    },
    {
        "_id": "smallest-subarrays-with-maximum-bitwise-or",
        "title_cn": "按位或最大的最小子数组长度",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "binary-search",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "45.2%",
        "frontend_id": "2411",
        "title_slug": "smallest-subarrays-with-maximum-bitwise-or"
    },
    {
        "_id": "minimum-money-required-before-transactions",
        "title_cn": "完成所有交易的初始最少钱数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.6%",
        "frontend_id": "2412",
        "title_slug": "minimum-money-required-before-transactions"
    },
    {
        "_id": "minimum-costs-using-the-train-line",
        "title_cn": "乘坐火车路线的最少费用",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "74.4%",
        "frontend_id": "2361",
        "title_slug": "minimum-costs-using-the-train-line"
    },
    {
        "_id": "sort-the-people",
        "title_cn": "按身高排序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.4%",
        "frontend_id": "2418",
        "title_slug": "sort-the-people"
    },
    {
        "_id": "longest-subarray-with-maximum-bitwise-and",
        "title_cn": "按位与最大的最长子数组",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "43.3%",
        "frontend_id": "2419",
        "title_slug": "longest-subarray-with-maximum-bitwise-and"
    },
    {
        "_id": "find-all-good-indices",
        "title_cn": "找到所有好下标",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "32.8%",
        "frontend_id": "2420",
        "title_slug": "find-all-good-indices"
    },
    {
        "_id": "number-of-good-paths",
        "title_cn": "好路径的数目",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "union-find",
            "graph",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.0%",
        "frontend_id": "2421",
        "title_slug": "number-of-good-paths"
    },
    {
        "_id": "minimize-maximum-value-in-a-grid",
        "title_cn": "最小化网格中的最大值",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "graph",
            "topological-sort",
            "array",
            "matrix",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "69.7%",
        "frontend_id": "2371",
        "title_slug": "minimize-maximum-value-in-a-grid"
    },
    {
        "_id": "number-of-common-factors",
        "title_cn": "公因子的数目",
        "difficulty": 1,
        "tags_q": [
            "math",
            "enumeration",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "80.4%",
        "frontend_id": "2427",
        "title_slug": "number-of-common-factors"
    },
    {
        "_id": "maximum-sum-of-an-hourglass",
        "title_cn": "沙漏的最大总和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "74.6%",
        "frontend_id": "2428",
        "title_slug": "maximum-sum-of-an-hourglass"
    },
    {
        "_id": "minimize-xor",
        "title_cn": "最小异或",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "2429",
        "title_slug": "minimize-xor"
    },
    {
        "_id": "maximum-deletions-on-a-string",
        "title_cn": "对字母串可执行的最大删除数",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "2430",
        "title_slug": "maximum-deletions-on-a-string"
    },
    {
        "_id": "partition-string-into-substrings-with-values-at-most-k",
        "title_cn": "将字符串分割成值不超过 K 的子字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.8%",
        "frontend_id": "2522",
        "title_slug": "partition-string-into-substrings-with-values-at-most-k"
    },
    {
        "_id": "longest-uploaded-prefix",
        "title_cn": "最长上传前缀",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "design",
            "binary-indexed-tree",
            "segment-tree",
            "binary-search",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "2424",
        "title_slug": "longest-uploaded-prefix"
    },
    {
        "_id": "number-of-pairs-satisfying-inequality",
        "title_cn": "满足不等式的数对数目",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "2426",
        "title_slug": "number-of-pairs-satisfying-inequality"
    },
    {
        "_id": "choose-edges-to-maximize-score-in-a-tree",
        "title_cn": "选择边来最大化树的得分",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "62.4%",
        "frontend_id": "2378",
        "title_slug": "choose-edges-to-maximize-score-in-a-tree"
    },
    {
        "_id": "the-employee-that-worked-on-the-longest-task",
        "title_cn": "处理用时最长的那个任务的员工",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "2432",
        "title_slug": "the-employee-that-worked-on-the-longest-task"
    },
    {
        "_id": "find-the-original-array-of-prefix-xor",
        "title_cn": "找出前缀异或的原始数组",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "84.9%",
        "frontend_id": "2433",
        "title_slug": "find-the-original-array-of-prefix-xor"
    },
    {
        "_id": "using-a-robot-to-print-the-lexicographically-smallest-string",
        "title_cn": "使用机器人打印字典序最小的字符串",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2434",
        "title_slug": "using-a-robot-to-print-the-lexicographically-smallest-string"
    },
    {
        "_id": "paths-in-matrix-whose-sum-is-divisible-by-k",
        "title_cn": "矩阵中和能被 K 整除的路径",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "51.9%",
        "frontend_id": "2435",
        "title_slug": "paths-in-matrix-whose-sum-is-divisible-by-k"
    },
    {
        "_id": "median-of-a-row-wise-sorted-matrix",
        "title_cn": "行排序矩阵的中位数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "75.9%",
        "frontend_id": "2387",
        "title_slug": "median-of-a-row-wise-sorted-matrix"
    },
    {
        "_id": "largest-positive-integer-that-exists-with-its-negative",
        "title_cn": "与对应负数同时存在的最大正整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "2441",
        "title_slug": "largest-positive-integer-that-exists-with-its-negative"
    },
    {
        "_id": "count-number-of-distinct-integers-after-reverse-operations",
        "title_cn": "反转之后不同整数的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "75.7%",
        "frontend_id": "2442",
        "title_slug": "count-number-of-distinct-integers-after-reverse-operations"
    },
    {
        "_id": "longest-increasing-subsequence-ii",
        "title_cn": "最长递增子序列 II",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "queue",
            "array",
            "divide-and-conquer",
            "dynamic-programming",
            "monotonic-queue"
        ],
        "paid_only": false,
        "ac_rate": "31.4%",
        "frontend_id": "2407",
        "title_slug": "longest-increasing-subsequence-ii"
    },
    {
        "_id": "count-subarrays-with-fixed-bounds",
        "title_cn": "统计定界子数组的数目",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "sliding-window",
            "monotonic-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "2444",
        "title_slug": "count-subarrays-with-fixed-bounds"
    },
    {
        "_id": "number-of-valid-clock-times",
        "title_cn": "有效时间的数目",
        "difficulty": 1,
        "tags_q": [
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "2437",
        "title_slug": "number-of-valid-clock-times"
    },
    {
        "_id": "range-product-queries-of-powers",
        "title_cn": "二的幂数组中查询范围内的乘积",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "42.7%",
        "frontend_id": "2438",
        "title_slug": "range-product-queries-of-powers"
    },
    {
        "_id": "minimize-maximum-of-array",
        "title_cn": "最小化数组中的最大值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "40.9%",
        "frontend_id": "2439",
        "title_slug": "minimize-maximum-of-array"
    },
    {
        "_id": "create-components-with-same-value",
        "title_cn": "创建价值相同的连通块",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array",
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "2440",
        "title_slug": "create-components-with-same-value"
    },
    {
        "_id": "remove-letter-to-equalize-frequency",
        "title_cn": "删除字符使频率相同",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "24.7%",
        "frontend_id": "2423",
        "title_slug": "remove-letter-to-equalize-frequency"
    },
    {
        "_id": "bitwise-xor-of-all-pairings",
        "title_cn": "所有数对的异或和",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "2425",
        "title_slug": "bitwise-xor-of-all-pairings"
    },
    {
        "_id": "count-strictly-increasing-subarrays",
        "title_cn": "严格递增的子数组个数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "75.6%",
        "frontend_id": "2393",
        "title_slug": "count-strictly-increasing-subarrays"
    },
    {
        "_id": "determine-if-two-events-have-conflict",
        "title_cn": "判断两个事件是否存在冲突",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2446",
        "title_slug": "determine-if-two-events-have-conflict"
    },
    {
        "_id": "minimum-time-to-kill-all-monsters",
        "title_cn": "杀死所有怪物的最短时间",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": true,
        "ac_rate": "66.6%",
        "frontend_id": "2403",
        "title_slug": "minimum-time-to-kill-all-monsters"
    },
    {
        "_id": "minimum-cost-to-make-array-equal",
        "title_cn": "使数组相等的最小开销",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "2448",
        "title_slug": "minimum-cost-to-make-array-equal"
    },
    {
        "_id": "minimum-number-of-operations-to-make-arrays-similar",
        "title_cn": "使数组相似的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "2449",
        "title_slug": "minimum-number-of-operations-to-make-arrays-similar"
    },
    {
        "_id": "color-the-triangle-red",
        "title_cn": "把三角形染成红色",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "43.4%",
        "frontend_id": "2647",
        "title_slug": "color-the-triangle-red"
    },
    {
        "_id": "sum-of-number-and-its-reverse",
        "title_cn": "反转之后的数字和",
        "difficulty": 2,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "46.9%",
        "frontend_id": "2443",
        "title_slug": "sum-of-number-and-its-reverse"
    },
    {
        "_id": "average-value-of-even-numbers-that-are-divisible-by-three",
        "title_cn": "可被三整除的偶数的平均值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "2455",
        "title_slug": "average-value-of-even-numbers-that-are-divisible-by-three"
    },
    {
        "_id": "most-popular-video-creator",
        "title_cn": "最流行的视频创作者",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "38.9%",
        "frontend_id": "2456",
        "title_slug": "most-popular-video-creator"
    },
    {
        "_id": "minimum-addition-to-make-integer-beautiful",
        "title_cn": "美丽整数的最小增量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "39.9%",
        "frontend_id": "2457",
        "title_slug": "minimum-addition-to-make-integer-beautiful"
    },
    {
        "_id": "height-of-binary-tree-after-subtree-removal-queries",
        "title_cn": "移除子树后的二叉树高度",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "array",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "2458",
        "title_slug": "height-of-binary-tree-after-subtree-removal-queries"
    },
    {
        "_id": "number-of-subarrays-with-gcd-equal-to-k",
        "title_cn": "最大公因数等于 K 的子数组数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2447",
        "title_slug": "number-of-subarrays-with-gcd-equal-to-k"
    },
    {
        "_id": "odd-string-difference",
        "title_cn": "差值数组不同的字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "66.2%",
        "frontend_id": "2451",
        "title_slug": "odd-string-difference"
    },
    {
        "_id": "destroy-sequential-targets",
        "title_cn": "摧毁一系列目标",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "2453",
        "title_slug": "destroy-sequential-targets"
    },
    {
        "_id": "next-greater-element-iv",
        "title_cn": "下一个更大元素 IV",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "binary-search",
            "sorting",
            "monotonic-stack",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "2454",
        "title_slug": "next-greater-element-iv"
    },
    {
        "_id": "words-within-two-edits-of-dictionary",
        "title_cn": "距离字典两次编辑以内的单词",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "2452",
        "title_slug": "words-within-two-edits-of-dictionary"
    },
    {
        "_id": "apply-operations-to-an-array",
        "title_cn": "对数组执行操作",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "67.9%",
        "frontend_id": "2460",
        "title_slug": "apply-operations-to-an-array"
    },
    {
        "_id": "maximum-sum-of-distinct-subarrays-with-length-k",
        "title_cn": "长度为 K 子数组中的最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "32.3%",
        "frontend_id": "2461",
        "title_slug": "maximum-sum-of-distinct-subarrays-with-length-k"
    },
    {
        "_id": "total-cost-to-hire-k-workers",
        "title_cn": "雇佣 K 位工人的总代价",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.2%",
        "frontend_id": "2462",
        "title_slug": "total-cost-to-hire-k-workers"
    },
    {
        "_id": "minimum-total-distance-traveled",
        "title_cn": "最小移动总距离",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "2463",
        "title_slug": "minimum-total-distance-traveled"
    },
    {
        "_id": "design-sql",
        "title_cn": "设计 SQL",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "68.4%",
        "frontend_id": "2408",
        "title_slug": "design-sql"
    },
    {
        "_id": "convert-the-temperature",
        "title_cn": "温度转换",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "2469",
        "title_slug": "convert-the-temperature"
    },
    {
        "_id": "number-of-subarrays-with-lcm-equal-to-k",
        "title_cn": "最小公倍数为 K 的子数组数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "41.2%",
        "frontend_id": "2470",
        "title_slug": "number-of-subarrays-with-lcm-equal-to-k"
    },
    {
        "_id": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
        "title_cn": "逐层排序二叉树所需的最少操作数目",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "2471",
        "title_slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level"
    },
    {
        "_id": "maximum-number-of-non-overlapping-palindrome-substrings",
        "title_cn": "不重叠回文子字符串的最大数目",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "2472",
        "title_slug": "maximum-number-of-non-overlapping-palindrome-substrings"
    },
    {
        "_id": "closest-fair-integer",
        "title_cn": "最近的公平整数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": true,
        "ac_rate": "41.8%",
        "frontend_id": "2417",
        "title_slug": "closest-fair-integer"
    },
    {
        "_id": "number-of-distinct-averages",
        "title_cn": "不同的平均值数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.5%",
        "frontend_id": "2465",
        "title_slug": "number-of-distinct-averages"
    },
    {
        "_id": "count-ways-to-build-good-strings",
        "title_cn": "统计构造好字符串的方案数",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.8%",
        "frontend_id": "2466",
        "title_slug": "count-ways-to-build-good-strings"
    },
    {
        "_id": "split-message-based-on-limit",
        "title_cn": "根据限制分割消息",
        "difficulty": 3,
        "tags_q": [
            "string",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "2468",
        "title_slug": "split-message-based-on-limit"
    },
    {
        "_id": "most-profitable-path-in-a-tree",
        "title_cn": "树上最大得分和路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "2467",
        "title_slug": "most-profitable-path-in-a-tree"
    },
    {
        "_id": "merge-operations-to-turn-array-into-a-palindrome",
        "title_cn": "使用合并操作将数组转换为回文序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "68.4%",
        "frontend_id": "2422",
        "title_slug": "merge-operations-to-turn-array-into-a-palindrome"
    },
    {
        "_id": "number-of-unequal-triplets-in-array",
        "title_cn": "数组中不等三元组的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.7%",
        "frontend_id": "2475",
        "title_slug": "number-of-unequal-triplets-in-array"
    },
    {
        "_id": "closest-nodes-queries-in-a-binary-search-tree",
        "title_cn": "二叉搜索树最近节点查询",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "array",
            "binary-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "2476",
        "title_slug": "closest-nodes-queries-in-a-binary-search-tree"
    },
    {
        "_id": "minimum-fuel-cost-to-report-to-the-capital",
        "title_cn": "到达首都的最少油耗",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "2477",
        "title_slug": "minimum-fuel-cost-to-report-to-the-capital"
    },
    {
        "_id": "number-of-beautiful-partitions",
        "title_cn": "完美分割的方案数",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "2478",
        "title_slug": "number-of-beautiful-partitions"
    },
    {
        "_id": "maximize-total-tastiness-of-purchased-fruits",
        "title_cn": "最大限度地提高购买水果的口味",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "62.6%",
        "frontend_id": "2431",
        "title_slug": "maximize-total-tastiness-of-purchased-fruits"
    },
    {
        "_id": "find-the-pivot-integer",
        "title_cn": "找出中枢整数",
        "difficulty": 1,
        "tags_q": [
            "math",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "2485",
        "title_slug": "find-the-pivot-integer"
    },
    {
        "_id": "append-characters-to-string-to-make-subsequence",
        "title_cn": "追加字符以获得子序列",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "2486",
        "title_slug": "append-characters-to-string-to-make-subsequence"
    },
    {
        "_id": "remove-nodes-from-linked-list",
        "title_cn": "从链表中移除节点",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "2487",
        "title_slug": "remove-nodes-from-linked-list"
    },
    {
        "_id": "count-subarrays-with-median-k",
        "title_cn": "统计中位数为 K 的子数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "50.7%",
        "frontend_id": "2488",
        "title_slug": "count-subarrays-with-median-k"
    },
    {
        "_id": "minimum-cuts-to-divide-a-circle",
        "title_cn": "分割圆的最少切割次数",
        "difficulty": 1,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "2481",
        "title_slug": "minimum-cuts-to-divide-a-circle"
    },
    {
        "_id": "minimum-penalty-for-a-shop",
        "title_cn": "商店的最少代价",
        "difficulty": 2,
        "tags_q": [
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "2483",
        "title_slug": "minimum-penalty-for-a-shop"
    },
    {
        "_id": "count-palindromic-subsequences",
        "title_cn": "统计回文子序列数目",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "48.2%",
        "frontend_id": "2484",
        "title_slug": "count-palindromic-subsequences"
    },
    {
        "_id": "minimum-split-into-subarrays-with-gcd-greater-than-one",
        "title_cn": "使子数组最大公约数大于一的最小分割数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "dynamic-programming",
            "number-theory"
        ],
        "paid_only": true,
        "ac_rate": "70.0%",
        "frontend_id": "2436",
        "title_slug": "minimum-split-into-subarrays-with-gcd-greater-than-one"
    },
    {
        "_id": "circular-sentence",
        "title_cn": "回环句",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.0%",
        "frontend_id": "2490",
        "title_slug": "circular-sentence"
    },
    {
        "_id": "divide-players-into-teams-of-equal-skill",
        "title_cn": "划分技能点相等的团队",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "2491",
        "title_slug": "divide-players-into-teams-of-equal-skill"
    },
    {
        "_id": "minimum-score-of-a-path-between-two-cities",
        "title_cn": "两个城市间路径的最小分数",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "2492",
        "title_slug": "minimum-score-of-a-path-between-two-cities"
    },
    {
        "_id": "divide-nodes-into-the-maximum-number-of-groups",
        "title_cn": "将节点分成尽可能多的组",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "44.3%",
        "frontend_id": "2493",
        "title_slug": "divide-nodes-into-the-maximum-number-of-groups"
    },
    {
        "_id": "number-of-nodes-with-value-one",
        "title_cn": "值为 1 的节点数",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "72.7%",
        "frontend_id": "2445",
        "title_slug": "number-of-nodes-with-value-one"
    },
    {
        "_id": "delete-greatest-value-in-each-row",
        "title_cn": "删除每行中的最大值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "83.4%",
        "frontend_id": "2500",
        "title_slug": "delete-greatest-value-in-each-row"
    },
    {
        "_id": "longest-square-streak-in-an-array",
        "title_cn": "数组中最长的方波",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.5%",
        "frontend_id": "2501",
        "title_slug": "longest-square-streak-in-an-array"
    },
    {
        "_id": "design-memory-allocator",
        "title_cn": "设计内存分配器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "52.7%",
        "frontend_id": "2502",
        "title_slug": "design-memory-allocator"
    },
    {
        "_id": "maximum-number-of-points-from-grid-queries",
        "title_cn": "矩阵查询可获得的最大分数",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "union-find",
            "array",
            "two-pointers",
            "matrix",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "2503",
        "title_slug": "maximum-number-of-points-from-grid-queries"
    },
    {
        "_id": "maximum-value-of-a-string-in-an-array",
        "title_cn": "数组中字符串的最大值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "78.4%",
        "frontend_id": "2496",
        "title_slug": "maximum-value-of-a-string-in-an-array"
    },
    {
        "_id": "maximum-star-sum-of-a-graph",
        "title_cn": "图中最大星和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "graph",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.0%",
        "frontend_id": "2497",
        "title_slug": "maximum-star-sum-of-a-graph"
    },
    {
        "_id": "frog-jump-ii",
        "title_cn": "青蛙过河 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "2498",
        "title_slug": "frog-jump-ii"
    },
    {
        "_id": "minimum-total-cost-to-make-arrays-unequal",
        "title_cn": "让数组不相等的最小总代价",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "2499",
        "title_slug": "minimum-total-cost-to-make-arrays-unequal"
    },
    {
        "_id": "count-pairs-of-similar-strings",
        "title_cn": "统计相似字符串对的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "77.4%",
        "frontend_id": "2506",
        "title_slug": "count-pairs-of-similar-strings"
    },
    {
        "_id": "smallest-value-after-replacing-with-sum-of-prime-factors",
        "title_cn": "使用质因数之和替换后可以取到的最小值",
        "difficulty": 2,
        "tags_q": [
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "2507",
        "title_slug": "smallest-value-after-replacing-with-sum-of-prime-factors"
    },
    {
        "_id": "add-edges-to-make-degrees-of-all-nodes-even",
        "title_cn": "添加边使所有节点度数都为偶数",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "30.1%",
        "frontend_id": "2508",
        "title_slug": "add-edges-to-make-degrees-of-all-nodes-even"
    },
    {
        "_id": "cycle-length-queries-in-a-tree",
        "title_cn": "查询树中环的长度",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "2509",
        "title_slug": "cycle-length-queries-in-a-tree"
    },
    {
        "_id": "take-k-of-each-character-from-left-and-right",
        "title_cn": "每种字符至少取 K 个",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "38.5%",
        "frontend_id": "2516",
        "title_slug": "take-k-of-each-character-from-left-and-right"
    },
    {
        "_id": "maximum-tastiness-of-candy-basket",
        "title_cn": "礼盒的最大甜蜜度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.7%",
        "frontend_id": "2517",
        "title_slug": "maximum-tastiness-of-candy-basket"
    },
    {
        "_id": "number-of-great-partitions",
        "title_cn": "好分区的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2518",
        "title_slug": "number-of-great-partitions"
    },
    {
        "_id": "maximum-enemy-forts-that-can-be-captured",
        "title_cn": "最多可以摧毁的敌人城堡数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "55.5%",
        "frontend_id": "2511",
        "title_slug": "maximum-enemy-forts-that-can-be-captured"
    },
    {
        "_id": "reward-top-k-students",
        "title_cn": "奖励最顶尖的 K 名学生",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "2512",
        "title_slug": "reward-top-k-students"
    },
    {
        "_id": "minimum-operations-to-make-array-equal-ii",
        "title_cn": "使数组中所有元素相等的最小操作数 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "32.2%",
        "frontend_id": "2541",
        "title_slug": "minimum-operations-to-make-array-equal-ii"
    },
    {
        "_id": "count-anagrams",
        "title_cn": "统计同位异构字符串数目",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "math",
            "string",
            "combinatorics",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "2514",
        "title_slug": "count-anagrams"
    },
    {
        "_id": "difference-between-ones-and-zeros-in-row-and-column",
        "title_cn": "行和列中一和零的差值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "82.0%",
        "frontend_id": "2482",
        "title_slug": "difference-between-ones-and-zeros-in-row-and-column"
    },
    {
        "_id": "count-the-digits-that-divide-a-number",
        "title_cn": "统计能整除数字的位数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "84.9%",
        "frontend_id": "2520",
        "title_slug": "count-the-digits-that-divide-a-number"
    },
    {
        "_id": "distinct-prime-factors-of-product-of-array",
        "title_cn": "数组乘积中的不同质因数数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2521",
        "title_slug": "distinct-prime-factors-of-product-of-array"
    },
    {
        "_id": "closest-prime-numbers-in-range",
        "title_cn": "范围内最接近的两个质数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "41.5%",
        "frontend_id": "2523",
        "title_slug": "closest-prime-numbers-in-range"
    },
    {
        "_id": "minimum-cost-to-buy-apples",
        "title_cn": "购买苹果的最低成本",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "55.3%",
        "frontend_id": "2473",
        "title_slug": "minimum-cost-to-buy-apples"
    },
    {
        "_id": "maximum-count-of-positive-integer-and-negative-integer",
        "title_cn": "正整数和负整数的最大计数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "73.6%",
        "frontend_id": "2529",
        "title_slug": "maximum-count-of-positive-integer-and-negative-integer"
    },
    {
        "_id": "make-number-of-distinct-characters-equal",
        "title_cn": "使字符串中不同字符的数目相等",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "30.0%",
        "frontend_id": "2531",
        "title_slug": "make-number-of-distinct-characters-equal"
    },
    {
        "_id": "maximal-score-after-applying-k-operations",
        "title_cn": "执行 K 次操作后的最大分数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "2530",
        "title_slug": "maximal-score-after-applying-k-operations"
    },
    {
        "_id": "time-taken-to-cross-the-door",
        "title_cn": "通过门的时间",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "simulation"
        ],
        "paid_only": true,
        "ac_rate": "57.0%",
        "frontend_id": "2534",
        "title_slug": "time-taken-to-cross-the-door"
    },
    {
        "_id": "maximize-the-minimum-powered-city",
        "title_cn": "最大化城市的最小电量",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "queue",
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "2528",
        "title_slug": "maximize-the-minimum-powered-city"
    },
    {
        "_id": "categorize-box-according-to-criteria",
        "title_cn": "根据规则将箱子分类",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "47.8%",
        "frontend_id": "2525",
        "title_slug": "categorize-box-according-to-criteria"
    },
    {
        "_id": "find-consecutive-integers-from-a-data-stream",
        "title_cn": "找到数据流中的连续整数",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "hash-table",
            "counting",
            "data-stream"
        ],
        "paid_only": false,
        "ac_rate": "54.6%",
        "frontend_id": "2526",
        "title_slug": "find-consecutive-integers-from-a-data-stream"
    },
    {
        "_id": "find-xor-beauty-of-array",
        "title_cn": "查询数组异或美丽值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "71.4%",
        "frontend_id": "2527",
        "title_slug": "find-xor-beauty-of-array"
    },
    {
        "_id": "maximum-xor-of-two-non-overlapping-subtrees",
        "title_cn": "两个不重叠子树的最大异或值",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "graph",
            "trie"
        ],
        "paid_only": true,
        "ac_rate": "60.5%",
        "frontend_id": "2479",
        "title_slug": "maximum-xor-of-two-non-overlapping-subtrees"
    },
    {
        "_id": "difference-between-element-sum-and-digit-sum-of-an-array",
        "title_cn": "数组元素和与数字和的绝对差",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "82.5%",
        "frontend_id": "2535",
        "title_slug": "difference-between-element-sum-and-digit-sum-of-an-array"
    },
    {
        "_id": "increment-submatrices-by-one",
        "title_cn": "子矩阵元素加 1",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "2536",
        "title_slug": "increment-submatrices-by-one"
    },
    {
        "_id": "difference-between-maximum-and-minimum-price-sum",
        "title_cn": "最大价值和与最小价值和的差值",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "2538",
        "title_slug": "difference-between-maximum-and-minimum-price-sum"
    },
    {
        "_id": "minimize-the-maximum-of-two-arrays",
        "title_cn": "最小化两个数组中的最大值",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "35.8%",
        "frontend_id": "2513",
        "title_slug": "minimize-the-maximum-of-two-arrays"
    },
    {
        "_id": "number-of-substrings-with-fixed-ratio",
        "title_cn": "固定比率的子字符串数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "60.5%",
        "frontend_id": "2489",
        "title_slug": "number-of-substrings-with-fixed-ratio"
    },
    {
        "_id": "alternating-digit-sum",
        "title_cn": "交替数字和",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "79.3%",
        "frontend_id": "2544",
        "title_slug": "alternating-digit-sum"
    },
    {
        "_id": "sort-the-students-by-their-kth-score",
        "title_cn": "根据第 K 场考试的分数排序",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "2545",
        "title_slug": "sort-the-students-by-their-kth-score"
    },
    {
        "_id": "apply-bitwise-operations-to-make-strings-equal",
        "title_cn": "执行逐位运算使字符串相等",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.9%",
        "frontend_id": "2546",
        "title_slug": "apply-bitwise-operations-to-make-strings-equal"
    },
    {
        "_id": "minimum-cost-to-split-an-array",
        "title_cn": "拆分数组的最小代价",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "2547",
        "title_slug": "minimum-cost-to-split-an-array"
    },
    {
        "_id": "minimum-common-value",
        "title_cn": "最小公共值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "2540",
        "title_slug": "minimum-common-value"
    },
    {
        "_id": "check-if-point-is-reachable",
        "title_cn": "判断一个点是否可以到达",
        "difficulty": 3,
        "tags_q": [
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "47.7%",
        "frontend_id": "2543",
        "title_slug": "check-if-point-is-reachable"
    },
    {
        "_id": "maximum-subsequence-score",
        "title_cn": "最大子序列的分数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "51.9%",
        "frontend_id": "2542",
        "title_slug": "maximum-subsequence-score"
    },
    {
        "_id": "number-of-subarrays-having-even-product",
        "title_cn": "乘积为偶数的子数组数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "66.2%",
        "frontend_id": "2495",
        "title_slug": "number-of-subarrays-having-even-product"
    },
    {
        "_id": "separate-the-digits-in-an-array",
        "title_cn": "分割数组中数字的数位",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "79.1%",
        "frontend_id": "2553",
        "title_slug": "separate-the-digits-in-an-array"
    },
    {
        "_id": "maximum-number-of-integers-to-choose-from-a-range-i",
        "title_cn": "从一个范围内选择最多整数 I",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "2554",
        "title_slug": "maximum-number-of-integers-to-choose-from-a-range-i"
    },
    {
        "_id": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
        "title_cn": "二进制矩阵中翻转最多一次使路径不连通",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "30.9%",
        "frontend_id": "2556",
        "title_slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip"
    },
    {
        "_id": "time-to-cross-a-bridge",
        "title_cn": "过桥的时间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "68.2%",
        "frontend_id": "2532",
        "title_slug": "time-to-cross-a-bridge"
    },
    {
        "_id": "bitwise-or-of-all-subsequence-sums",
        "title_cn": "所有子序列和的按位或",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "56.9%",
        "frontend_id": "2505",
        "title_slug": "bitwise-or-of-all-subsequence-sums"
    },
    {
        "_id": "pass-the-pillow",
        "title_cn": "递枕头",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "2582",
        "title_slug": "pass-the-pillow"
    },
    {
        "_id": "kth-largest-sum-in-a-binary-tree",
        "title_cn": "二叉树中的第 K 大层和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "2583",
        "title_slug": "kth-largest-sum-in-a-binary-tree"
    },
    {
        "_id": "split-the-array-to-make-coprime-products",
        "title_cn": "分割数组使乘积互质",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "26.0%",
        "frontend_id": "2584",
        "title_slug": "split-the-array-to-make-coprime-products"
    },
    {
        "_id": "number-of-ways-to-earn-points",
        "title_cn": "获得分数的方法数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "2585",
        "title_slug": "number-of-ways-to-earn-points"
    },
    {
        "_id": "count-total-number-of-colored-cells",
        "title_cn": "统计染色格子数",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "2579",
        "title_slug": "count-total-number-of-colored-cells"
    },
    {
        "_id": "split-with-minimum-sum",
        "title_cn": "最小和分割",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "81.2%",
        "frontend_id": "2578",
        "title_slug": "split-with-minimum-sum"
    },
    {
        "_id": "count-ways-to-group-overlapping-ranges",
        "title_cn": "统计将重叠区间合并成组的方案数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "2580",
        "title_slug": "count-ways-to-group-overlapping-ranges"
    },
    {
        "_id": "count-number-of-possible-root-nodes",
        "title_cn": "统计可能的树根数目",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "hash-table",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.8%",
        "frontend_id": "2581",
        "title_slug": "count-number-of-possible-root-nodes"
    },
    {
        "_id": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
        "title_cn": "检查是否有路径经过相同数量的 0 和 1",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "64.1%",
        "frontend_id": "2510",
        "title_slug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s"
    },
    {
        "_id": "count-the-number-of-vowel-strings-in-range",
        "title_cn": "统计范围内的元音字符串数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.5%",
        "frontend_id": "2586",
        "title_slug": "count-the-number-of-vowel-strings-in-range"
    },
    {
        "_id": "rearrange-array-to-maximize-prefix-score",
        "title_cn": "重排数组以得到最大前缀分数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "2587",
        "title_slug": "rearrange-array-to-maximize-prefix-score"
    },
    {
        "_id": "count-the-number-of-beautiful-subarrays",
        "title_cn": "统计美丽子数组数目",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "2588",
        "title_slug": "count-the-number-of-beautiful-subarrays"
    },
    {
        "_id": "minimum-time-to-complete-all-tasks",
        "title_cn": "完成所有任务的最少时间",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "43.3%",
        "frontend_id": "2589",
        "title_slug": "minimum-time-to-complete-all-tasks"
    },
    {
        "_id": "count-the-number-of-k-big-indices",
        "title_cn": "统计 K-Big 索引的数量",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": true,
        "ac_rate": "62.2%",
        "frontend_id": "2519",
        "title_slug": "count-the-number-of-k-big-indices"
    },
    {
        "_id": "number-of-even-and-odd-bits",
        "title_cn": "奇偶位数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "73.9%",
        "frontend_id": "2595",
        "title_slug": "number-of-even-and-odd-bits"
    },
    {
        "_id": "smallest-missing-non-negative-integer-after-operations",
        "title_cn": "执行操作后的最大 MEX",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "2598",
        "title_slug": "smallest-missing-non-negative-integer-after-operations"
    },
    {
        "_id": "distribute-money-to-maximum-children",
        "title_cn": "将钱分给最多的儿童",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "26.8%",
        "frontend_id": "2591",
        "title_slug": "distribute-money-to-maximum-children"
    },
    {
        "_id": "maximize-greatness-of-an-array",
        "title_cn": "最大化数组的伟大值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "2592",
        "title_slug": "maximize-greatness-of-an-array"
    },
    {
        "_id": "minimum-time-to-repair-cars",
        "title_cn": "修车的最少时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "2594",
        "title_slug": "minimum-time-to-repair-cars"
    },
    {
        "_id": "minimum-time-to-eat-all-grains",
        "title_cn": "吃掉所有谷子的最短时间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "33.0%",
        "frontend_id": "2604",
        "title_slug": "minimum-time-to-eat-all-grains"
    },
    {
        "_id": "maximum-frequency-score-of-a-subarray",
        "title_cn": "子数组的最大频率分数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "43.1%",
        "frontend_id": "2524",
        "title_slug": "maximum-frequency-score-of-a-subarray"
    },
    {
        "_id": "form-smallest-number-from-two-digit-arrays",
        "title_cn": "从两个数字数组里生成最小数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "2605",
        "title_slug": "form-smallest-number-from-two-digit-arrays"
    },
    {
        "_id": "find-the-substring-with-maximum-cost",
        "title_cn": "找到最大开销的子字符串",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "2606",
        "title_slug": "find-the-substring-with-maximum-cost"
    },
    {
        "_id": "make-k-subarray-sums-equal",
        "title_cn": "使子数组元素和相等",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "number-theory",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "40.5%",
        "frontend_id": "2607",
        "title_slug": "make-k-subarray-sums-equal"
    },
    {
        "_id": "shortest-cycle-in-a-graph",
        "title_cn": "图中的最短环",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "41.5%",
        "frontend_id": "2608",
        "title_slug": "shortest-cycle-in-a-graph"
    },
    {
        "_id": "number-of-good-binary-strings",
        "title_cn": "好二进制字符串的数量",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "61.3%",
        "frontend_id": "2533",
        "title_slug": "number-of-good-binary-strings"
    },
    {
        "_id": "maximize-win-from-two-segments",
        "title_cn": "两个线段获得的最多奖品",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "41.3%",
        "frontend_id": "2555",
        "title_slug": "maximize-win-from-two-segments"
    },
    {
        "_id": "make-the-prefix-sum-non-negative",
        "title_cn": "使前缀和数组非负",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "51.8%",
        "frontend_id": "2599",
        "title_slug": "make-the-prefix-sum-non-negative"
    },
    {
        "_id": "find-the-width-of-columns-of-a-grid",
        "title_cn": "查询网格图中每一列的宽度",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "2639",
        "title_slug": "find-the-width-of-columns-of-a-grid"
    },
    {
        "_id": "find-the-score-of-all-prefixes-of-an-array",
        "title_cn": "一个数组所有前缀的分数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "2640",
        "title_slug": "find-the-score-of-all-prefixes-of-an-array"
    },
    {
        "_id": "cousins-in-binary-tree-ii",
        "title_cn": "二叉树的堂兄弟节点 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "2641",
        "title_slug": "cousins-in-binary-tree-ii"
    },
    {
        "_id": "design-graph-with-shortest-path-calculator",
        "title_cn": "设计可以求最短路径的图类",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "design",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "2642",
        "title_slug": "design-graph-with-shortest-path-calculator"
    },
    {
        "_id": "count-distinct-numbers-on-board",
        "title_cn": "统计桌面上的不同数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "68.4%",
        "frontend_id": "2549",
        "title_slug": "count-distinct-numbers-on-board"
    },
    {
        "_id": "count-collisions-of-monkeys-on-a-polygon",
        "title_cn": "猴子碰撞的方法数",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "29.4%",
        "frontend_id": "2550",
        "title_slug": "count-collisions-of-monkeys-on-a-polygon"
    },
    {
        "_id": "put-marbles-in-bags",
        "title_cn": "将珠子放入背包中",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.6%",
        "frontend_id": "2551",
        "title_slug": "put-marbles-in-bags"
    },
    {
        "_id": "count-increasing-quadruplets",
        "title_cn": "统计上升四元组",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "array",
            "dynamic-programming",
            "enumeration",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "40.0%",
        "frontend_id": "2552",
        "title_slug": "count-increasing-quadruplets"
    },
    {
        "_id": "count-the-number-of-good-subsequences",
        "title_cn": "好子序列的个数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "string",
            "combinatorics",
            "counting"
        ],
        "paid_only": true,
        "ac_rate": "58.0%",
        "frontend_id": "2539",
        "title_slug": "count-the-number-of-good-subsequences"
    },
    {
        "_id": "determine-the-winner-of-a-bowling-game",
        "title_cn": "保龄球游戏的获胜者",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "46.2%",
        "frontend_id": "2660",
        "title_slug": "determine-the-winner-of-a-bowling-game"
    },
    {
        "_id": "first-completely-painted-row-or-column",
        "title_cn": "找出叠涂元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.9%",
        "frontend_id": "2661",
        "title_slug": "first-completely-painted-row-or-column"
    },
    {
        "_id": "minimum-cost-of-a-path-with-special-roads",
        "title_cn": "前往目标的最小代价",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "38.4%",
        "frontend_id": "2662",
        "title_slug": "minimum-cost-of-a-path-with-special-roads"
    },
    {
        "_id": "lexicographically-smallest-beautiful-string",
        "title_cn": "字典序最小的美丽字符串",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "2663",
        "title_slug": "lexicographically-smallest-beautiful-string"
    },
    {
        "_id": "design-a-todo-list",
        "title_cn": "设计一个待办事项清单",
        "difficulty": 2,
        "tags_q": [
            "design",
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "56.5%",
        "frontend_id": "2590",
        "title_slug": "design-a-todo-list"
    },
    {
        "_id": "rearranging-fruits",
        "title_cn": "重排水果",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "2561",
        "title_slug": "rearranging-fruits"
    },
    {
        "_id": "house-robber-iv",
        "title_cn": "打家劫舍 IV",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "2560",
        "title_slug": "house-robber-iv"
    },
    {
        "_id": "count-vowel-strings-in-ranges",
        "title_cn": "统计范围内的元音字符串数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2559",
        "title_slug": "count-vowel-strings-in-ranges"
    },
    {
        "_id": "take-gifts-from-the-richest-pile",
        "title_cn": "从数量最多的堆取走礼物",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "71.3%",
        "frontend_id": "2558",
        "title_slug": "take-gifts-from-the-richest-pile"
    },
    {
        "_id": "maximum-price-to-fill-a-bag",
        "title_cn": "填满背包的最大价格",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "51.0%",
        "frontend_id": "2548",
        "title_slug": "maximum-price-to-fill-a-bag"
    },
    {
        "_id": "find-score-of-an-array-after-marking-all-elements",
        "title_cn": "标记所有元素后数组的分数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "2593",
        "title_slug": "find-score-of-an-array-after-marking-all-elements"
    },
    {
        "_id": "the-number-of-beautiful-subsets",
        "title_cn": "美丽子集的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "backtracking",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "2597",
        "title_slug": "the-number-of-beautiful-subsets"
    },
    {
        "_id": "minimum-number-of-visited-cells-in-a-grid",
        "title_cn": "网格图中最少访问的格子数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "breadth-first-search",
            "union-find",
            "array",
            "dynamic-programming",
            "matrix",
            "monotonic-stack",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "39.6%",
        "frontend_id": "2617",
        "title_slug": "minimum-number-of-visited-cells-in-a-grid"
    },
    {
        "_id": "find-the-array-concatenation-value",
        "title_cn": "找出数组的串联值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "75.5%",
        "frontend_id": "2562",
        "title_slug": "find-the-array-concatenation-value"
    },
    {
        "_id": "count-the-number-of-fair-pairs",
        "title_cn": "统计公平数对的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.4%",
        "frontend_id": "2563",
        "title_slug": "count-the-number-of-fair-pairs"
    },
    {
        "_id": "subsequence-with-the-minimum-score",
        "title_cn": "最少得分子序列",
        "difficulty": 3,
        "tags_q": [
            "two-pointers",
            "string",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "2565",
        "title_slug": "subsequence-with-the-minimum-score"
    },
    {
        "_id": "maximum-number-of-integers-to-choose-from-a-range-ii",
        "title_cn": "从一个范围内选择最多整数 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "38.8%",
        "frontend_id": "2557",
        "title_slug": "maximum-number-of-integers-to-choose-from-a-range-ii"
    },
    {
        "_id": "handling-sum-queries-after-update",
        "title_cn": "更新数组后处理求和查询",
        "difficulty": 3,
        "tags_q": [
            "segment-tree",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "42.3%",
        "frontend_id": "2569",
        "title_slug": "handling-sum-queries-after-update"
    },
    {
        "_id": "maximum-difference-by-remapping-a-digit",
        "title_cn": "替换一个数字后的最大差值",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "2566",
        "title_slug": "maximum-difference-by-remapping-a-digit"
    },
    {
        "_id": "minimum-impossible-or",
        "title_cn": "最小无法得到的或值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "61.5%",
        "frontend_id": "2568",
        "title_slug": "minimum-impossible-or"
    },
    {
        "_id": "minimum-score-by-changing-two-elements",
        "title_cn": "修改两个元素的最小分数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "2567",
        "title_slug": "minimum-score-by-changing-two-elements"
    },
    {
        "_id": "merge-two-2d-arrays-by-summing-values",
        "title_cn": "合并两个二维数组 - 求和法",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "69.6%",
        "frontend_id": "2570",
        "title_slug": "merge-two-2d-arrays-by-summing-values"
    },
    {
        "_id": "find-the-string-with-lcp",
        "title_cn": "找出对应 LCP 矩阵的字符串",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "union-find",
            "array",
            "string",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "35.6%",
        "frontend_id": "2573",
        "title_slug": "find-the-string-with-lcp"
    },
    {
        "_id": "count-the-number-of-square-free-subsets",
        "title_cn": "无平方子集计数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "31.2%",
        "frontend_id": "2572",
        "title_slug": "count-the-number-of-square-free-subsets"
    },
    {
        "_id": "minimum-operations-to-reduce-an-integer-to-0",
        "title_cn": "将整数减少到零需要的最少操作数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.5%",
        "frontend_id": "2571",
        "title_slug": "minimum-operations-to-reduce-an-integer-to-0"
    },
    {
        "_id": "minimum-time-to-visit-a-cell-in-a-grid",
        "title_cn": "在网格图中访问一个格子的最少时间",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "40.2%",
        "frontend_id": "2577",
        "title_slug": "minimum-time-to-visit-a-cell-in-a-grid"
    },
    {
        "_id": "find-the-maximum-number-of-marked-indices",
        "title_cn": "求出最多标记下标",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "38.4%",
        "frontend_id": "2576",
        "title_slug": "find-the-maximum-number-of-marked-indices"
    },
    {
        "_id": "find-the-divisibility-array-of-a-string",
        "title_cn": "找出字符串的可整除数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "2575",
        "title_slug": "find-the-divisibility-array-of-a-string"
    },
    {
        "_id": "left-and-right-sum-differences",
        "title_cn": "左右元素和的差值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "83.7%",
        "frontend_id": "2574",
        "title_slug": "left-and-right-sum-differences"
    },
    {
        "_id": "k-items-with-the-maximum-sum",
        "title_cn": "K 件物品的最大和",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "2600",
        "title_slug": "k-items-with-the-maximum-sum"
    },
    {
        "_id": "prime-subtraction-operation",
        "title_cn": "质数减法运算",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "binary-search",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "39.2%",
        "frontend_id": "2601",
        "title_slug": "prime-subtraction-operation"
    },
    {
        "_id": "collect-coins-in-a-tree",
        "title_cn": "收集树中金币",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "graph",
            "topological-sort",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "2603",
        "title_slug": "collect-coins-in-a-tree"
    },
    {
        "_id": "minimum-operations-to-make-all-array-elements-equal",
        "title_cn": "使数组元素全部相等的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.4%",
        "frontend_id": "2602",
        "title_slug": "minimum-operations-to-make-all-array-elements-equal"
    },
    {
        "_id": "beautiful-pairs",
        "title_cn": "美数对",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "divide-and-conquer",
            "ordered-set",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "34.9%",
        "frontend_id": "2613",
        "title_slug": "beautiful-pairs"
    },
    {
        "_id": "minimize-the-maximum-difference-of-pairs",
        "title_cn": "最小化数对的最大差值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "2616",
        "title_slug": "minimize-the-maximum-difference-of-pairs"
    },
    {
        "_id": "sum-of-distances",
        "title_cn": "等值距离和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.4%",
        "frontend_id": "2615",
        "title_slug": "sum-of-distances"
    },
    {
        "_id": "prime-in-diagonal",
        "title_cn": "对角线上的质数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "matrix",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "34.7%",
        "frontend_id": "2614",
        "title_slug": "prime-in-diagonal"
    },
    {
        "_id": "find-the-longest-balanced-substring-of-a-binary-string",
        "title_cn": "最长平衡子字符串",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "2609",
        "title_slug": "find-the-longest-balanced-substring-of-a-binary-string"
    },
    {
        "_id": "convert-an-array-into-a-2d-array-with-conditions",
        "title_cn": "转换二维数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "84.2%",
        "frontend_id": "2610",
        "title_slug": "convert-an-array-into-a-2d-array-with-conditions"
    },
    {
        "_id": "mice-and-cheese",
        "title_cn": "老鼠和奶酪",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "2611",
        "title_slug": "mice-and-cheese"
    },
    {
        "_id": "minimum-reverse-operations",
        "title_cn": "最少翻转操作数",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "21.3%",
        "frontend_id": "2612",
        "title_slug": "minimum-reverse-operations"
    },
    {
        "_id": "number-of-senior-citizens",
        "title_cn": "老人的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "79.2%",
        "frontend_id": "2678",
        "title_slug": "number-of-senior-citizens"
    },
    {
        "_id": "sum-in-a-matrix",
        "title_cn": "矩阵中的和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "77.9%",
        "frontend_id": "2679",
        "title_slug": "sum-in-a-matrix"
    },
    {
        "_id": "minimum-operations-to-make-numbers-non-positive",
        "title_cn": "使数字变为非正数的最小操作次数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": true,
        "ac_rate": "48.4%",
        "frontend_id": "2702",
        "title_slug": "minimum-operations-to-make-numbers-non-positive"
    },
    {
        "_id": "maximum-or",
        "title_cn": "最大或值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "44.1%",
        "frontend_id": "2680",
        "title_slug": "maximum-or"
    },
    {
        "_id": "minimum-additions-to-make-valid-string",
        "title_cn": "构造有效字符串的最少插入数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "67.4%",
        "frontend_id": "2645",
        "title_slug": "minimum-additions-to-make-valid-string"
    },
    {
        "_id": "row-with-maximum-ones",
        "title_cn": "一最多的行",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "79.6%",
        "frontend_id": "2643",
        "title_slug": "row-with-maximum-ones"
    },
    {
        "_id": "count-the-number-of-k-free-subsets",
        "title_cn": "统计 K-Free 子集的总数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "50.3%",
        "frontend_id": "2638",
        "title_slug": "count-the-number-of-k-free-subsets"
    },
    {
        "_id": "calculate-delayed-arrival-time",
        "title_cn": "计算列车到站时间",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "87.2%",
        "frontend_id": "2651",
        "title_slug": "calculate-delayed-arrival-time"
    },
    {
        "_id": "sliding-subarray-beauty",
        "title_cn": "滑动子数组的美丽值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "37.2%",
        "frontend_id": "2653",
        "title_slug": "sliding-subarray-beauty"
    },
    {
        "_id": "sum-multiples",
        "title_cn": "倍数求和",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "79.0%",
        "frontend_id": "2652",
        "title_slug": "sum-multiples"
    },
    {
        "_id": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
        "title_cn": "使数组所有元素变成 1 的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "40.5%",
        "frontend_id": "2654",
        "title_slug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1"
    },
    {
        "_id": "maximum-strength-of-a-group",
        "title_cn": "一个小组的最大实力值",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "backtracking",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "30.7%",
        "frontend_id": "2708",
        "title_slug": "maximum-strength-of-a-group"
    },
    {
        "_id": "extra-characters-in-a-string",
        "title_cn": "字符串中的额外字符",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.5%",
        "frontend_id": "2707",
        "title_slug": "extra-characters-in-a-string"
    },
    {
        "_id": "buy-two-chocolates",
        "title_cn": "购买两块巧克力",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.2%",
        "frontend_id": "2706",
        "title_slug": "buy-two-chocolates"
    },
    {
        "_id": "count-of-integers",
        "title_cn": "统计整数数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "2719",
        "title_slug": "count-of-integers"
    },
    {
        "_id": "maximum-number-of-fish-in-a-grid",
        "title_cn": "网格图中鱼的最大数目",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "2658",
        "title_slug": "maximum-number-of-fish-in-a-grid"
    },
    {
        "_id": "make-array-empty",
        "title_cn": "将数组清空",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "ordered-set",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "2659",
        "title_slug": "make-array-empty"
    },
    {
        "_id": "find-the-prefix-common-array-of-two-arrays",
        "title_cn": "找到两个数组的前缀公共数组",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "81.1%",
        "frontend_id": "2657",
        "title_slug": "find-the-prefix-common-array-of-two-arrays"
    },
    {
        "_id": "maximum-sum-with-exactly-k-elements",
        "title_cn": "K 个元素的最大和",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "86.5%",
        "frontend_id": "2656",
        "title_slug": "maximum-sum-with-exactly-k-elements"
    },
    {
        "_id": "find-the-distinct-difference-array",
        "title_cn": "找出不同元素数目差数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "83.2%",
        "frontend_id": "2670",
        "title_slug": "find-the-distinct-difference-array"
    },
    {
        "_id": "frequency-tracker",
        "title_cn": "频率跟踪器",
        "difficulty": 2,
        "tags_q": [
            "design",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "41.9%",
        "frontend_id": "2671",
        "title_slug": "frequency-tracker"
    },
    {
        "_id": "number-of-adjacent-elements-with-the-same-color",
        "title_cn": "有相同颜色的相邻元素数目",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "2672",
        "title_slug": "number-of-adjacent-elements-with-the-same-color"
    },
    {
        "_id": "make-costs-of-paths-equal-in-a-binary-tree",
        "title_cn": "使二叉树所有路径值相等的最小代价",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "tree",
            "array",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "2673",
        "title_slug": "make-costs-of-paths-equal-in-a-binary-tree"
    },
    {
        "_id": "power-of-heroes",
        "title_cn": "英雄的力量",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "2681",
        "title_slug": "power-of-heroes"
    },
    {
        "_id": "semi-ordered-permutation",
        "title_cn": "半有序排列",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "2717",
        "title_slug": "semi-ordered-permutation"
    },
    {
        "_id": "find-the-longest-semi-repetitive-substring",
        "title_cn": "找到最长的半重复子字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "2730",
        "title_slug": "find-the-longest-semi-repetitive-substring"
    },
    {
        "_id": "find-the-losers-of-the-circular-game",
        "title_cn": "找出转圈游戏输家",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "2682",
        "title_slug": "find-the-losers-of-the-circular-game"
    },
    {
        "_id": "neighboring-bitwise-xor",
        "title_cn": "相邻值的按位异或",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "70.5%",
        "frontend_id": "2683",
        "title_slug": "neighboring-bitwise-xor"
    },
    {
        "_id": "count-the-number-of-complete-components",
        "title_cn": "统计完全连通分量的数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "67.7%",
        "frontend_id": "2685",
        "title_slug": "count-the-number-of-complete-components"
    },
    {
        "_id": "maximum-number-of-moves-in-a-grid",
        "title_cn": "矩阵中移动的最大次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "49.2%",
        "frontend_id": "2684",
        "title_slug": "maximum-number-of-moves-in-a-grid"
    },
    {
        "_id": "minimum-string-length-after-removing-substrings",
        "title_cn": "删除子串后的字符串最小长度",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "77.5%",
        "frontend_id": "2696",
        "title_slug": "minimum-string-length-after-removing-substrings"
    },
    {
        "_id": "difference-of-number-of-distinct-values-on-diagonals",
        "title_cn": "对角线上不同值的数量差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "71.6%",
        "frontend_id": "2711",
        "title_slug": "difference-of-number-of-distinct-values-on-diagonals"
    },
    {
        "_id": "find-the-punishment-number-of-an-integer",
        "title_cn": "求一个整数的惩罚数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "78.5%",
        "frontend_id": "2698",
        "title_slug": "find-the-punishment-number-of-an-integer"
    },
    {
        "_id": "modify-graph-edge-weights",
        "title_cn": "修改图中的边权",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "2699",
        "title_slug": "modify-graph-edge-weights"
    },
    {
        "_id": "painting-the-walls",
        "title_cn": "给墙壁刷油漆",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.3%",
        "frontend_id": "2742",
        "title_slug": "painting-the-walls"
    },
    {
        "_id": "collecting-chocolates",
        "title_cn": "收集巧克力",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "54.8%",
        "frontend_id": "2735",
        "title_slug": "collecting-chocolates"
    },
    {
        "_id": "determine-the-minimum-sum-of-a-k-avoiding-array",
        "title_cn": "k-avoiding 数组的最小总和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "59.6%",
        "frontend_id": "2829",
        "title_slug": "determine-the-minimum-sum-of-a-k-avoiding-array"
    },
    {
        "_id": "find-the-maximum-achievable-number",
        "title_cn": "找出最大的可达成数字",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "89.7%",
        "frontend_id": "2769",
        "title_slug": "find-the-maximum-achievable-number"
    },
    {
        "_id": "find-maximal-uncovered-ranges",
        "title_cn": "寻找最大长度的未覆盖区间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "56.8%",
        "frontend_id": "2655",
        "title_slug": "find-maximal-uncovered-ranges"
    },
    {
        "_id": "lexicographically-smallest-palindrome",
        "title_cn": "字典序最小回文串",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "87.3%",
        "frontend_id": "2697",
        "title_slug": "lexicographically-smallest-palindrome"
    },
    {
        "_id": "minimum-cost-to-make-all-characters-equal",
        "title_cn": "使所有字符相等的最小成本",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "2712",
        "title_slug": "minimum-cost-to-make-all-characters-equal"
    },
    {
        "_id": "maximum-strictly-increasing-cells-in-a-matrix",
        "title_cn": "矩阵中严格递增的单元格数",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "binary-search",
            "dynamic-programming",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.7%",
        "frontend_id": "2713",
        "title_slug": "maximum-strictly-increasing-cells-in-a-matrix"
    },
    {
        "_id": "remove-trailing-zeros-from-a-string",
        "title_cn": "移除字符串中的尾随零",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "81.8%",
        "frontend_id": "2710",
        "title_slug": "remove-trailing-zeros-from-a-string"
    },
    {
        "_id": "the-knights-tour",
        "title_cn": "巡逻的骑士",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "68.1%",
        "frontend_id": "2664",
        "title_slug": "the-knights-tour"
    },
    {
        "_id": "check-if-the-number-is-fascinating",
        "title_cn": "判断一个数是否迷人",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.8%",
        "frontend_id": "2729",
        "title_slug": "check-if-the-number-is-fascinating"
    },
    {
        "_id": "find-a-good-subset-of-the-matrix",
        "title_cn": "找到矩阵中的好子集",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "56.3%",
        "frontend_id": "2732",
        "title_slug": "find-a-good-subset-of-the-matrix"
    },
    {
        "_id": "greatest-common-divisor-traversal",
        "title_cn": "最大公约数遍历",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "25.6%",
        "frontend_id": "2709",
        "title_slug": "greatest-common-divisor-traversal"
    },
    {
        "_id": "lexicographically-smallest-string-after-substring-operation",
        "title_cn": "执行子串操作后的字典序最小字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "34.4%",
        "frontend_id": "2734",
        "title_slug": "lexicographically-smallest-string-after-substring-operation"
    },
    {
        "_id": "number-of-beautiful-pairs",
        "title_cn": "美丽下标对的数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "2748",
        "title_slug": "number-of-beautiful-pairs"
    },
    {
        "_id": "find-the-longest-equal-subarray",
        "title_cn": "找出最长等值子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "41.7%",
        "frontend_id": "2831",
        "title_slug": "find-the-longest-equal-subarray"
    },
    {
        "_id": "count-zero-request-servers",
        "title_cn": "统计没有收到请求的服务器数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "2747",
        "title_slug": "count-zero-request-servers"
    },
    {
        "_id": "relocate-marbles",
        "title_cn": "重新放置石块",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "55.5%",
        "frontend_id": "2766",
        "title_slug": "relocate-marbles"
    },
    {
        "_id": "split-a-circular-linked-list",
        "title_cn": "拆分循环链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": true,
        "ac_rate": "73.1%",
        "frontend_id": "2674",
        "title_slug": "split-a-circular-linked-list"
    },
    {
        "_id": "neither-minimum-nor-maximum",
        "title_cn": "既不是最小值也不是最大值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "78.7%",
        "frontend_id": "2733",
        "title_slug": "neither-minimum-nor-maximum"
    },
    {
        "_id": "minimum-operations-to-make-the-integer-zero",
        "title_cn": "得到整数零需要执行的最少操作数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "brainteaser"
        ],
        "paid_only": false,
        "ac_rate": "33.8%",
        "frontend_id": "2749",
        "title_slug": "minimum-operations-to-make-the-integer-zero"
    },
    {
        "_id": "sum-of-matrix-after-queries",
        "title_cn": "查询后矩阵的和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "35.2%",
        "frontend_id": "2718",
        "title_slug": "sum-of-matrix-after-queries"
    },
    {
        "_id": "maximum-sum-queries",
        "title_cn": "最大和查询",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "2736",
        "title_slug": "maximum-sum-queries"
    },
    {
        "_id": "extract-kth-character-from-the-rope-tree",
        "title_cn": "从 Rope 树中提取第 K 个字符",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "61.0%",
        "frontend_id": "2689",
        "title_slug": "extract-kth-character-from-the-rope-tree"
    },
    {
        "_id": "sum-of-squares-of-special-elements",
        "title_cn": "特殊元素平方和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "78.4%",
        "frontend_id": "2778",
        "title_slug": "sum-of-squares-of-special-elements"
    },
    {
        "_id": "find-the-value-of-the-partition",
        "title_cn": "找出分区值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.1%",
        "frontend_id": "2740",
        "title_slug": "find-the-value-of-the-partition"
    },
    {
        "_id": "robot-collisions",
        "title_cn": "机器人碰撞",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "sorting",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "48.9%",
        "frontend_id": "2751",
        "title_slug": "robot-collisions"
    },
    {
        "_id": "find-maximum-number-of-string-pairs",
        "title_cn": "最大字符串配对数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "86.6%",
        "frontend_id": "2744",
        "title_slug": "find-maximum-number-of-string-pairs"
    },
    {
        "_id": "special-permutations",
        "title_cn": "特别的排列",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "36.7%",
        "frontend_id": "2741",
        "title_slug": "special-permutations"
    },
    {
        "_id": "sum-of-imbalance-numbers-of-all-subarrays",
        "title_cn": "所有子数组中不平衡数字之和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "2763",
        "title_slug": "sum-of-imbalance-numbers-of-all-subarrays"
    },
    {
        "_id": "construct-the-longest-new-string",
        "title_cn": "构造最长的新字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "brainteaser",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "2745",
        "title_slug": "construct-the-longest-new-string"
    },
    {
        "_id": "decremental-string-concatenation",
        "title_cn": "字符串连接删减字母",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.9%",
        "frontend_id": "2746",
        "title_slug": "decremental-string-concatenation"
    },
    {
        "_id": "maximum-number-of-jumps-to-reach-the-last-index",
        "title_cn": "达到末尾下标所需的最大跳跃次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "36.1%",
        "frontend_id": "2770",
        "title_slug": "maximum-number-of-jumps-to-reach-the-last-index"
    },
    {
        "_id": "count-complete-subarrays-in-an-array",
        "title_cn": "统计完全子数组的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "2799",
        "title_slug": "count-complete-subarrays-in-an-array"
    },
    {
        "_id": "total-distance-traveled",
        "title_cn": "总行驶距离",
        "difficulty": 1,
        "tags_q": [
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "2739",
        "title_slug": "total-distance-traveled"
    },
    {
        "_id": "find-shortest-path-with-k-hops",
        "title_cn": "找到最短路径的 K 次跨越",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "60.3%",
        "frontend_id": "2714",
        "title_slug": "find-shortest-path-with-k-hops"
    },
    {
        "_id": "longest-even-odd-subarray-with-threshold",
        "title_cn": "最长奇偶子数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "2760",
        "title_slug": "longest-even-odd-subarray-with-threshold"
    },
    {
        "_id": "ways-to-split-array-into-good-subarrays",
        "title_cn": "将数组划分成若干好子数组的方式",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "2750",
        "title_slug": "ways-to-split-array-into-good-subarrays"
    },
    {
        "_id": "continuous-subarrays",
        "title_cn": "不间断子数组",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "ordered-set",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "48.8%",
        "frontend_id": "2762",
        "title_slug": "continuous-subarrays"
    },
    {
        "_id": "longest-non-decreasing-subarray-from-two-arrays",
        "title_cn": "构造最长非递减子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "35.2%",
        "frontend_id": "2771",
        "title_slug": "longest-non-decreasing-subarray-from-two-arrays"
    },
    {
        "_id": "longest-alternating-subarray",
        "title_cn": "最长交替子数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "2765",
        "title_slug": "longest-alternating-subarray"
    },
    {
        "_id": "double-a-number-represented-as-a-linked-list",
        "title_cn": "翻倍以链表形式表示的数字",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.6%",
        "frontend_id": "2816",
        "title_slug": "double-a-number-represented-as-a-linked-list"
    },
    {
        "_id": "largest-element-in-an-array-after-merge-operations",
        "title_cn": "合并后数组中的最大元素",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "2789",
        "title_slug": "largest-element-in-an-array-after-merge-operations"
    },
    {
        "_id": "prime-pairs-with-target-sum",
        "title_cn": "和等于目标值的质数对",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "enumeration",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "34.6%",
        "frontend_id": "2761",
        "title_slug": "prime-pairs-with-target-sum"
    },
    {
        "_id": "count-houses-in-a-circular-street",
        "title_cn": "计算一个环形街道上的房屋数量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "77.9%",
        "frontend_id": "2728",
        "title_slug": "count-houses-in-a-circular-street"
    },
    {
        "_id": "number-of-employees-who-met-the-target",
        "title_cn": "满足目标工作时长的员工数目",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "85.1%",
        "frontend_id": "2798",
        "title_slug": "number-of-employees-who-met-the-target"
    },
    {
        "_id": "shortest-string-that-contains-three-strings",
        "title_cn": "包含三个字符串的最短字符串",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "35.1%",
        "frontend_id": "2800",
        "title_slug": "shortest-string-that-contains-three-strings"
    },
    {
        "_id": "apply-operations-to-make-all-array-elements-equal-to-zero",
        "title_cn": "使数组中的所有元素都等于零",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "37.0%",
        "frontend_id": "2772",
        "title_slug": "apply-operations-to-make-all-array-elements-equal-to-zero"
    },
    {
        "_id": "minimum-changes-to-make-k-semi-palindromes",
        "title_cn": "得到 K 个半回文串的最少修改次数",
        "difficulty": 3,
        "tags_q": [
            "two-pointers",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.8%",
        "frontend_id": "2911",
        "title_slug": "minimum-changes-to-make-k-semi-palindromes"
    },
    {
        "_id": "find-the-closest-marked-node",
        "title_cn": "找到最近的标记节点",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "57.0%",
        "frontend_id": "2737",
        "title_slug": "find-the-closest-marked-node"
    },
    {
        "_id": "split-strings-by-separator",
        "title_cn": "按分隔符拆分字符串",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "80.6%",
        "frontend_id": "2788",
        "title_slug": "split-strings-by-separator"
    },
    {
        "_id": "partition-string-into-minimum-beautiful-substrings",
        "title_cn": "将字符串分割为最少的美丽子字符串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "2767",
        "title_slug": "partition-string-into-minimum-beautiful-substrings"
    },
    {
        "_id": "length-of-the-longest-valid-substring",
        "title_cn": "最长合法子字符串的长度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "39.1%",
        "frontend_id": "2781",
        "title_slug": "length-of-the-longest-valid-substring"
    },
    {
        "_id": "faulty-keyboard",
        "title_cn": "故障键盘",
        "difficulty": 1,
        "tags_q": [
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "82.1%",
        "frontend_id": "2810",
        "title_slug": "faulty-keyboard"
    },
    {
        "_id": "sort-vowels-in-a-string",
        "title_cn": "将字符串中的元音字母排序",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "76.9%",
        "frontend_id": "2785",
        "title_slug": "sort-vowels-in-a-string"
    },
    {
        "_id": "minimum-index-of-a-valid-split",
        "title_cn": "合法分割的最小下标",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "2780",
        "title_slug": "minimum-index-of-a-valid-split"
    },
    {
        "_id": "number-of-black-blocks",
        "title_cn": "黑格子的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "43.7%",
        "frontend_id": "2768",
        "title_slug": "number-of-black-blocks"
    },
    {
        "_id": "count-substrings-without-repeating-character",
        "title_cn": "计算没有重复字符的子字符串数量",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": true,
        "ac_rate": "69.2%",
        "frontend_id": "2743",
        "title_slug": "count-substrings-without-repeating-character"
    },
    {
        "_id": "maximum-beauty-of-an-array-after-applying-operation",
        "title_cn": "数组的最大美丽值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "40.3%",
        "frontend_id": "2779",
        "title_slug": "maximum-beauty-of-an-array-after-applying-operation"
    },
    {
        "_id": "visit-array-positions-to-maximize-score",
        "title_cn": "访问数组中的位置使分数最大",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "2786",
        "title_slug": "visit-array-positions-to-maximize-score"
    },
    {
        "_id": "maximum-elegance-of-a-k-length-subsequence",
        "title_cn": "子序列最大优雅度",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "41.2%",
        "frontend_id": "2813",
        "title_slug": "maximum-elegance-of-a-k-length-subsequence"
    },
    {
        "_id": "count-houses-in-a-circular-street-ii",
        "title_cn": "计算一个环形街道上的房屋数量 II",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": true,
        "ac_rate": "74.6%",
        "frontend_id": "2753",
        "title_slug": "count-houses-in-a-circular-street-ii"
    },
    {
        "_id": "max-pair-sum-in-an-array",
        "title_cn": "数组中的最大数对和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "2815",
        "title_slug": "max-pair-sum-in-an-array"
    },
    {
        "_id": "insert-greatest-common-divisors-in-linked-list",
        "title_cn": "在链表中插入最大公约数",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "91.0%",
        "frontend_id": "2807",
        "title_slug": "insert-greatest-common-divisors-in-linked-list"
    },
    {
        "_id": "sorting-three-groups",
        "title_cn": "将三个组排序",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.9%",
        "frontend_id": "2826",
        "title_slug": "sorting-three-groups"
    },
    {
        "_id": "count-paths-that-can-form-a-palindrome-in-a-tree",
        "title_cn": "树中可以形成回文的路径数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "2791",
        "title_slug": "count-paths-that-can-form-a-palindrome-in-a-tree"
    },
    {
        "_id": "find-the-safest-path-in-a-grid",
        "title_cn": "找出最安全路径",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "union-find",
            "array",
            "binary-search",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "28.8%",
        "frontend_id": "2812",
        "title_slug": "find-the-safest-path-in-a-grid"
    },
    {
        "_id": "count-of-interesting-subarrays",
        "title_cn": "统计趣味子数组的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "35.6%",
        "frontend_id": "2845",
        "title_slug": "count-of-interesting-subarrays"
    },
    {
        "_id": "check-if-it-is-possible-to-split-array",
        "title_cn": "判断是否能拆分数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "32.8%",
        "frontend_id": "2811",
        "title_slug": "check-if-it-is-possible-to-split-array"
    },
    {
        "_id": "count-pairs-whose-sum-is-less-than-target",
        "title_cn": "统计和小于目标的下标对数目",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "86.6%",
        "frontend_id": "2824",
        "title_slug": "count-pairs-whose-sum-is-less-than-target"
    },
    {
        "_id": "is-array-a-preorder-of-some-binary-tree",
        "title_cn": "数组是否表示某二叉树的前序遍历",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "61.4%",
        "frontend_id": "2764",
        "title_slug": "is-array-a-preorder-of-some-binary-tree"
    },
    {
        "_id": "maximum-number-of-groups-with-increasing-length",
        "title_cn": "长度递增组的最大数目",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "22.3%",
        "frontend_id": "2790",
        "title_slug": "maximum-number-of-groups-with-increasing-length"
    },
    {
        "_id": "minimum-seconds-to-equalize-a-circular-array",
        "title_cn": "使循环数组所有元素相等的最少秒数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "2808",
        "title_slug": "minimum-seconds-to-equalize-a-circular-array"
    },
    {
        "_id": "count-stepping-numbers-in-range",
        "title_cn": "统计范围内的步进数字数目",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "2801",
        "title_slug": "count-stepping-numbers-in-range"
    },
    {
        "_id": "height-of-special-binary-tree",
        "title_cn": "特殊二叉树的高度",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": true,
        "ac_rate": "62.8%",
        "frontend_id": "2773",
        "title_slug": "height-of-special-binary-tree"
    },
    {
        "_id": "minimum-time-to-make-array-sum-at-most-x",
        "title_cn": "使数组和小于等于 x 的最少时间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "2809",
        "title_slug": "minimum-time-to-make-array-sum-at-most-x"
    },
    {
        "_id": "count-pairs-of-points-with-distance-k",
        "title_cn": "统计距离为 k 的点对",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "2857",
        "title_slug": "count-pairs-of-points-with-distance-k"
    },
    {
        "_id": "maximum-sum-of-almost-unique-subarray",
        "title_cn": "几乎唯一子数组的最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "2841",
        "title_slug": "maximum-sum-of-almost-unique-subarray"
    },
    {
        "_id": "account-balance-after-rounded-purchase",
        "title_cn": "取整购买后的账户余额",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "62.6%",
        "frontend_id": "2806",
        "title_slug": "account-balance-after-rounded-purchase"
    },
    {
        "_id": "check-if-a-string-is-an-acronym-of-words",
        "title_cn": "判别首字母缩略词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.2%",
        "frontend_id": "2828",
        "title_slug": "check-if-a-string-is-an-acronym-of-words"
    },
    {
        "_id": "check-if-strings-can-be-made-equal-with-operations-ii",
        "title_cn": "判断通过操作能否让字符串相等 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "61.1%",
        "frontend_id": "2840",
        "title_slug": "check-if-strings-can-be-made-equal-with-operations-ii"
    },
    {
        "_id": "maximize-the-profit-as-the-salesman",
        "title_cn": "销售利润最大化",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "2830",
        "title_slug": "maximize-the-profit-as-the-salesman"
    },
    {
        "_id": "number-of-unique-categories",
        "title_cn": "唯一类别的数量",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "counting",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "84.5%",
        "frontend_id": "2782",
        "title_slug": "number-of-unique-categories"
    },
    {
        "_id": "count-symmetric-integers",
        "title_cn": "统计对称整数的数目",
        "difficulty": 1,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "2843",
        "title_slug": "count-symmetric-integers"
    },
    {
        "_id": "check-if-strings-can-be-made-equal-with-operations-i",
        "title_cn": "判断通过操作能否让字符串相等 I",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "2839",
        "title_slug": "check-if-strings-can-be-made-equal-with-operations-i"
    },
    {
        "_id": "minimum-absolute-difference-between-elements-with-constraint",
        "title_cn": "限制条件下元素之间的最小绝对差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "32.5%",
        "frontend_id": "2817",
        "title_slug": "minimum-absolute-difference-between-elements-with-constraint"
    },
    {
        "_id": "apply-operations-to-maximize-score",
        "title_cn": "操作使得分最大",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "math",
            "number-theory",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "2818",
        "title_slug": "apply-operations-to-maximize-score"
    },
    {
        "_id": "number-of-beautiful-integers-in-the-range",
        "title_cn": "范围中美丽整数的数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "34.2%",
        "frontend_id": "2827",
        "title_slug": "number-of-beautiful-integers-in-the-range"
    },
    {
        "_id": "make-string-a-subsequence-using-cyclic-increments",
        "title_cn": "循环增长使字符串子序列等于另一个字符串",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.1%",
        "frontend_id": "2825",
        "title_slug": "make-string-a-subsequence-using-cyclic-increments"
    },
    {
        "_id": "furthest-point-from-origin",
        "title_cn": "距离原点最远的点",
        "difficulty": 1,
        "tags_q": [
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "78.5%",
        "frontend_id": "2833",
        "title_slug": "furthest-point-from-origin"
    },
    {
        "_id": "string-transformation",
        "title_cn": "字符串转换",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "dynamic-programming",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "42.3%",
        "frontend_id": "2851",
        "title_slug": "string-transformation"
    },
    {
        "_id": "minimum-operations-to-form-subsequence-with-target-sum",
        "title_cn": "使子序列的和等于目标的最少操作次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "34.9%",
        "frontend_id": "2835",
        "title_slug": "minimum-operations-to-form-subsequence-with-target-sum"
    },
    {
        "_id": "find-the-minimum-possible-sum-of-a-beautiful-array",
        "title_cn": "找出美丽数组的最小和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "36.1%",
        "frontend_id": "2834",
        "title_slug": "find-the-minimum-possible-sum-of-a-beautiful-array"
    },
    {
        "_id": "find-the-k-th-lucky-number",
        "title_cn": "找出第 K 个幸运数字",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math",
            "string"
        ],
        "paid_only": true,
        "ac_rate": "60.9%",
        "frontend_id": "2802",
        "title_slug": "find-the-k-th-lucky-number"
    },
    {
        "_id": "construct-product-matrix",
        "title_cn": "构造乘积矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "35.6%",
        "frontend_id": "2906",
        "title_slug": "construct-product-matrix"
    },
    {
        "_id": "maximize-value-of-function-in-a-ball-passing-game",
        "title_cn": "在传球游戏中最大化函数值",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "2836",
        "title_slug": "maximize-value-of-function-in-a-ball-passing-game"
    },
    {
        "_id": "points-that-intersect-with-cars",
        "title_cn": "与车相交的点",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "73.8%",
        "frontend_id": "2848",
        "title_slug": "points-that-intersect-with-cars"
    },
    {
        "_id": "minimum-time-takes-to-reach-destination-without-drowning",
        "title_cn": "避免淹死并到达目的地的最短时间",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "46.2%",
        "frontend_id": "2814",
        "title_slug": "minimum-time-takes-to-reach-destination-without-drowning"
    },
    {
        "_id": "minimum-operations-to-collect-elements",
        "title_cn": "收集元素的最少操作次数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "2869",
        "title_slug": "minimum-operations-to-collect-elements"
    },
    {
        "_id": "minimum-right-shifts-to-sort-the-array",
        "title_cn": "使数组成为递增数组的最少右移次数",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "2855",
        "title_slug": "minimum-right-shifts-to-sort-the-array"
    },
    {
        "_id": "minimum-operations-to-make-a-special-number",
        "title_cn": "生成特殊数字的最少操作",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "string",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "2844",
        "title_slug": "minimum-operations-to-make-a-special-number"
    },
    {
        "_id": "maximum-element-sum-of-a-complete-subset-of-indices",
        "title_cn": "完全子集的最大元素和",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "50.1%",
        "frontend_id": "2862",
        "title_slug": "maximum-element-sum-of-a-complete-subset-of-indices"
    },
    {
        "_id": "maximum-odd-binary-number",
        "title_cn": "最大二进制奇数",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "84.3%",
        "frontend_id": "2864",
        "title_slug": "maximum-odd-binary-number"
    },
    {
        "_id": "determine-if-a-cell-is-reachable-at-a-given-time",
        "title_cn": "判断能否在给定时间到达单元格",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "25.8%",
        "frontend_id": "2849",
        "title_slug": "determine-if-a-cell-is-reachable-at-a-given-time"
    },
    {
        "_id": "count-k-subsequences-of-a-string-with-maximum-beauty",
        "title_cn": "统计一个字符串的 k 子序列美丽值最大的数目",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "hash-table",
            "math",
            "string",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "29.0%",
        "frontend_id": "2842",
        "title_slug": "count-k-subsequences-of-a-string-with-maximum-beauty"
    },
    {
        "_id": "maximum-number-of-k-divisible-components",
        "title_cn": "可以被 K 整除连通块的最大数目",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "2872",
        "title_slug": "maximum-number-of-k-divisible-components"
    },
    {
        "_id": "minimum-relative-loss-after-buying-chocolates",
        "title_cn": "购买巧克力后的最小相对损失",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "61.9%",
        "frontend_id": "2819",
        "title_slug": "minimum-relative-loss-after-buying-chocolates"
    },
    {
        "_id": "split-array-into-maximum-number-of-subarrays",
        "title_cn": "将数组分割成最多数目的子数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "2871",
        "title_slug": "split-array-into-maximum-number-of-subarrays"
    },
    {
        "_id": "minimum-array-length-after-pair-removals",
        "title_cn": "删除数对后的最小数组长度",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "two-pointers",
            "binary-search",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "27.2%",
        "frontend_id": "2856",
        "title_slug": "minimum-array-length-after-pair-removals"
    },
    {
        "_id": "maximal-range-that-each-element-is-maximum-in-it",
        "title_cn": "每个元素为最大值的最大范围",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": true,
        "ac_rate": "74.6%",
        "frontend_id": "2832",
        "title_slug": "maximal-range-that-each-element-is-maximum-in-it"
    },
    {
        "_id": "count-of-sub-multisets-with-bounded-sum",
        "title_cn": "和带限制的子多重集合的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "31.2%",
        "frontend_id": "2902",
        "title_slug": "count-of-sub-multisets-with-bounded-sum"
    },
    {
        "_id": "sum-of-values-at-indices-with-k-set-bits",
        "title_cn": "计算 K 置位下标对应元素的和",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "86.4%",
        "frontend_id": "2859",
        "title_slug": "sum-of-values-at-indices-with-k-set-bits"
    },
    {
        "_id": "minimum-number-of-operations-to-make-array-empty",
        "title_cn": "使数组为空的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "64.9%",
        "frontend_id": "2870",
        "title_slug": "minimum-number-of-operations-to-make-array-empty"
    },
    {
        "_id": "maximum-number-of-alloys",
        "title_cn": "最大合金数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "2861",
        "title_slug": "maximum-number-of-alloys"
    },
    {
        "_id": "maximum-coins-heroes-can-collect",
        "title_cn": null,
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "74.8%",
        "frontend_id": "2838",
        "title_slug": "maximum-coins-heroes-can-collect"
    },
    {
        "_id": "happy-students",
        "title_cn": "让所有学生保持开心的分组方法数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "2860",
        "title_slug": "happy-students"
    },
    {
        "_id": "minimum-edge-reversals-so-every-node-is-reachable",
        "title_cn": "可以到达每一个节点的最少边反转次数",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "69.5%",
        "frontend_id": "2858",
        "title_slug": "minimum-edge-reversals-so-every-node-is-reachable"
    },
    {
        "_id": "length-of-the-longest-subsequence-that-sums-to-target",
        "title_cn": "和为目标值的最长子序列的长度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "2915",
        "title_slug": "length-of-the-longest-subsequence-that-sums-to-target"
    },
    {
        "_id": "maximum-spending-after-buying-items",
        "title_cn": "购买物品的最大开销",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "matrix",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "2931",
        "title_slug": "maximum-spending-after-buying-items"
    },
    {
        "_id": "smallest-number-with-given-digit-product",
        "title_cn": "给定数字乘积的最小数字",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math"
        ],
        "paid_only": true,
        "ac_rate": "49.5%",
        "frontend_id": "2847",
        "title_slug": "smallest-number-with-given-digit-product"
    },
    {
        "_id": "count-valid-paths-in-a-tree",
        "title_cn": "统计树中的合法路径数目",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "math",
            "dynamic-programming",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "49.7%",
        "frontend_id": "2867",
        "title_slug": "count-valid-paths-in-a-tree"
    },
    {
        "_id": "beautiful-towers-ii",
        "title_cn": "美丽塔 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "2866",
        "title_slug": "beautiful-towers-ii"
    },
    {
        "_id": "beautiful-towers-i",
        "title_cn": "美丽塔 I",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "59.9%",
        "frontend_id": "2865",
        "title_slug": "beautiful-towers-i"
    },
    {
        "_id": "subarrays-distinct-element-sum-of-squares-ii",
        "title_cn": "子数组不同元素数目的平方和 II",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "38.4%",
        "frontend_id": "2916",
        "title_slug": "subarrays-distinct-element-sum-of-squares-ii"
    },
    {
        "_id": "count-visited-nodes-in-a-directed-graph",
        "title_cn": "有向图访问计数",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.1%",
        "frontend_id": "2876",
        "title_slug": "count-visited-nodes-in-a-directed-graph"
    },
    {
        "_id": "minimum-size-subarray-in-infinite-array",
        "title_cn": "无限数组的最短子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "34.6%",
        "frontend_id": "2875",
        "title_slug": "minimum-size-subarray-in-infinite-array"
    },
    {
        "_id": "longest-unequal-adjacent-groups-subsequence-ii",
        "title_cn": "最长相邻不相等子序列 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "38.6%",
        "frontend_id": "2901",
        "title_slug": "longest-unequal-adjacent-groups-subsequence-ii"
    },
    {
        "_id": "longest-unequal-adjacent-groups-subsequence-i",
        "title_cn": "最长相邻不相等子序列 I",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "2900",
        "title_slug": "longest-unequal-adjacent-groups-subsequence-i"
    },
    {
        "_id": "sum-of-remoteness-of-all-cells",
        "title_cn": "所有单元格的远离程度之和",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": true,
        "ac_rate": "67.8%",
        "frontend_id": "2852",
        "title_slug": "sum-of-remoteness-of-all-cells"
    },
    {
        "_id": "shortest-and-lexicographically-smallest-beautiful-string",
        "title_cn": "最短且字典序最小的美丽子字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "40.1%",
        "frontend_id": "2904",
        "title_slug": "shortest-and-lexicographically-smallest-beautiful-string"
    },
    {
        "_id": "minimum-processing-time",
        "title_cn": "最小处理时间",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.0%",
        "frontend_id": "2895",
        "title_slug": "minimum-processing-time"
    },
    {
        "_id": "maximum-value-of-an-ordered-triplet-ii",
        "title_cn": "有序三元组中的最大值 II",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "2874",
        "title_slug": "maximum-value-of-an-ordered-triplet-ii"
    },
    {
        "_id": "apply-operations-on-array-to-maximize-sum-of-squares",
        "title_cn": "对数组执行操作使平方和最大",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "57.6%",
        "frontend_id": "2897",
        "title_slug": "apply-operations-on-array-to-maximize-sum-of-squares"
    },
    {
        "_id": "maximum-value-of-an-ordered-triplet-i",
        "title_cn": "有序三元组中的最大值 I",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "2873",
        "title_slug": "maximum-value-of-an-ordered-triplet-i"
    },
    {
        "_id": "maximum-length-of-semi-decreasing-subarrays",
        "title_cn": "最长半递减数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": true,
        "ac_rate": "72.6%",
        "frontend_id": "2863",
        "title_slug": "maximum-length-of-semi-decreasing-subarrays"
    },
    {
        "_id": "subarrays-distinct-element-sum-of-squares-i",
        "title_cn": "子数组不同元素数目的平方和 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "79.9%",
        "frontend_id": "2913",
        "title_slug": "subarrays-distinct-element-sum-of-squares-i"
    },
    {
        "_id": "last-visited-integers",
        "title_cn": "上一个遍历的整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.6%",
        "frontend_id": "2899",
        "title_slug": "last-visited-integers"
    },
    {
        "_id": "find-indices-with-index-and-value-difference-i",
        "title_cn": "找出满足差值条件的下标 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "69.9%",
        "frontend_id": "2903",
        "title_slug": "find-indices-with-index-and-value-difference-i"
    },
    {
        "_id": "minimum-number-of-groups-to-create-a-valid-assignment",
        "title_cn": "合法分组的最少组数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "29.8%",
        "frontend_id": "2910",
        "title_slug": "minimum-number-of-groups-to-create-a-valid-assignment"
    },
    {
        "_id": "find-indices-with-index-and-value-difference-ii",
        "title_cn": "找出满足差值条件的下标 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "38.6%",
        "frontend_id": "2905",
        "title_slug": "find-indices-with-index-and-value-difference-ii"
    },
    {
        "_id": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
        "title_cn": "数组的最小相等和",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "2918",
        "title_slug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros"
    },
    {
        "_id": "divisible-and-non-divisible-sums-difference",
        "title_cn": "分类求和并作差",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "87.2%",
        "frontend_id": "2894",
        "title_slug": "divisible-and-non-divisible-sums-difference"
    },
    {
        "_id": "the-wording-game",
        "title_cn": "单词游戏",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "two-pointers",
            "string",
            "game-theory"
        ],
        "paid_only": true,
        "ac_rate": "54.5%",
        "frontend_id": "2868",
        "title_slug": "the-wording-game"
    },
    {
        "_id": "minimum-number-of-changes-to-make-binary-string-beautiful",
        "title_cn": "使二进制字符串变美丽的最少修改次数",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "75.2%",
        "frontend_id": "2914",
        "title_slug": "minimum-number-of-changes-to-make-binary-string-beautiful"
    },
    {
        "_id": "minimum-sum-of-mountain-triplets-i",
        "title_cn": "元素和最小的山形三元组 I",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "66.7%",
        "frontend_id": "2908",
        "title_slug": "minimum-sum-of-mountain-triplets-i"
    },
    {
        "_id": "minimizing-array-after-replacing-pairs-with-their-product",
        "title_cn": "将相邻元素相乘后得到最小化数组",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "dynamic-programming"
        ],
        "paid_only": true,
        "ac_rate": "48.4%",
        "frontend_id": "2892",
        "title_slug": "minimizing-array-after-replacing-pairs-with-their-product"
    },
    {
        "_id": "minimum-increment-operations-to-make-array-beautiful",
        "title_cn": "使数组变美的最小增量运算数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.7%",
        "frontend_id": "2919",
        "title_slug": "minimum-increment-operations-to-make-array-beautiful"
    },
    {
        "_id": "maximum-points-after-collecting-coins-from-all-nodes",
        "title_cn": "收集所有金币可获得的最大积分",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "tree",
            "depth-first-search",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.2%",
        "frontend_id": "2920",
        "title_slug": "maximum-points-after-collecting-coins-from-all-nodes"
    },
    {
        "_id": "find-building-where-alice-and-bob-can-meet",
        "title_cn": "找到 Alice 和 Bob 可以相遇的建筑",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "monotonic-stack",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "2940",
        "title_slug": "find-building-where-alice-and-bob-can-meet"
    },
    {
        "_id": "maximum-linear-stock-score",
        "title_cn": "最大线性股票得分",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "72.1%",
        "frontend_id": "2898",
        "title_slug": "maximum-linear-stock-score"
    },
    {
        "_id": "find-the-k-or-of-an-array",
        "title_cn": "找出数组中的 K-or 值",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "2917",
        "title_slug": "find-the-k-or-of-an-array"
    },
    {
        "_id": "maximum-balanced-subsequence-sum",
        "title_cn": "平衡子序列的最大和",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "38.3%",
        "frontend_id": "2926",
        "title_slug": "maximum-balanced-subsequence-sum"
    },
    {
        "_id": "minimum-sum-of-mountain-triplets-ii",
        "title_cn": "元素和最小的山形三元组 II",
        "difficulty": 2,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "2909",
        "title_slug": "minimum-sum-of-mountain-triplets-ii"
    },
    {
        "_id": "find-champion-i",
        "title_cn": "找到冠军 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "2923",
        "title_slug": "find-champion-i"
    },
    {
        "_id": "find-champion-ii",
        "title_cn": "找到冠军 II",
        "difficulty": 2,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "2924",
        "title_slug": "find-champion-ii"
    },
    {
        "_id": "minimum-operations-to-maximize-last-elements-in-arrays",
        "title_cn": "最大化数组末位元素的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "2934",
        "title_slug": "minimum-operations-to-maximize-last-elements-in-arrays"
    },
    {
        "_id": "maximum-score-after-applying-operations-on-a-tree",
        "title_cn": "在树上执行操作以后得到的最大分数",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "2925",
        "title_slug": "maximum-score-after-applying-operations-on-a-tree"
    },
    {
        "_id": "maximum-xor-product",
        "title_cn": "最大异或乘积",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "30.6%",
        "frontend_id": "2939",
        "title_slug": "maximum-xor-product"
    },
    {
        "_id": "maximum-strong-pair-xor-i",
        "title_cn": "找出强数对的最大异或值 I",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "75.2%",
        "frontend_id": "2932",
        "title_slug": "maximum-strong-pair-xor-i"
    },
    {
        "_id": "find-words-containing-character",
        "title_cn": "查找包含给定字符的单词",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "87.2%",
        "frontend_id": "2942",
        "title_slug": "find-words-containing-character"
    },
    {
        "_id": "separate-black-and-white-balls",
        "title_cn": "区分黑球与白球",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "54.3%",
        "frontend_id": "2938",
        "title_slug": "separate-black-and-white-balls"
    },
    {
        "_id": "maximum-strong-pair-xor-ii",
        "title_cn": "找出强数对的最大异或值 II",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "39.2%",
        "frontend_id": "2935",
        "title_slug": "maximum-strong-pair-xor-ii"
    },
    {
        "_id": "number-of-ways-to-reach-destination-in-the-grid",
        "title_cn": "在网格上移动到目的地的方法数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": true,
        "ac_rate": "74.7%",
        "frontend_id": "2912",
        "title_slug": "number-of-ways-to-reach-destination-in-the-grid"
    },
    {
        "_id": "distribute-candies-among-children-i",
        "title_cn": "给小朋友们分糖果 I",
        "difficulty": 1,
        "tags_q": [
            "math",
            "combinatorics",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "74.1%",
        "frontend_id": "2928",
        "title_slug": "distribute-candies-among-children-i"
    },
    {
        "_id": "number-of-strings-which-can-be-rearranged-to-contain-substring",
        "title_cn": "重新排列后包含指定子字符串的字符串数目",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "62.4%",
        "frontend_id": "2930",
        "title_slug": "number-of-strings-which-can-be-rearranged-to-contain-substring"
    },
    {
        "_id": "distribute-candies-among-children-ii",
        "title_cn": "给小朋友们分糖果 II",
        "difficulty": 2,
        "tags_q": [
            "math",
            "combinatorics",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "37.4%",
        "frontend_id": "2929",
        "title_slug": "distribute-candies-among-children-ii"
    },
    {
        "_id": "high-access-employees",
        "title_cn": "高访问员工",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "49.9%",
        "frontend_id": "2933",
        "title_slug": "high-access-employees"
    },
    {
        "_id": "palindrome-rearrangement-queries",
        "title_cn": "回文串重新排列查询",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "32.2%",
        "frontend_id": "2983",
        "title_slug": "palindrome-rearrangement-queries"
    },
    {
        "_id": "maximum-profitable-triplets-with-increasing-prices-ii",
        "title_cn": "价格递增的最大利润三元组 II",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array"
        ],
        "paid_only": true,
        "ac_rate": "69.0%",
        "frontend_id": "2921",
        "title_slug": "maximum-profitable-triplets-with-increasing-prices-ii"
    },
    {
        "_id": "find-common-elements-between-two-arrays",
        "title_cn": "找到两个数组中的公共元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "2956",
        "title_slug": "find-common-elements-between-two-arrays"
    },
    {
        "_id": "make-three-strings-equal",
        "title_cn": "使三个字符串相等",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "2937",
        "title_slug": "make-three-strings-equal"
    },
    {
        "_id": "count-beautiful-substrings-ii",
        "title_cn": "统计美丽子字符串 II",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "math",
            "string",
            "number-theory",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "32.8%",
        "frontend_id": "2949",
        "title_slug": "count-beautiful-substrings-ii"
    },
    {
        "_id": "minimum-number-of-coins-for-fruits",
        "title_cn": "购买水果需要的最少金币数",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "dynamic-programming",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "2944",
        "title_slug": "minimum-number-of-coins-for-fruits"
    },
    {
        "_id": "count-beautiful-substrings-i",
        "title_cn": "统计美丽子字符串 I",
        "difficulty": 2,
        "tags_q": [
            "string",
            "enumeration",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "2947",
        "title_slug": "count-beautiful-substrings-i"
    },
    {
        "_id": "find-maximum-non-decreasing-array-length",
        "title_cn": "找到最大非递减数组的长度",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "queue",
            "array",
            "binary-search",
            "dynamic-programming",
            "monotonic-queue",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "25.8%",
        "frontend_id": "2945",
        "title_slug": "find-maximum-non-decreasing-array-length"
    },
    {
        "_id": "count-the-number-of-good-partitions",
        "title_cn": "统计好分割方案的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "2963",
        "title_slug": "count-the-number-of-good-partitions"
    },
    {
        "_id": "count-subarrays-where-max-element-appears-at-least-k-times",
        "title_cn": "统计最大元素出现至少 K 次的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "48.2%",
        "frontend_id": "2962",
        "title_slug": "count-subarrays-where-max-element-appears-at-least-k-times"
    },
    {
        "_id": "maximize-area-of-square-hole-in-grid",
        "title_cn": "最大化网格图中正方形空洞的面积",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "38.7%",
        "frontend_id": "2943",
        "title_slug": "maximize-area-of-square-hole-in-grid"
    },
    {
        "_id": "matrix-similarity-after-cyclic-shifts",
        "title_cn": "循环移位后的矩阵相似检查",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "2946",
        "title_slug": "matrix-similarity-after-cyclic-shifts"
    },
    {
        "_id": "distribute-candies-among-children-iii",
        "title_cn": "给小朋友们分糖果 III",
        "difficulty": 3,
        "tags_q": [
            "math",
            "combinatorics"
        ],
        "paid_only": true,
        "ac_rate": "61.1%",
        "frontend_id": "2927",
        "title_slug": "distribute-candies-among-children-iii"
    },
    {
        "_id": "number-of-possible-sets-of-closing-branches",
        "title_cn": "关闭分部的可行集合数目",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "graph",
            "enumeration",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "2959",
        "title_slug": "number-of-possible-sets-of-closing-branches"
    },
    {
        "_id": "find-number-of-coins-to-place-in-tree-nodes",
        "title_cn": "树中每个节点放置的金币数目",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "2973",
        "title_slug": "find-number-of-coins-to-place-in-tree-nodes"
    },
    {
        "_id": "make-lexicographically-smallest-array-by-swapping-elements",
        "title_cn": "交换得到字典序最小的数组",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "2948",
        "title_slug": "make-lexicographically-smallest-array-by-swapping-elements"
    },
    {
        "_id": "count-tested-devices-after-test-operations",
        "title_cn": "统计已测试设备",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "83.8%",
        "frontend_id": "2960",
        "title_slug": "count-tested-devices-after-test-operations"
    },
    {
        "_id": "find-the-peaks",
        "title_cn": "找出峰值",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "78.9%",
        "frontend_id": "2951",
        "title_slug": "find-the-peaks"
    },
    {
        "_id": "number-of-equal-numbers-blocks",
        "title_cn": "包含相等值数字块的数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "divide-and-conquer",
            "interactive"
        ],
        "paid_only": true,
        "ac_rate": "74.2%",
        "frontend_id": "2936",
        "title_slug": "number-of-equal-numbers-blocks"
    },
    {
        "_id": "count-complete-substrings",
        "title_cn": "统计完全子字符串",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "34.6%",
        "frontend_id": "2953",
        "title_slug": "count-complete-substrings"
    },
    {
        "_id": "count-the-number-of-infection-sequences",
        "title_cn": "统计感冒序列的数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "2954",
        "title_slug": "count-the-number-of-infection-sequences"
    },
    {
        "_id": "length-of-longest-subarray-with-at-most-k-frequency",
        "title_cn": "最多 K 个重复元素的最长子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "49.3%",
        "frontend_id": "2958",
        "title_slug": "length-of-longest-subarray-with-at-most-k-frequency"
    },
    {
        "_id": "minimum-number-game",
        "title_cn": "最小数字游戏",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "86.2%",
        "frontend_id": "2974",
        "title_slug": "minimum-number-game"
    },
    {
        "_id": "find-missing-and-repeated-values",
        "title_cn": "找出缺失和重复的数字",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "79.7%",
        "frontend_id": "2965",
        "title_slug": "find-missing-and-repeated-values"
    },
    {
        "_id": "maximum-size-of-a-set-after-removals",
        "title_cn": "移除后集合的最多元素数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "46.4%",
        "frontend_id": "3002",
        "title_slug": "maximum-size-of-a-set-after-removals"
    },
    {
        "_id": "remove-adjacent-almost-equal-characters",
        "title_cn": "消除相邻近似相等字符",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.8%",
        "frontend_id": "2957",
        "title_slug": "remove-adjacent-almost-equal-characters"
    },
    {
        "_id": "minimum-number-of-coins-to-be-added",
        "title_cn": "需要添加的硬币的最小数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "2952",
        "title_slug": "minimum-number-of-coins-to-be-added"
    },
    {
        "_id": "maximum-gcd-sum-of-a-subarray",
        "title_cn": "子数组的最大 GCD-Sum",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "binary-search",
            "number-theory"
        ],
        "paid_only": true,
        "ac_rate": "75.8%",
        "frontend_id": "2941",
        "title_slug": "maximum-gcd-sum-of-a-subarray"
    },
    {
        "_id": "maximize-the-number-of-partitions-after-operations",
        "title_cn": "执行操作后的最大分割数量",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "string",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "31.7%",
        "frontend_id": "3003",
        "title_slug": "maximize-the-number-of-partitions-after-operations"
    },
    {
        "_id": "double-modular-exponentiation",
        "title_cn": "双模幂运算",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "47.8%",
        "frontend_id": "2961",
        "title_slug": "double-modular-exponentiation"
    },
    {
        "_id": "minimum-cost-to-convert-string-i",
        "title_cn": "转换字符串的最小成本 I",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "string",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "45.5%",
        "frontend_id": "2976",
        "title_slug": "minimum-cost-to-convert-string-i"
    },
    {
        "_id": "smallest-missing-integer-greater-than-sequential-prefix-sum",
        "title_cn": "大于等于顺序前缀和的最小缺失整数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "36.9%",
        "frontend_id": "2996",
        "title_slug": "smallest-missing-integer-greater-than-sequential-prefix-sum"
    },
    {
        "_id": "number-of-divisible-substrings",
        "title_cn": "可整除子串的数量",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "counting",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "84.2%",
        "frontend_id": "2950",
        "title_slug": "number-of-divisible-substrings"
    },
    {
        "_id": "minimum-cost-to-convert-string-ii",
        "title_cn": "转换字符串的最小成本 II",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "trie",
            "array",
            "string",
            "dynamic-programming",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "29.2%",
        "frontend_id": "2977",
        "title_slug": "minimum-cost-to-convert-string-ii"
    },
    {
        "_id": "minimum-number-of-operations-to-make-x-and-y-equal",
        "title_cn": "使 X 和 Y 相等的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "memoization",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "2998",
        "title_slug": "minimum-number-of-operations-to-make-x-and-y-equal"
    },
    {
        "_id": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
        "title_cn": "价值和小于等于 K 的最大数字",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "3007",
        "title_slug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k"
    },
    {
        "_id": "divide-array-into-arrays-with-max-difference",
        "title_cn": "划分数组并满足最大差限制",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "2966",
        "title_slug": "divide-array-into-arrays-with-max-difference"
    },
    {
        "_id": "count-elements-with-maximum-frequency",
        "title_cn": "最大频率元素计数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "3005",
        "title_slug": "count-elements-with-maximum-frequency"
    },
    {
        "_id": "count-the-number-of-powerful-integers",
        "title_cn": "统计强大整数的数目",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "39.1%",
        "frontend_id": "2999",
        "title_slug": "count-the-number-of-powerful-integers"
    },
    {
        "_id": "minimize-length-of-array-using-operations",
        "title_cn": "通过操作使数组长度最小",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "32.8%",
        "frontend_id": "3012",
        "title_slug": "minimize-length-of-array-using-operations"
    },
    {
        "_id": "find-beautiful-indices-in-the-given-array-i",
        "title_cn": "找出数组中的美丽下标 I",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string",
            "binary-search",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "43.5%",
        "frontend_id": "3006",
        "title_slug": "find-beautiful-indices-in-the-given-array-i"
    },
    {
        "_id": "check-if-bitwise-or-has-trailing-zeros",
        "title_cn": "检查按位或是否存在尾随零",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "75.8%",
        "frontend_id": "2980",
        "title_slug": "check-if-bitwise-or-has-trailing-zeros"
    },
    {
        "_id": "number-of-same-end-substrings",
        "title_cn": "同端子串的数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting",
            "prefix-sum"
        ],
        "paid_only": true,
        "ac_rate": "83.9%",
        "frontend_id": "2955",
        "title_slug": "number-of-same-end-substrings"
    },
    {
        "_id": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
        "title_cn": "使数组异或和等于 K 的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "84.1%",
        "frontend_id": "2997",
        "title_slug": "minimum-number-of-operations-to-make-array-xor-equal-to-k"
    },
    {
        "_id": "maximum-square-area-by-removing-fences-from-a-field",
        "title_cn": "移除栅栏得到的正方形田地的最大面积",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "29.8%",
        "frontend_id": "2975",
        "title_slug": "maximum-square-area-by-removing-fences-from-a-field"
    },
    {
        "_id": "maximum-area-of-longest-diagonal-rectangle",
        "title_cn": "对角线最长的矩形的面积",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "44.0%",
        "frontend_id": "3000",
        "title_slug": "maximum-area-of-longest-diagonal-rectangle"
    },
    {
        "_id": "count-the-number-of-incremovable-subarrays-i",
        "title_cn": "统计移除递增子数组的数目 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "60.5%",
        "frontend_id": "2970",
        "title_slug": "count-the-number-of-incremovable-subarrays-i"
    },
    {
        "_id": "number-of-divisible-triplet-sums",
        "title_cn": "可被整除的三元组数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": true,
        "ac_rate": "77.5%",
        "frontend_id": "2964",
        "title_slug": "number-of-divisible-triplet-sums"
    },
    {
        "_id": "divide-an-array-into-subarrays-with-minimum-cost-ii",
        "title_cn": "将数组分成最小总代价的子数组 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "3013",
        "title_slug": "divide-an-array-into-subarrays-with-minimum-cost-ii"
    },
    {
        "_id": "minimize-or-of-remaining-elements-using-operations",
        "title_cn": "给定操作次数内使剩余元素的或值最小",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "53.2%",
        "frontend_id": "3022",
        "title_slug": "minimize-or-of-remaining-elements-using-operations"
    },
    {
        "_id": "divide-an-array-into-subarrays-with-minimum-cost-i",
        "title_cn": "将数组分成最小总代价的子数组 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "3010",
        "title_slug": "divide-an-array-into-subarrays-with-minimum-cost-i"
    },
    {
        "_id": "maximum-good-subarray-sum",
        "title_cn": "最大好子数组和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "24.1%",
        "frontend_id": "3026",
        "title_slug": "maximum-good-subarray-sum"
    },
    {
        "_id": "find-longest-special-substring-that-occurs-thrice-ii",
        "title_cn": "找出出现至少三次的最长特殊子字符串 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "binary-search",
            "counting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "38.9%",
        "frontend_id": "2982",
        "title_slug": "find-longest-special-substring-that-occurs-thrice-ii"
    },
    {
        "_id": "find-longest-special-substring-that-occurs-thrice-i",
        "title_cn": "找出出现至少三次的最长特殊子字符串 I",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "binary-search",
            "counting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "2981",
        "title_slug": "find-longest-special-substring-that-occurs-thrice-i"
    },
    {
        "_id": "minimum-number-of-coins-for-fruits-ii",
        "title_cn": "购买水果需要的最少金币数 II",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "dynamic-programming",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": true,
        "ac_rate": "76.7%",
        "frontend_id": "2969",
        "title_slug": "minimum-number-of-coins-for-fruits-ii"
    },
    {
        "_id": "remove-duplicate-node-lcci",
        "title_cn": "移除重复节点",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "面试题 02.01",
        "title_slug": "remove-duplicate-node-lcci"
    },
    {
        "_id": "palindrome-linked-list-lcci",
        "title_cn": "回文链表",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "面试题 02.06",
        "title_slug": "palindrome-linked-list-lcci"
    },
    {
        "_id": "intersection-of-two-linked-lists-lcci",
        "title_cn": "链表相交",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "面试题 02.07",
        "title_slug": "intersection-of-two-linked-lists-lcci"
    },
    {
        "_id": "linked-list-cycle-lcci",
        "title_cn": "环路检测",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "面试题 02.08",
        "title_slug": "linked-list-cycle-lcci"
    },
    {
        "_id": "delete-middle-node-lcci",
        "title_cn": "删除中间节点",
        "difficulty": 1,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "85.8%",
        "frontend_id": "面试题 02.03",
        "title_slug": "delete-middle-node-lcci"
    },
    {
        "_id": "sum-lists-lcci",
        "title_cn": "链表求和",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "46.7%",
        "frontend_id": "面试题 02.05",
        "title_slug": "sum-lists-lcci"
    },
    {
        "_id": "bracket-lcci",
        "title_cn": "括号",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "82.2%",
        "frontend_id": "面试题 08.09",
        "title_slug": "bracket-lcci"
    },
    {
        "_id": "yong-liang-ge-zhan-shi-xian-dui-lie-lcof",
        "title_cn": "图书整理 II",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "design",
            "queue"
        ],
        "paid_only": false,
        "ac_rate": "70.3%",
        "frontend_id": "LCR 125",
        "title_slug": "yong-liang-ge-zhan-shi-xian-dui-lie-lcof"
    },
    {
        "_id": "fei-bo-na-qi-shu-lie-lcof",
        "title_cn": "斐波那契数",
        "difficulty": 1,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "35.7%",
        "frontend_id": "LCR 126",
        "title_slug": "fei-bo-na-qi-shu-lie-lcof"
    },
    {
        "_id": "shu-zu-zhong-zhong-fu-de-shu-zi-lcof",
        "title_cn": "寻找文件副本",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.9%",
        "frontend_id": "LCR 120",
        "title_slug": "shu-zu-zhong-zhong-fu-de-shu-zi-lcof"
    },
    {
        "_id": "er-wei-shu-zu-zhong-de-cha-zhao-lcof",
        "title_cn": "寻找目标值 - 二维数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "divide-and-conquer",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "39.5%",
        "frontend_id": "LCR 121",
        "title_slug": "er-wei-shu-zu-zhong-de-cha-zhao-lcof"
    },
    {
        "_id": "qing-wa-tiao-tai-jie-wen-ti-lcof",
        "title_cn": "跳跃训练",
        "difficulty": 1,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "LCR 127",
        "title_slug": "qing-wa-tiao-tai-jie-wen-ti-lcof"
    },
    {
        "_id": "xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof",
        "title_cn": "库存管理 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "LCR 128",
        "title_slug": "xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof"
    },
    {
        "_id": "ju-zhen-zhong-de-lu-jing-lcof",
        "title_cn": "字母迷宫",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "LCR 129",
        "title_slug": "ju-zhen-zhong-de-lu-jing-lcof"
    },
    {
        "_id": "ti-huan-kong-ge-lcof",
        "title_cn": "路径加密",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "LCR 122",
        "title_slug": "ti-huan-kong-ge-lcof"
    },
    {
        "_id": "ji-qi-ren-de-yun-dong-fan-wei-lcof",
        "title_cn": "衣橱整理",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "LCR 130",
        "title_slug": "ji-qi-ren-de-yun-dong-fan-wei-lcof"
    },
    {
        "_id": "cong-wei-dao-tou-da-yin-lian-biao-lcof",
        "title_cn": "图书整理 I",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "74.0%",
        "frontend_id": "LCR 123",
        "title_slug": "cong-wei-dao-tou-da-yin-lian-biao-lcof"
    },
    {
        "_id": "zhong-jian-er-cha-shu-lcof",
        "title_cn": "推理二叉树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "array",
            "hash-table",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.1%",
        "frontend_id": "LCR 124",
        "title_slug": "zhong-jian-er-cha-shu-lcof"
    },
    {
        "_id": "jian-sheng-zi-lcof",
        "title_cn": "砍竹子 I",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "LCR 131",
        "title_slug": "jian-sheng-zi-lcof"
    },
    {
        "_id": "jian-sheng-zi-ii-lcof",
        "title_cn": "砍竹子 II",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "31.3%",
        "frontend_id": "LCR 132",
        "title_slug": "jian-sheng-zi-ii-lcof"
    },
    {
        "_id": "he-bing-liang-ge-pai-xu-de-lian-biao-lcof",
        "title_cn": "训练计划 IV",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "71.8%",
        "frontend_id": "LCR 142",
        "title_slug": "he-bing-liang-ge-pai-xu-de-lian-biao-lcof"
    },
    {
        "_id": "shu-de-zi-jie-gou-lcof",
        "title_cn": "子结构判断",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "LCR 143",
        "title_slug": "shu-de-zi-jie-gou-lcof"
    },
    {
        "_id": "er-cha-shu-de-jing-xiang-lcof",
        "title_cn": "翻转二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "79.5%",
        "frontend_id": "LCR 144",
        "title_slug": "er-cha-shu-de-jing-xiang-lcof"
    },
    {
        "_id": "dui-cheng-de-er-cha-shu-lcof",
        "title_cn": "判断对称二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "57.6%",
        "frontend_id": "LCR 145",
        "title_slug": "dui-cheng-de-er-cha-shu-lcof"
    },
    {
        "_id": "biao-shi-shu-zhi-de-zi-fu-chuan-lcof",
        "title_cn": "有效数字",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "24.8%",
        "frontend_id": "LCR 138",
        "title_slug": "biao-shi-shu-zhi-de-zi-fu-chuan-lcof"
    },
    {
        "_id": "diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof",
        "title_cn": "训练计划 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "LCR 139",
        "title_slug": "diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof"
    },
    {
        "_id": "er-jin-zhi-zhong-1de-ge-shu-lcof",
        "title_cn": "位 1 的个数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "76.0%",
        "frontend_id": "LCR 133",
        "title_slug": "er-jin-zhi-zhong-1de-ge-shu-lcof"
    },
    {
        "_id": "shun-shi-zhen-da-yin-ju-zhen-lcof",
        "title_cn": "螺旋遍历二维数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "42.5%",
        "frontend_id": "LCR 146",
        "title_slug": "shun-shi-zhen-da-yin-ju-zhen-lcof"
    },
    {
        "_id": "lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",
        "title_cn": "训练计划 II",
        "difficulty": 1,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "79.6%",
        "frontend_id": "LCR 140",
        "title_slug": "lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof"
    },
    {
        "_id": "shu-zhi-de-zheng-shu-ci-fang-lcof",
        "title_cn": "Pow(x, n)",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "35.0%",
        "frontend_id": "LCR 134",
        "title_slug": "shu-zhi-de-zheng-shu-ci-fang-lcof"
    },
    {
        "_id": "da-yin-cong-1dao-zui-da-de-nwei-shu-lcof",
        "title_cn": "报数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "77.6%",
        "frontend_id": "LCR 135",
        "title_slug": "da-yin-cong-1dao-zui-da-de-nwei-shu-lcof"
    },
    {
        "_id": "zheng-ze-biao-da-shi-pi-pei-lcof",
        "title_cn": "模糊搜索验证",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "LCR 137",
        "title_slug": "zheng-ze-biao-da-shi-pi-pei-lcof"
    },
    {
        "_id": "fan-zhuan-lian-biao-lcof",
        "title_cn": "训练计划 III",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "74.1%",
        "frontend_id": "LCR 141",
        "title_slug": "fan-zhuan-lian-biao-lcof"
    },
    {
        "_id": "shan-chu-lian-biao-de-jie-dian-lcof",
        "title_cn": "删除链表的节点",
        "difficulty": 1,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "59.4%",
        "frontend_id": "LCR 136",
        "title_slug": "shan-chu-lian-biao-de-jie-dian-lcof"
    },
    {
        "_id": "fu-za-lian-biao-de-fu-zhi-lcof",
        "title_cn": "复杂链表的复制",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "71.4%",
        "frontend_id": "LCR 154",
        "title_slug": "fu-za-lian-biao-de-fu-zhi-lcof"
    },
    {
        "_id": "zui-xiao-de-kge-shu-lcof",
        "title_cn": "库存管理 III",
        "difficulty": 1,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "57.7%",
        "frontend_id": "LCR 159",
        "title_slug": "zui-xiao-de-kge-shu-lcof"
    },
    {
        "_id": "bao-han-minhan-shu-de-zhan-lcof",
        "title_cn": "最小栈",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "design"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "LCR 147",
        "title_slug": "bao-han-minhan-shu-de-zhan-lcof"
    },
    {
        "_id": "shu-ju-liu-zhong-de-zhong-wei-shu-lcof",
        "title_cn": "数据流中的中位数",
        "difficulty": 3,
        "tags_q": [
            "design",
            "two-pointers",
            "data-stream",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "LCR 160",
        "title_slug": "shu-ju-liu-zhong-de-zhong-wei-shu-lcof"
    },
    {
        "_id": "lian-xu-zi-shu-zu-de-zui-da-he-lcof",
        "title_cn": "连续天数的最高销售额",
        "difficulty": 1,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "60.1%",
        "frontend_id": "LCR 161",
        "title_slug": "lian-xu-zi-shu-zu-de-zui-da-he-lcof"
    },
    {
        "_id": "er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",
        "title_cn": "将二叉搜索树转化为排序的双向链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "linked-list",
            "binary-tree",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "65.0%",
        "frontend_id": "LCR 155",
        "title_slug": "er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof"
    },
    {
        "_id": "zhan-de-ya-ru-dan-chu-xu-lie-lcof",
        "title_cn": "验证图书取出顺序",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "61.1%",
        "frontend_id": "LCR 148",
        "title_slug": "zhan-de-ya-ru-dan-chu-xu-lie-lcof"
    },
    {
        "_id": "xu-lie-hua-er-cha-shu-lcof",
        "title_cn": "序列化与反序列化二叉树",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "design",
            "string",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "57.3%",
        "frontend_id": "LCR 156",
        "title_slug": "xu-lie-hua-er-cha-shu-lcof"
    },
    {
        "_id": "zi-fu-chuan-de-pai-lie-lcof",
        "title_cn": "套餐内商品的排列顺序",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "LCR 157",
        "title_slug": "zi-fu-chuan-de-pai-lie-lcof"
    },
    {
        "_id": "1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",
        "title_cn": "数字 1 的个数",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "LCR 162",
        "title_slug": "1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof"
    },
    {
        "_id": "shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof",
        "title_cn": "库存管理 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "divide-and-conquer",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.9%",
        "frontend_id": "LCR 158",
        "title_slug": "shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof"
    },
    {
        "_id": "cong-shang-dao-xia-da-yin-er-cha-shu-lcof",
        "title_cn": "彩灯装饰记录 I",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "63.0%",
        "frontend_id": "LCR 149",
        "title_slug": "cong-shang-dao-xia-da-yin-er-cha-shu-lcof"
    },
    {
        "_id": "cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",
        "title_cn": "彩灯装饰记录 II",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "LCR 150",
        "title_slug": "cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof"
    },
    {
        "_id": "shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof",
        "title_cn": "找到第 k 位数字",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "43.1%",
        "frontend_id": "LCR 163",
        "title_slug": "shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof"
    },
    {
        "_id": "cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",
        "title_cn": "彩灯装饰记录 III",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "LCR 151",
        "title_slug": "cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof"
    },
    {
        "_id": "er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",
        "title_cn": "验证二叉搜索树的后序遍历序列",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "tree",
            "binary-search-tree",
            "recursion",
            "array",
            "binary-tree",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "57.0%",
        "frontend_id": "LCR 152",
        "title_slug": "er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof"
    },
    {
        "_id": "di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",
        "title_cn": "招式拆解 II",
        "difficulty": 1,
        "tags_q": [
            "queue",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "61.8%",
        "frontend_id": "LCR 169",
        "title_slug": "di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof"
    },
    {
        "_id": "er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",
        "title_cn": "二叉树中和为目标值的路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "backtracking",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "59.1%",
        "frontend_id": "LCR 153",
        "title_slug": "er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof"
    },
    {
        "_id": "shu-zu-zhong-de-ni-xu-dui-lcof",
        "title_cn": "交易逆序对的总数",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "49.6%",
        "frontend_id": "LCR 170",
        "title_slug": "shu-zu-zhong-de-ni-xu-dui-lcof"
    },
    {
        "_id": "er-cha-shu-de-shen-du-lcof",
        "title_cn": "计算二叉树的深度",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "79.3%",
        "frontend_id": "LCR 175",
        "title_slug": "er-cha-shu-de-shen-du-lcof"
    },
    {
        "_id": "shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof",
        "title_cn": "撞色搭配",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "LCR 177",
        "title_slug": "shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof"
    },
    {
        "_id": "shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof",
        "title_cn": "训练计划 VI",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "80.6%",
        "frontend_id": "LCR 178",
        "title_slug": "shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof"
    },
    {
        "_id": "he-wei-sde-liang-ge-shu-zi-lcof",
        "title_cn": "查找总价格为目标值的两个商品",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "67.8%",
        "frontend_id": "LCR 179",
        "title_slug": "he-wei-sde-liang-ge-shu-zi-lcof"
    },
    {
        "_id": "ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof",
        "title_cn": "破解闯关密码",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "LCR 164",
        "title_slug": "ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof"
    },
    {
        "_id": "he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof",
        "title_cn": "文件组合",
        "difficulty": 1,
        "tags_q": [
            "math",
            "two-pointers",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "70.8%",
        "frontend_id": "LCR 180",
        "title_slug": "he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof"
    },
    {
        "_id": "ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",
        "title_cn": "解密数字",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "LCR 165",
        "title_slug": "ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof"
    },
    {
        "_id": "liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof",
        "title_cn": "训练计划 V",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "LCR 171",
        "title_slug": "liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof"
    },
    {
        "_id": "li-wu-de-zui-da-jie-zhi-lcof",
        "title_cn": "珠宝的最高价值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "69.2%",
        "frontend_id": "LCR 166",
        "title_slug": "li-wu-de-zui-da-jie-zhi-lcof"
    },
    {
        "_id": "fan-zhuan-dan-ci-shun-xu-lcof",
        "title_cn": "字符串中的单词反转",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "LCR 181",
        "title_slug": "fan-zhuan-dan-ci-shun-xu-lcof"
    },
    {
        "_id": "zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof",
        "title_cn": "统计目标成绩的出现次数",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "LCR 172",
        "title_slug": "zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof"
    },
    {
        "_id": "zuo-xuan-zhuan-zi-fu-chuan-lcof",
        "title_cn": "动态口令",
        "difficulty": 1,
        "tags_q": [
            "math",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "85.4%",
        "frontend_id": "LCR 182",
        "title_slug": "zuo-xuan-zhuan-zi-fu-chuan-lcof"
    },
    {
        "_id": "que-shi-de-shu-zi-lcof",
        "title_cn": "点名",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "44.8%",
        "frontend_id": "LCR 173",
        "title_slug": "que-shi-de-shu-zi-lcof"
    },
    {
        "_id": "zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof",
        "title_cn": "招式拆解 I",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "LCR 167",
        "title_slug": "zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof"
    },
    {
        "_id": "er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",
        "title_cn": "寻找二叉搜索树中的目标节点",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "76.3%",
        "frontend_id": "LCR 174",
        "title_slug": "er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof"
    },
    {
        "_id": "chou-shu-lcof",
        "title_cn": "丑数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "64.3%",
        "frontend_id": "LCR 168",
        "title_slug": "chou-shu-lcof"
    },
    {
        "_id": "bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof",
        "title_cn": "加密运算",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "LCR 190",
        "title_slug": "bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof"
    },
    {
        "_id": "hua-dong-chuang-kou-de-zui-da-zhi-lcof",
        "title_cn": "望远镜中最高的海拔",
        "difficulty": 3,
        "tags_q": [
            "queue",
            "array",
            "sliding-window",
            "monotonic-queue",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "44.6%",
        "frontend_id": "LCR 183",
        "title_slug": "hua-dong-chuang-kou-de-zui-da-zhi-lcof"
    },
    {
        "_id": "dui-lie-de-zui-da-zhi-lcof",
        "title_cn": "设计自助结算系统",
        "difficulty": 2,
        "tags_q": [
            "design",
            "queue",
            "monotonic-queue"
        ],
        "paid_only": false,
        "ac_rate": "47.7%",
        "frontend_id": "LCR 184",
        "title_slug": "dui-lie-de-zui-da-zhi-lcof"
    },
    {
        "_id": "gou-jian-cheng-ji-shu-zu-lcof",
        "title_cn": "按规则计算统计结果",
        "difficulty": 2,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "LCR 191",
        "title_slug": "gou-jian-cheng-ji-shu-zu-lcof"
    },
    {
        "_id": "nge-tou-zi-de-dian-shu-lcof",
        "title_cn": "统计结果概率",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "LCR 185",
        "title_slug": "nge-tou-zi-de-dian-shu-lcof"
    },
    {
        "_id": "ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof",
        "title_cn": "把字符串转换成整数 (atoi)",
        "difficulty": 2,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "27.7%",
        "frontend_id": "LCR 192",
        "title_slug": "ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof"
    },
    {
        "_id": "bu-ke-pai-zhong-de-shun-zi-lcof",
        "title_cn": "文物朝代判断",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.1%",
        "frontend_id": "LCR 186",
        "title_slug": "bu-ke-pai-zhong-de-shun-zi-lcof"
    },
    {
        "_id": "ping-heng-er-cha-shu-lcof",
        "title_cn": "判断是否为平衡二叉树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "LCR 176",
        "title_slug": "ping-heng-er-cha-shu-lcof"
    },
    {
        "_id": "yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",
        "title_cn": "破冰游戏",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "LCR 187",
        "title_slug": "yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof"
    },
    {
        "_id": "gu-piao-de-zui-da-li-run-lcof",
        "title_cn": "买卖芯片的最佳时机",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "62.6%",
        "frontend_id": "LCR 188",
        "title_slug": "gu-piao-de-zui-da-li-run-lcof"
    },
    {
        "_id": "qiu-12n-lcof",
        "title_cn": "设计机械累加器",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "recursion",
            "brainteaser"
        ],
        "paid_only": false,
        "ac_rate": "85.7%",
        "frontend_id": "LCR 189",
        "title_slug": "qiu-12n-lcof"
    },
    {
        "_id": "er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",
        "title_cn": "二叉搜索树的最近公共祖先",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "LCR 193",
        "title_slug": "er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof"
    },
    {
        "_id": "er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",
        "title_cn": "二叉树的最近公共祖先",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.1%",
        "frontend_id": "LCR 194",
        "title_slug": "er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof"
    },
    {
        "_id": "kth-node-from-end-of-list-lcci",
        "title_cn": "返回倒数第 k 个节点",
        "difficulty": 1,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "77.6%",
        "frontend_id": "面试题 02.02",
        "title_slug": "kth-node-from-end-of-list-lcci"
    },
    {
        "_id": "partition-list-lcci",
        "title_cn": "分割链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "60.0%",
        "frontend_id": "面试题 02.04",
        "title_slug": "partition-list-lcci"
    },
    {
        "_id": "4ueAj6",
        "title_cn": "循环有序列表的插入",
        "difficulty": 2,
        "tags_q": [
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "33.4%",
        "frontend_id": "LCR 029",
        "title_slug": "4ueAj6"
    },
    {
        "_id": "word-break-ii",
        "title_cn": "单词拆分 II",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "memoization",
            "array",
            "hash-table",
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "58.7%",
        "frontend_id": "140",
        "title_slug": "word-break-ii"
    },
    {
        "_id": "count-of-smaller-numbers-after-self",
        "title_cn": "计算右侧小于当前元素的个数",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "43.7%",
        "frontend_id": "315",
        "title_slug": "count-of-smaller-numbers-after-self"
    },
    {
        "_id": "create-maximum-number",
        "title_cn": "拼接最大数",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "two-pointers",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "42.1%",
        "frontend_id": "321",
        "title_slug": "create-maximum-number"
    },
    {
        "_id": "power-of-three",
        "title_cn": "3 的幂",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "326",
        "title_slug": "power-of-three"
    },
    {
        "_id": "longest-increasing-path-in-a-matrix",
        "title_cn": "矩阵中的最长递增路径",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "52.1%",
        "frontend_id": "329",
        "title_slug": "longest-increasing-path-in-a-matrix"
    },
    {
        "_id": "power-of-four",
        "title_cn": "4的幂",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "53.3%",
        "frontend_id": "342",
        "title_slug": "power-of-four"
    },
    {
        "_id": "count-numbers-with-unique-digits",
        "title_cn": "统计各位数字都不同的数字个数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "60.7%",
        "frontend_id": "357",
        "title_slug": "count-numbers-with-unique-digits"
    },
    {
        "_id": "water-and-jug-problem",
        "title_cn": "水壶问题",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "43.3%",
        "frontend_id": "365",
        "title_slug": "water-and-jug-problem"
    },
    {
        "_id": "trapping-rain-water-ii",
        "title_cn": "接雨水 II",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "407",
        "title_slug": "trapping-rain-water-ii"
    },
    {
        "_id": "maximum-xor-of-two-numbers-in-an-array",
        "title_cn": "数组中两个数的最大异或值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "59.9%",
        "frontend_id": "421",
        "title_slug": "maximum-xor-of-two-numbers-in-an-array"
    },
    {
        "_id": "sliding-window-median",
        "title_cn": "滑动窗口中位数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.6%",
        "frontend_id": "480",
        "title_slug": "sliding-window-median"
    },
    {
        "_id": "predict-the-winner",
        "title_cn": "预测赢家",
        "difficulty": 2,
        "tags_q": [
            "recursion",
            "array",
            "math",
            "dynamic-programming",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "59.4%",
        "frontend_id": "486",
        "title_slug": "predict-the-winner"
    },
    {
        "_id": "binary-tree-tilt",
        "title_cn": "二叉树的坡度",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "563",
        "title_slug": "binary-tree-tilt"
    },
    {
        "_id": "subtree-of-another-tree",
        "title_cn": "另一棵树的子树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree",
            "string-matching",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "572",
        "title_slug": "subtree-of-another-tree"
    },
    {
        "_id": "longest-harmonious-subsequence",
        "title_cn": "最长和谐子序列",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "56.5%",
        "frontend_id": "594",
        "title_slug": "longest-harmonious-subsequence"
    },
    {
        "_id": "range-addition-ii",
        "title_cn": "区间加法 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "598",
        "title_slug": "range-addition-ii"
    },
    {
        "_id": "baseball-game",
        "title_cn": "棒球比赛",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "682",
        "title_slug": "baseball-game"
    },
    {
        "_id": "contain-virus",
        "title_cn": "隔离病毒",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "749",
        "title_slug": "contain-virus"
    },
    {
        "_id": "set-intersection-size-at-least-two",
        "title_cn": "设置交集大小至少为2",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "757",
        "title_slug": "set-intersection-size-at-least-two"
    },
    {
        "_id": "basic-calculator-iv",
        "title_cn": "基本计算器 IV",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "recursion",
            "hash-table",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.8%",
        "frontend_id": "770",
        "title_slug": "basic-calculator-iv"
    },
    {
        "_id": "rotated-digits",
        "title_cn": "旋转数字",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "788",
        "title_slug": "rotated-digits"
    },
    {
        "_id": "smallest-rotation-with-highest-score",
        "title_cn": "得分最高的最小轮调",
        "difficulty": 3,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "798",
        "title_slug": "smallest-rotation-with-highest-score"
    },
    {
        "_id": "race-car",
        "title_cn": "赛车",
        "difficulty": 3,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "45.3%",
        "frontend_id": "818",
        "title_slug": "race-car"
    },
    {
        "_id": "count-unique-characters-of-all-substrings-of-a-given-string",
        "title_cn": "统计子串中的唯一字符",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "828",
        "title_slug": "count-unique-characters-of-all-substrings-of-a-given-string"
    },
    {
        "_id": "new-21-game",
        "title_cn": "新 21 点",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "sliding-window",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "39.6%",
        "frontend_id": "837",
        "title_slug": "new-21-game"
    },
    {
        "_id": "shortest-path-visiting-all-nodes",
        "title_cn": "访问所有节点的最短路径",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "breadth-first-search",
            "graph",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "67.3%",
        "frontend_id": "847",
        "title_slug": "shortest-path-visiting-all-nodes"
    },
    {
        "_id": "smallest-subtree-with-all-the-deepest-nodes",
        "title_cn": "具有所有最深节点的最小子树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.7%",
        "frontend_id": "865",
        "title_slug": "smallest-subtree-with-all-the-deepest-nodes"
    },
    {
        "_id": "numbers-at-most-n-given-digit-set",
        "title_cn": "最大为 N 的数字组合",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "string",
            "binary-search",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.3%",
        "frontend_id": "902",
        "title_slug": "numbers-at-most-n-given-digit-set"
    },
    {
        "_id": "sort-array-by-parity-ii",
        "title_cn": "按奇偶排序数组 II",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.4%",
        "frontend_id": "922",
        "title_slug": "sort-array-by-parity-ii"
    },
    {
        "_id": "regions-cut-by-slashes",
        "title_cn": "由斜杠划分区域",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "74.3%",
        "frontend_id": "959",
        "title_slug": "regions-cut-by-slashes"
    },
    {
        "_id": "equal-rational-numbers",
        "title_cn": "相等的有理数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "972",
        "title_slug": "equal-rational-numbers"
    },
    {
        "_id": "closest-divisors",
        "title_cn": "最接近的因数",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "55.5%",
        "frontend_id": "1362",
        "title_slug": "closest-divisors"
    },
    {
        "_id": "ugly-number-iii",
        "title_cn": "丑数 III",
        "difficulty": 2,
        "tags_q": [
            "math",
            "binary-search",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "29.0%",
        "frontend_id": "1201",
        "title_slug": "ugly-number-iii"
    },
    {
        "_id": "watering-plants",
        "title_cn": "给植物浇水",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "77.5%",
        "frontend_id": "2079",
        "title_slug": "watering-plants"
    },
    {
        "_id": "path-with-maximum-probability",
        "title_cn": "概率最大的路径",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "41.6%",
        "frontend_id": "1514",
        "title_slug": "path-with-maximum-probability"
    },
    {
        "_id": "tiling-a-rectangle-with-the-fewest-squares",
        "title_cn": "铺瓷砖",
        "difficulty": 3,
        "tags_q": [
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "63.4%",
        "frontend_id": "1240",
        "title_slug": "tiling-a-rectangle-with-the-fewest-squares"
    },
    {
        "_id": "tuple-with-same-product",
        "title_cn": "同积元组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "1726",
        "title_slug": "tuple-with-same-product"
    },
    {
        "_id": "selling-pieces-of-wood",
        "title_cn": "卖木头块",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "65.2%",
        "frontend_id": "2312",
        "title_slug": "selling-pieces-of-wood"
    },
    {
        "_id": "minimum-path-cost-in-a-grid",
        "title_cn": "网格中的最小路径代价",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "2304",
        "title_slug": "minimum-path-cost-in-a-grid"
    },
    {
        "_id": "palindrome-partitioning-iii",
        "title_cn": "分割回文串 III",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "1278",
        "title_slug": "palindrome-partitioning-iii"
    },
    {
        "_id": "minimum-flips-to-make-a-or-b-equal-to-c",
        "title_cn": "或运算的最小翻转次数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "1318",
        "title_slug": "minimum-flips-to-make-a-or-b-equal-to-c"
    },
    {
        "_id": "maximum-students-taking-exam",
        "title_cn": "参加考试的最大学生数",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.8%",
        "frontend_id": "1349",
        "title_slug": "maximum-students-taking-exam"
    },
    {
        "_id": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
        "title_cn": "使网格图至少有一条有效路径的最小代价",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "61.0%",
        "frontend_id": "1368",
        "title_slug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid"
    },
    {
        "_id": "count-largest-group",
        "title_cn": "统计最大组的数目",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "66.6%",
        "frontend_id": "1399",
        "title_slug": "count-largest-group"
    },
    {
        "_id": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
        "title_cn": "两个盒子中球的颜色数相同的概率",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "backtracking",
            "combinatorics",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "61.3%",
        "frontend_id": "1467",
        "title_slug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls"
    },
    {
        "_id": "the-kth-factor-of-n",
        "title_cn": "n 的第 k 个因子",
        "difficulty": 2,
        "tags_q": [
            "math",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "1492",
        "title_slug": "the-kth-factor-of-n"
    },
    {
        "_id": "make-sum-divisible-by-p",
        "title_cn": "使数组和能被 P 整除",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.6%",
        "frontend_id": "1590",
        "title_slug": "make-sum-divisible-by-p"
    },
    {
        "_id": "minimum-moves-to-make-array-complementary",
        "title_cn": "使数组互补的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "42.8%",
        "frontend_id": "1674",
        "title_slug": "minimum-moves-to-make-array-complementary"
    },
    {
        "_id": "ways-to-split-array-into-three-subarrays",
        "title_cn": "将数组分成三个子数组的方案数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "28.9%",
        "frontend_id": "1712",
        "title_slug": "ways-to-split-array-into-three-subarrays"
    },
    {
        "_id": "building-boxes",
        "title_cn": "放置盒子",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "63.9%",
        "frontend_id": "1739",
        "title_slug": "building-boxes"
    },
    {
        "_id": "longest-nice-substring",
        "title_cn": "最长的美好子字符串",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "divide-and-conquer",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "66.8%",
        "frontend_id": "1763",
        "title_slug": "longest-nice-substring"
    },
    {
        "_id": "number-of-different-integers-in-a-string",
        "title_cn": "字符串中不同整数的数目",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "43.0%",
        "frontend_id": "1805",
        "title_slug": "number-of-different-integers-in-a-string"
    },
    {
        "_id": "minimum-interval-to-include-each-query",
        "title_cn": "包含每个查询的最小区间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "sorting",
            "line-sweep",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "52.2%",
        "frontend_id": "1851",
        "title_slug": "minimum-interval-to-include-each-query"
    },
    {
        "_id": "check-if-all-the-integers-in-a-range-are-covered",
        "title_cn": "检查是否区域内所有整数都被覆盖",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "59.0%",
        "frontend_id": "1893",
        "title_slug": "check-if-all-the-integers-in-a-range-are-covered"
    },
    {
        "_id": "process-tasks-using-servers",
        "title_cn": "使用服务器处理任务",
        "difficulty": 2,
        "tags_q": [
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "31.6%",
        "frontend_id": "1882",
        "title_slug": "process-tasks-using-servers"
    },
    {
        "_id": "minimum-absolute-difference-queries",
        "title_cn": "查询差绝对值的最小值",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "1906",
        "title_slug": "minimum-absolute-difference-queries"
    },
    {
        "_id": "minimum-total-space-wasted-with-k-resizing-operations",
        "title_cn": "K 次调整数组大小浪费的最小总空间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "1959",
        "title_slug": "minimum-total-space-wasted-with-k-resizing-operations"
    },
    {
        "_id": "minimum-number-of-swaps-to-make-the-string-balanced",
        "title_cn": "使字符串平衡的最小交换次数",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "1963",
        "title_slug": "minimum-number-of-swaps-to-make-the-string-balanced"
    },
    {
        "_id": "gcd-sort-of-an-array",
        "title_cn": "数组的最大公因数排序",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "math",
            "number-theory",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "46.2%",
        "frontend_id": "1998",
        "title_slug": "gcd-sort-of-an-array"
    },
    {
        "_id": "sum-of-k-mirror-numbers",
        "title_cn": "k 镜像数字的和",
        "difficulty": 3,
        "tags_q": [
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "44.2%",
        "frontend_id": "2081",
        "title_slug": "sum-of-k-mirror-numbers"
    },
    {
        "_id": "earliest-possible-day-of-full-bloom",
        "title_cn": "全部开花的最早一天",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "72.0%",
        "frontend_id": "2136",
        "title_slug": "earliest-possible-day-of-full-bloom"
    },
    {
        "_id": "minimum-time-to-finish-the-race",
        "title_cn": "完成比赛的最少时间",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "44.4%",
        "frontend_id": "2188",
        "title_slug": "minimum-time-to-finish-the-race"
    },
    {
        "_id": "maximum-trailing-zeros-in-a-cornered-path",
        "title_cn": "转角路径的乘积中最多能有几个尾随零",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "36.8%",
        "frontend_id": "2245",
        "title_slug": "maximum-trailing-zeros-in-a-cornered-path"
    },
    {
        "_id": "count-special-integers",
        "title_cn": "统计特殊整数",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "2376",
        "title_slug": "count-special-integers"
    },
    {
        "_id": "max-sum-of-a-pair-with-equal-sum-of-digits",
        "title_cn": "数位和相等数对的最大和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "2342",
        "title_slug": "max-sum-of-a-pair-with-equal-sum-of-digits"
    },
    {
        "_id": "shortest-distance-to-target-string-in-a-circular-array",
        "title_cn": "到目标字符串的最短距离",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "2515",
        "title_slug": "shortest-distance-to-target-string-in-a-circular-array"
    },
    {
        "_id": "count-the-number-of-good-subarrays",
        "title_cn": "统计好子数组的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.8%",
        "frontend_id": "2537",
        "title_slug": "count-the-number-of-good-subarrays"
    },
    {
        "_id": "check-knight-tour-configuration",
        "title_cn": "检查骑士巡视方案",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "57.9%",
        "frontend_id": "2596",
        "title_slug": "check-knight-tour-configuration"
    },
    {
        "_id": "find-the-maximum-divisibility-score",
        "title_cn": "找出可整除性得分最大的整数",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.2%",
        "frontend_id": "2644",
        "title_slug": "find-the-maximum-divisibility-score"
    },
    {
        "_id": "substring-xor-queries",
        "title_cn": "子字符串异或查询",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "2564",
        "title_slug": "substring-xor-queries"
    },
    {
        "_id": "minimize-the-total-price-of-the-trips",
        "title_cn": "最小化旅行的价格总和",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "graph",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "70.1%",
        "frontend_id": "2646",
        "title_slug": "minimize-the-total-price-of-the-trips"
    },
    {
        "_id": "movement-of-robots",
        "title_cn": "移动机器人",
        "difficulty": 2,
        "tags_q": [
            "brainteaser",
            "array",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "2731",
        "title_slug": "movement-of-robots"
    },
    {
        "_id": "minimize-string-length",
        "title_cn": "最小化字符串长度",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "72.8%",
        "frontend_id": "2716",
        "title_slug": "minimize-string-length"
    },
    {
        "_id": "ways-to-express-an-integer-as-sum-of-powers",
        "title_cn": "将一个数字表示成幂的和的方案数",
        "difficulty": 2,
        "tags_q": [
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "45.3%",
        "frontend_id": "2787",
        "title_slug": "ways-to-express-an-integer-as-sum-of-powers"
    },
    {
        "_id": "check-if-array-is-good",
        "title_cn": "检查数组是否是好的",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "2784",
        "title_slug": "check-if-array-is-good"
    },
    {
        "_id": "apply-operations-to-make-two-strings-equal",
        "title_cn": "执行操作使两个字符串相等",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "31.9%",
        "frontend_id": "2896",
        "title_slug": "apply-operations-to-make-two-strings-equal"
    },
    {
        "_id": "minimum-edge-weight-equilibrium-queries-in-a-tree",
        "title_cn": "边权重均等查询",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "graph",
            "array",
            "strongly-connected-component"
        ],
        "paid_only": false,
        "ac_rate": "61.4%",
        "frontend_id": "2846",
        "title_slug": "minimum-edge-weight-equilibrium-queries-in-a-tree"
    },
    {
        "_id": "minimum-moves-to-spread-stones-over-grid",
        "title_cn": "将石头分散到网格图的最少移动次数",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "42.6%",
        "frontend_id": "2850",
        "title_slug": "minimum-moves-to-spread-stones-over-grid"
    },
    {
        "_id": "apply-operations-to-maximize-frequency-score",
        "title_cn": "执行操作使频率分数最大",
        "difficulty": 3,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "2968",
        "title_slug": "apply-operations-to-maximize-frequency-score"
    },
    {
        "_id": "minimum-cost-to-make-array-equalindromic",
        "title_cn": "使数组成为等数数组的最小代价",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "23.2%",
        "frontend_id": "2967",
        "title_slug": "minimum-cost-to-make-array-equalindromic"
    },
    {
        "_id": "count-the-number-of-incremovable-subarrays-ii",
        "title_cn": "统计移除递增子数组的数目 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "2972",
        "title_slug": "count-the-number-of-incremovable-subarrays-ii"
    },
    {
        "_id": "find-polygon-with-the-largest-perimeter",
        "title_cn": "找到最大周长的多边形",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.1%",
        "frontend_id": "2971",
        "title_slug": "find-polygon-with-the-largest-perimeter"
    },
    {
        "_id": "minimum-moves-to-capture-the-queen",
        "title_cn": "捕获黑皇后需要的最少移动次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "22.6%",
        "frontend_id": "3001",
        "title_slug": "minimum-moves-to-capture-the-queen"
    },
    {
        "_id": "count-the-number-of-houses-at-a-certain-distance-i",
        "title_cn": "按距离统计房屋对数目 I",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "3015",
        "title_slug": "count-the-number-of-houses-at-a-certain-distance-i"
    },
    {
        "_id": "minimum-number-of-pushes-to-type-word-i",
        "title_cn": "输入单词需要的最少按键次数 I",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "70.4%",
        "frontend_id": "3014",
        "title_slug": "minimum-number-of-pushes-to-type-word-i"
    },
    {
        "_id": "minimum-number-of-pushes-to-type-word-ii",
        "title_cn": "输入单词需要的最少按键次数 II",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "77.2%",
        "frontend_id": "3016",
        "title_slug": "minimum-number-of-pushes-to-type-word-ii"
    },
    {
        "_id": "find-the-number-of-ways-to-place-people-ii",
        "title_cn": "人员站位的方案数 II",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.1%",
        "frontend_id": "3027",
        "title_slug": "find-the-number-of-ways-to-place-people-ii"
    },
    {
        "_id": "find-the-number-of-ways-to-place-people-i",
        "title_cn": "人员站位的方案数 I",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math",
            "enumeration",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.5%",
        "frontend_id": "3025",
        "title_slug": "find-the-number-of-ways-to-place-people-i"
    },
    {
        "_id": "earliest-second-to-mark-indices-ii",
        "title_cn": "标记所有下标的最早秒数 II",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "30.1%",
        "frontend_id": "3049",
        "title_slug": "earliest-second-to-mark-indices-ii"
    },
    {
        "_id": "number-of-subarrays-that-match-a-pattern-ii",
        "title_cn": "匹配模式数组的子数组数目 II",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "3036",
        "title_slug": "number-of-subarrays-that-match-a-pattern-ii"
    },
    {
        "_id": "find-if-array-can-be-sorted",
        "title_cn": "判断一个数组是否可以变为有序",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "3011",
        "title_slug": "find-if-array-can-be-sorted"
    },
    {
        "_id": "earliest-second-to-mark-indices-i",
        "title_cn": "标记所有下标的最早秒数 I",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "3048",
        "title_slug": "earliest-second-to-mark-indices-i"
    },
    {
        "_id": "minimum-time-to-revert-word-to-initial-state-ii",
        "title_cn": "将单词恢复初始状态所需的最短时间 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "39.4%",
        "frontend_id": "3031",
        "title_slug": "minimum-time-to-revert-word-to-initial-state-ii"
    },
    {
        "_id": "minimum-time-to-revert-word-to-initial-state-i",
        "title_cn": "将单词恢复初始状态所需的最短时间 I",
        "difficulty": 2,
        "tags_q": [
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "3029",
        "title_slug": "minimum-time-to-revert-word-to-initial-state-i"
    },
    {
        "_id": "maximize-consecutive-elements-in-an-array-after-modification",
        "title_cn": "修改数组后最大化数组中的连续元素数目",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "45.7%",
        "frontend_id": "3041",
        "title_slug": "maximize-consecutive-elements-in-an-array-after-modification"
    },
    {
        "_id": "find-the-maximum-number-of-elements-in-subset",
        "title_cn": "子集中元素的最大数量",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "28.3%",
        "frontend_id": "3020",
        "title_slug": "find-the-maximum-number-of-elements-in-subset"
    },
    {
        "_id": "find-beautiful-indices-in-the-given-array-ii",
        "title_cn": "找出数组中的美丽下标 II",
        "difficulty": 3,
        "tags_q": [
            "two-pointers",
            "string",
            "binary-search",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "29.2%",
        "frontend_id": "3008",
        "title_slug": "find-beautiful-indices-in-the-given-array-ii"
    },
    {
        "_id": "count-prefix-and-suffix-pairs-ii",
        "title_cn": "统计前后缀下标对 II",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "34.2%",
        "frontend_id": "3045",
        "title_slug": "count-prefix-and-suffix-pairs-ii"
    },
    {
        "_id": "mark-elements-on-array-by-performing-queries",
        "title_cn": "执行操作标记数组中的元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sorting",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "3080",
        "title_slug": "mark-elements-on-array-by-performing-queries"
    },
    {
        "_id": "find-the-maximum-sum-of-node-values",
        "title_cn": "最大节点价值之和",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "bit-manipulation",
            "tree",
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "52.6%",
        "frontend_id": "3068",
        "title_slug": "find-the-maximum-sum-of-node-values"
    },
    {
        "_id": "apply-operations-to-make-string-empty",
        "title_cn": "进行操作使字符串为空",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.1%",
        "frontend_id": "3039",
        "title_slug": "apply-operations-to-make-string-empty"
    },
    {
        "_id": "count-prefix-and-suffix-pairs-i",
        "title_cn": "统计前后缀下标对 I",
        "difficulty": 1,
        "tags_q": [
            "trie",
            "array",
            "string",
            "string-matching",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "3042",
        "title_slug": "count-prefix-and-suffix-pairs-i"
    },
    {
        "_id": "count-the-number-of-houses-at-a-certain-distance-ii",
        "title_cn": "按距离统计房屋对数目 II",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "31.4%",
        "frontend_id": "3017",
        "title_slug": "count-the-number-of-houses-at-a-certain-distance-ii"
    },
    {
        "_id": "ant-on-the-boundary",
        "title_cn": "边界上的蚂蚁",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "85.4%",
        "frontend_id": "3028",
        "title_slug": "ant-on-the-boundary"
    },
    {
        "_id": "maximum-strength-of-k-disjoint-subarrays",
        "title_cn": "K 个不相交子数组的最大能量值",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "41.7%",
        "frontend_id": "3077",
        "title_slug": "maximum-strength-of-k-disjoint-subarrays"
    },
    {
        "_id": "most-frequent-prime",
        "title_cn": "出现频率最高的质数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "counting",
            "enumeration",
            "matrix",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "3044",
        "title_slug": "most-frequent-prime"
    },
    {
        "_id": "maximum-palindromes-after-operations",
        "title_cn": "回文字符串的最大数量",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "54.9%",
        "frontend_id": "3035",
        "title_slug": "maximum-palindromes-after-operations"
    },
    {
        "_id": "maximum-number-of-operations-with-the-same-score-ii",
        "title_cn": "相同分数的最大操作数目 II",
        "difficulty": 2,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "34.2%",
        "frontend_id": "3040",
        "title_slug": "maximum-number-of-operations-with-the-same-score-ii"
    },
    {
        "_id": "maximum-number-of-operations-with-the-same-score-i",
        "title_cn": "相同分数的最大操作数目 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "3038",
        "title_slug": "maximum-number-of-operations-with-the-same-score-i"
    },
    {
        "_id": "type-of-triangle",
        "title_cn": "三角形类型",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "55.7%",
        "frontend_id": "3024",
        "title_slug": "type-of-triangle"
    },
    {
        "_id": "split-the-array",
        "title_cn": "分割数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "72.5%",
        "frontend_id": "3046",
        "title_slug": "split-the-array"
    },
    {
        "_id": "find-the-largest-area-of-square-inside-two-rectangles",
        "title_cn": "求交集区域内的最大正方形面积",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "43.7%",
        "frontend_id": "3047",
        "title_slug": "find-the-largest-area-of-square-inside-two-rectangles"
    },
    {
        "_id": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
        "title_cn": "在带权树网络中统计可连接服务器对数目",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "63.2%",
        "frontend_id": "3067",
        "title_slug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network"
    },
    {
        "_id": "minimum-moves-to-pick-k-ones",
        "title_cn": "拾起 K 个 1 需要的最少行动次数",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "25.1%",
        "frontend_id": "3086",
        "title_slug": "minimum-moves-to-pick-k-ones"
    },
    {
        "_id": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
        "title_cn": "执行操作使数据元素之和大于等于 K",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "math",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "49.7%",
        "frontend_id": "3091",
        "title_slug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k"
    },
    {
        "_id": "find-the-length-of-the-longest-common-prefix",
        "title_cn": "最长公共前缀的长度",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "39.6%",
        "frontend_id": "3043",
        "title_slug": "find-the-length-of-the-longest-common-prefix"
    },
    {
        "_id": "modify-the-matrix",
        "title_cn": "修改矩阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "79.2%",
        "frontend_id": "3033",
        "title_slug": "modify-the-matrix"
    },
    {
        "_id": "minimum-operations-to-exceed-threshold-value-i",
        "title_cn": "超过阈值的最少操作数 I",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "91.0%",
        "frontend_id": "3065",
        "title_slug": "minimum-operations-to-exceed-threshold-value-i"
    },
    {
        "_id": "minimum-operations-to-exceed-threshold-value-ii",
        "title_cn": "超过阈值的最少操作数 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "simulation",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "34.7%",
        "frontend_id": "3066",
        "title_slug": "minimum-operations-to-exceed-threshold-value-ii"
    },
    {
        "_id": "apple-redistribution-into-boxes",
        "title_cn": "重新分装苹果",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "76.6%",
        "frontend_id": "3074",
        "title_slug": "apple-redistribution-into-boxes"
    },
    {
        "_id": "minimum-operations-to-write-the-letter-y-on-a-grid",
        "title_cn": "在矩阵上写出字母 Y 所需的最少操作次数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "67.9%",
        "frontend_id": "3071",
        "title_slug": "minimum-operations-to-write-the-letter-y-on-a-grid"
    },
    {
        "_id": "count-substrings-starting-and-ending-with-given-character",
        "title_cn": "统计以给定字符开头和结尾的子字符串总数",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "52.8%",
        "frontend_id": "3084",
        "title_slug": "count-substrings-starting-and-ending-with-given-character"
    },
    {
        "_id": "count-submatrices-with-top-left-element-and-sum-less-than-k",
        "title_cn": "元素和小于等于 k 的子矩阵的数目",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "62.1%",
        "frontend_id": "3070",
        "title_slug": "count-submatrices-with-top-left-element-and-sum-less-than-k"
    },
    {
        "_id": "distribute-elements-into-two-arrays-i",
        "title_cn": "将元素分配到两个数组中 I",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "83.9%",
        "frontend_id": "3069",
        "title_slug": "distribute-elements-into-two-arrays-i"
    },
    {
        "_id": "maximum-length-substring-with-two-occurrences",
        "title_cn": "每个字符最多出现两次的最长子字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "3090",
        "title_slug": "maximum-length-substring-with-two-occurrences"
    },
    {
        "_id": "distribute-elements-into-two-arrays-ii",
        "title_cn": "将元素分配到两个数组中 II",
        "difficulty": 3,
        "tags_q": [
            "binary-indexed-tree",
            "segment-tree",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "37.5%",
        "frontend_id": "3072",
        "title_slug": "distribute-elements-into-two-arrays-ii"
    },
    {
        "_id": "maximize-happiness-of-selected-children",
        "title_cn": "幸福值最大化的选择方案",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "3075",
        "title_slug": "maximize-happiness-of-selected-children"
    },
    {
        "_id": "existence-of-a-substring-in-a-string-and-its-reverse",
        "title_cn": "字符串及其反转中是否存在同一子字符串",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.0%",
        "frontend_id": "3083",
        "title_slug": "existence-of-a-substring-in-a-string-and-its-reverse"
    },
    {
        "_id": "replace-question-marks-in-string-to-minimize-its-value",
        "title_cn": "替换字符串中的问号使分数最小",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "34.7%",
        "frontend_id": "3081",
        "title_slug": "replace-question-marks-in-string-to-minimize-its-value"
    },
    {
        "_id": "shortest-uncommon-substring-in-an-array",
        "title_cn": "数组中的最短非公共子字符串",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "3076",
        "title_slug": "shortest-uncommon-substring-in-an-array"
    },
    {
        "_id": "minimum-deletions-to-make-string-k-special",
        "title_cn": "成为 K 特殊字符串需要删除的最少字符数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "hash-table",
            "string",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "41.4%",
        "frontend_id": "3085",
        "title_slug": "minimum-deletions-to-make-string-k-special"
    },
    {
        "_id": "most-frequent-ids",
        "title_cn": "最高频率的 ID",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "ordered-set",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.0%",
        "frontend_id": "3092",
        "title_slug": "most-frequent-ids"
    },
    {
        "_id": "find-the-sum-of-encrypted-integers",
        "title_cn": "求出加密整数的和",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "80.6%",
        "frontend_id": "3079",
        "title_slug": "find-the-sum-of-encrypted-integers"
    },
    {
        "_id": "longest-common-suffix-queries",
        "title_cn": "最长公共后缀查询",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "33.1%",
        "frontend_id": "3093",
        "title_slug": "longest-common-suffix-queries"
    },
    {
        "_id": "deep-dark-fraction",
        "title_cn": "分式化简",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math",
            "number-theory",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "70.2%",
        "frontend_id": "LCP 02",
        "title_slug": "deep-dark-fraction"
    },
    {
        "_id": "programmable-robot",
        "title_cn": "机器人大冒险",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "23.5%",
        "frontend_id": "LCP 03",
        "title_slug": "programmable-robot"
    },
    {
        "_id": "guess-numbers",
        "title_cn": "猜数字",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "84.5%",
        "frontend_id": "LCP 01",
        "title_slug": "guess-numbers"
    },
    {
        "_id": "is-unique-lcci",
        "title_cn": "判定字符是否唯一",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "面试题 01.01",
        "title_slug": "is-unique-lcci"
    },
    {
        "_id": "check-permutation-lcci",
        "title_cn": "判定是否互为字符重排",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "面试题 01.02",
        "title_slug": "check-permutation-lcci"
    },
    {
        "_id": "string-to-url-lcci",
        "title_cn": "URL化",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "57.5%",
        "frontend_id": "面试题 01.03",
        "title_slug": "string-to-url-lcci"
    },
    {
        "_id": "compress-string-lcci",
        "title_cn": "字符串压缩",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "45.8%",
        "frontend_id": "面试题 01.06",
        "title_slug": "compress-string-lcci"
    },
    {
        "_id": "string-rotation-lcci",
        "title_cn": "字符串轮转",
        "difficulty": 1,
        "tags_q": [
            "string",
            "string-matching"
        ],
        "paid_only": false,
        "ac_rate": "53.8%",
        "frontend_id": "面试题 01.09",
        "title_slug": "string-rotation-lcci"
    },
    {
        "_id": "route-between-nodes-lcci",
        "title_cn": "节点间通路",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "面试题 04.01",
        "title_slug": "route-between-nodes-lcci"
    },
    {
        "_id": "minimum-height-tree-lcci",
        "title_cn": "最小高度树",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "array",
            "divide-and-conquer",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "79.0%",
        "frontend_id": "面试题 04.02",
        "title_slug": "minimum-height-tree-lcci"
    },
    {
        "_id": "list-of-depth-lcci",
        "title_cn": "特定深度节点链表",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "breadth-first-search",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "80.7%",
        "frontend_id": "面试题 04.03",
        "title_slug": "list-of-depth-lcci"
    },
    {
        "_id": "check-balance-lcci",
        "title_cn": "检查平衡性",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "59.9%",
        "frontend_id": "面试题 04.04",
        "title_slug": "check-balance-lcci"
    },
    {
        "_id": "legal-binary-search-tree-lcci",
        "title_cn": "合法二叉搜索树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "35.8%",
        "frontend_id": "面试题 04.05",
        "title_slug": "legal-binary-search-tree-lcci"
    },
    {
        "_id": "successor-lcci",
        "title_cn": "后继者",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.5%",
        "frontend_id": "面试题 04.06",
        "title_slug": "successor-lcci"
    },
    {
        "_id": "first-common-ancestor-lcci",
        "title_cn": "首个共同祖先",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "71.5%",
        "frontend_id": "面试题 04.08",
        "title_slug": "first-common-ancestor-lcci"
    },
    {
        "_id": "insert-into-bits-lcci",
        "title_cn": "插入",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "面试题 05.01",
        "title_slug": "insert-into-bits-lcci"
    },
    {
        "_id": "convert-integer-lcci",
        "title_cn": "整数转换",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "面试题 05.06",
        "title_slug": "convert-integer-lcci"
    },
    {
        "_id": "exchange-lcci",
        "title_cn": "配对交换",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "71.0%",
        "frontend_id": "面试题 05.07",
        "title_slug": "exchange-lcci"
    },
    {
        "_id": "closed-number-lcci",
        "title_cn": "下一个数",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation"
        ],
        "paid_only": false,
        "ac_rate": "35.3%",
        "frontend_id": "面试题 05.04",
        "title_slug": "closed-number-lcci"
    },
    {
        "_id": "palindrome-permutation-lcci",
        "title_cn": "回文排列",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "53.2%",
        "frontend_id": "面试题 01.04",
        "title_slug": "palindrome-permutation-lcci"
    },
    {
        "_id": "rotate-matrix-lcci",
        "title_cn": "旋转矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "72.3%",
        "frontend_id": "面试题 01.07",
        "title_slug": "rotate-matrix-lcci"
    },
    {
        "_id": "zero-matrix-lcci",
        "title_cn": "零矩阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "63.3%",
        "frontend_id": "面试题 01.08",
        "title_slug": "zero-matrix-lcci"
    },
    {
        "_id": "draw-line-lcci",
        "title_cn": "绘制直线",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "面试题 05.08",
        "title_slug": "draw-line-lcci"
    },
    {
        "_id": "three-steps-problem-lcci",
        "title_cn": "三步问题",
        "difficulty": 1,
        "tags_q": [
            "memoization",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "36.5%",
        "frontend_id": "面试题 08.01",
        "title_slug": "three-steps-problem-lcci"
    },
    {
        "_id": "power-set-lcci",
        "title_cn": "幂集",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "82.0%",
        "frontend_id": "面试题 08.04",
        "title_slug": "power-set-lcci"
    },
    {
        "_id": "recursive-mulitply-lcci",
        "title_cn": "递归乘法",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "recursion",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "面试题 08.05",
        "title_slug": "recursive-mulitply-lcci"
    },
    {
        "_id": "color-fill-lcci",
        "title_cn": "颜色填充",
        "difficulty": 1,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "55.9%",
        "frontend_id": "面试题 08.10",
        "title_slug": "color-fill-lcci"
    },
    {
        "_id": "pile-box-lcci",
        "title_cn": "堆箱子",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "51.1%",
        "frontend_id": "面试题 08.13",
        "title_slug": "pile-box-lcci"
    },
    {
        "_id": "binary-number-to-string-lcci",
        "title_cn": "二进制数转字符串",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "76.7%",
        "frontend_id": "面试题 05.02",
        "title_slug": "binary-number-to-string-lcci"
    },
    {
        "_id": "check-subtree-lcci",
        "title_cn": "检查子树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree",
            "string-matching",
            "hash-function"
        ],
        "paid_only": false,
        "ac_rate": "65.4%",
        "frontend_id": "面试题 04.10",
        "title_slug": "check-subtree-lcci"
    },
    {
        "_id": "reverse-bits-lcci",
        "title_cn": "翻转数位",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "37.7%",
        "frontend_id": "面试题 05.03",
        "title_slug": "reverse-bits-lcci"
    },
    {
        "_id": "coin-lcci",
        "title_cn": "硬币",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "49.7%",
        "frontend_id": "面试题 08.11",
        "title_slug": "coin-lcci"
    },
    {
        "_id": "search-rotate-array-lcci",
        "title_cn": "搜索旋转数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "面试题 10.03",
        "title_slug": "search-rotate-array-lcci"
    },
    {
        "_id": "eight-queens-lcci",
        "title_cn": "八皇后",
        "difficulty": 3,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "76.5%",
        "frontend_id": "面试题 08.12",
        "title_slug": "eight-queens-lcci"
    },
    {
        "_id": "magic-index-lcci",
        "title_cn": "魔术索引",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "67.4%",
        "frontend_id": "面试题 08.03",
        "title_slug": "magic-index-lcci"
    },
    {
        "_id": "permutation-i-lcci",
        "title_cn": "无重复字符串的排列组合",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "81.1%",
        "frontend_id": "面试题 08.07",
        "title_slug": "permutation-i-lcci"
    },
    {
        "_id": "sparse-array-search-lcci",
        "title_cn": "稀疏数组搜索",
        "difficulty": 1,
        "tags_q": [
            "array",
            "string",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "57.0%",
        "frontend_id": "面试题 10.05",
        "title_slug": "sparse-array-search-lcci"
    },
    {
        "_id": "swap-numbers-lcci",
        "title_cn": "交换数字",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "80.8%",
        "frontend_id": "面试题 16.01",
        "title_slug": "swap-numbers-lcci"
    },
    {
        "_id": "intersection-lcci",
        "title_cn": "交点",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "44.1%",
        "frontend_id": "面试题 16.03",
        "title_slug": "intersection-lcci"
    },
    {
        "_id": "tic-tac-toe-lcci",
        "title_cn": "井字游戏",
        "difficulty": 2,
        "tags_q": [
            "array",
            "counting",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "47.4%",
        "frontend_id": "面试题 16.04",
        "title_slug": "tic-tac-toe-lcci"
    },
    {
        "_id": "smallest-difference-lcci",
        "title_cn": "最小差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "42.6%",
        "frontend_id": "面试题 16.06",
        "title_slug": "smallest-difference-lcci"
    },
    {
        "_id": "permutation-ii-lcci",
        "title_cn": "有重复字符串的排列组合",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "面试题 08.08",
        "title_slug": "permutation-ii-lcci"
    },
    {
        "_id": "maximum-lcci",
        "title_cn": "最大数值",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "brainteaser",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "74.8%",
        "frontend_id": "面试题 16.07",
        "title_slug": "maximum-lcci"
    },
    {
        "_id": "living-people-lcci",
        "title_cn": "生存人数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "66.4%",
        "frontend_id": "面试题 16.10",
        "title_slug": "living-people-lcci"
    },
    {
        "_id": "diving-board-lcci",
        "title_cn": "跳水板",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "面试题 16.11",
        "title_slug": "diving-board-lcci"
    },
    {
        "_id": "bisect-squares-lcci",
        "title_cn": "平分正方形",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "44.1%",
        "frontend_id": "面试题 16.13",
        "title_slug": "bisect-squares-lcci"
    },
    {
        "_id": "best-line-lcci",
        "title_cn": "最佳直线",
        "difficulty": 2,
        "tags_q": [
            "geometry",
            "array",
            "hash-table",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "面试题 16.14",
        "title_slug": "best-line-lcci"
    },
    {
        "_id": "master-mind-lcci",
        "title_cn": "珠玑妙算",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "45.0%",
        "frontend_id": "面试题 16.15",
        "title_slug": "master-mind-lcci"
    },
    {
        "_id": "sub-sort-lcci",
        "title_cn": "部分排序",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "greedy",
            "array",
            "two-pointers",
            "sorting",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "面试题 16.16",
        "title_slug": "sub-sort-lcci"
    },
    {
        "_id": "contiguous-sequence-lcci",
        "title_cn": "连续数列",
        "difficulty": 1,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "面试题 16.17",
        "title_slug": "contiguous-sequence-lcci"
    },
    {
        "_id": "pattern-matching-lcci",
        "title_cn": "模式匹配",
        "difficulty": 2,
        "tags_q": [
            "math",
            "string",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "34.0%",
        "frontend_id": "面试题 16.18",
        "title_slug": "pattern-matching-lcci"
    },
    {
        "_id": "pond-sizes-lcci",
        "title_cn": "水域大小",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "66.3%",
        "frontend_id": "面试题 16.19",
        "title_slug": "pond-sizes-lcci"
    },
    {
        "_id": "one-away-lcci",
        "title_cn": "一次编辑",
        "difficulty": 2,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "34.9%",
        "frontend_id": "面试题 01.05",
        "title_slug": "one-away-lcci"
    },
    {
        "_id": "paths-with-sum-lcci",
        "title_cn": "求和路径",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "49.1%",
        "frontend_id": "面试题 04.12",
        "title_slug": "paths-with-sum-lcci"
    },
    {
        "_id": "bst-sequences-lcci",
        "title_cn": "二叉搜索树序列",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "binary-search-tree",
            "backtracking",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "49.0%",
        "frontend_id": "面试题 04.09",
        "title_slug": "bst-sequences-lcci"
    },
    {
        "_id": "robot-in-a-grid-lcci",
        "title_cn": "迷路的机器人",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "面试题 08.02",
        "title_slug": "robot-in-a-grid-lcci"
    },
    {
        "_id": "sorted-merge-lcci",
        "title_cn": "合并排序的数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "面试题 10.01",
        "title_slug": "sorted-merge-lcci"
    },
    {
        "_id": "peaks-and-valleys-lcci",
        "title_cn": "峰与谷",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.5%",
        "frontend_id": "面试题 10.11",
        "title_slug": "peaks-and-valleys-lcci"
    },
    {
        "_id": "hanota-lcci",
        "title_cn": "汉诺塔问题",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "64.4%",
        "frontend_id": "面试题 08.06",
        "title_slug": "hanota-lcci"
    },
    {
        "_id": "sorted-matrix-search-lcci",
        "title_cn": "排序矩阵查找",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "divide-and-conquer",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "面试题 10.09",
        "title_slug": "sorted-matrix-search-lcci"
    },
    {
        "_id": "factorial-zeros-lcci",
        "title_cn": "阶乘尾数",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "42.4%",
        "frontend_id": "面试题 16.05",
        "title_slug": "factorial-zeros-lcci"
    },
    {
        "_id": "english-int-lcci",
        "title_cn": "整数的英语表示",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "39.3%",
        "frontend_id": "面试题 16.08",
        "title_slug": "english-int-lcci"
    },
    {
        "_id": "binode-lcci",
        "title_cn": "BiNode",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "linked-list",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "63.9%",
        "frontend_id": "面试题 17.12",
        "title_slug": "binode-lcci"
    },
    {
        "_id": "re-space-lcci",
        "title_cn": "恢复空格",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "dynamic-programming",
            "hash-function",
            "rolling-hash"
        ],
        "paid_only": false,
        "ac_rate": "55.3%",
        "frontend_id": "面试题 17.13",
        "title_slug": "re-space-lcci"
    },
    {
        "_id": "smallest-k-lcci",
        "title_cn": "最小K个数",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "面试题 17.14",
        "title_slug": "smallest-k-lcci"
    },
    {
        "_id": "longest-word-lcci",
        "title_cn": "最长单词",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "面试题 17.15",
        "title_slug": "longest-word-lcci"
    },
    {
        "_id": "the-masseuse-lcci",
        "title_cn": "按摩师",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "面试题 17.16",
        "title_slug": "the-masseuse-lcci"
    },
    {
        "_id": "multi-search-lcci",
        "title_cn": "多次搜索",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string",
            "string-matching",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "面试题 17.17",
        "title_slug": "multi-search-lcci"
    },
    {
        "_id": "add-without-plus-lcci",
        "title_cn": "不用加号的加法",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "面试题 17.01",
        "title_slug": "add-without-plus-lcci"
    },
    {
        "_id": "calculator-lcci",
        "title_cn": "计算器",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "math",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "39.8%",
        "frontend_id": "面试题 16.26",
        "title_slug": "calculator-lcci"
    },
    {
        "_id": "volume-of-histogram-lcci",
        "title_cn": "直方图的水量",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "two-pointers",
            "dynamic-programming",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "63.7%",
        "frontend_id": "面试题 17.21",
        "title_slug": "volume-of-histogram-lcci"
    },
    {
        "_id": "word-transformer-lcci",
        "title_cn": "单词转换",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "hash-table",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "40.3%",
        "frontend_id": "面试题 17.22",
        "title_slug": "word-transformer-lcci"
    },
    {
        "_id": "boolean-evaluation-lcci",
        "title_cn": "布尔运算",
        "difficulty": 2,
        "tags_q": [
            "memoization",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.8%",
        "frontend_id": "面试题 08.14",
        "title_slug": "boolean-evaluation-lcci"
    },
    {
        "_id": "missing-number-lcci",
        "title_cn": "消失的数字",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table",
            "math",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "58.3%",
        "frontend_id": "面试题 17.04",
        "title_slug": "missing-number-lcci"
    },
    {
        "_id": "find-longest-subarray-lcci",
        "title_cn": " 字母与数字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "面试题 17.05",
        "title_slug": "find-longest-subarray-lcci"
    },
    {
        "_id": "number-of-2s-in-range-lcci",
        "title_cn": "2出现的次数",
        "difficulty": 3,
        "tags_q": [
            "recursion",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "50.6%",
        "frontend_id": "面试题 17.06",
        "title_slug": "number-of-2s-in-range-lcci"
    },
    {
        "_id": "baby-names-lcci",
        "title_cn": "婴儿名字",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "41.9%",
        "frontend_id": "面试题 17.07",
        "title_slug": "baby-names-lcci"
    },
    {
        "_id": "circus-tower-lcci",
        "title_cn": "马戏团人塔",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "28.5%",
        "frontend_id": "面试题 17.08",
        "title_slug": "circus-tower-lcci"
    },
    {
        "_id": "get-kth-magic-number-lcci",
        "title_cn": "第 k 个数",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "math",
            "dynamic-programming",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "55.8%",
        "frontend_id": "面试题 17.09",
        "title_slug": "get-kth-magic-number-lcci"
    },
    {
        "_id": "find-majority-element-lcci",
        "title_cn": "主要元素",
        "difficulty": 1,
        "tags_q": [
            "array",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "面试题 17.10",
        "title_slug": "find-majority-element-lcci"
    },
    {
        "_id": "find-closest-lcci",
        "title_cn": "单词距离",
        "difficulty": 2,
        "tags_q": [
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "73.0%",
        "frontend_id": "面试题 17.11",
        "title_slug": "find-closest-lcci"
    },
    {
        "_id": "group-anagrams-lcci",
        "title_cn": "变位词组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.4%",
        "frontend_id": "面试题 10.02",
        "title_slug": "group-anagrams-lcci"
    },
    {
        "_id": "pairs-with-sum-lcci",
        "title_cn": "数对和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "two-pointers",
            "counting",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.3%",
        "frontend_id": "面试题 16.24",
        "title_slug": "pairs-with-sum-lcci"
    },
    {
        "_id": "shortest-supersequence-lcci",
        "title_cn": "最短超串",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "44.5%",
        "frontend_id": "面试题 17.18",
        "title_slug": "shortest-supersequence-lcci"
    },
    {
        "_id": "missing-two-lcci",
        "title_cn": "消失的两个数字",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "面试题 17.19",
        "title_slug": "missing-two-lcci"
    },
    {
        "_id": "max-black-square-lcci",
        "title_cn": "最大黑方阵",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "38.1%",
        "frontend_id": "面试题 17.23",
        "title_slug": "max-black-square-lcci"
    },
    {
        "_id": "max-submatrix-lcci",
        "title_cn": "最大子矩阵",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "53.5%",
        "frontend_id": "面试题 17.24",
        "title_slug": "max-submatrix-lcci"
    },
    {
        "_id": "t9-lcci",
        "title_cn": "T9键盘",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "70.9%",
        "frontend_id": "面试题 16.20",
        "title_slug": "t9-lcci"
    },
    {
        "_id": "sum-swap-lcci",
        "title_cn": "交换和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "48.0%",
        "frontend_id": "面试题 16.21",
        "title_slug": "sum-swap-lcci"
    },
    {
        "_id": "word-rectangle-lcci",
        "title_cn": "单词矩阵",
        "difficulty": 3,
        "tags_q": [
            "trie",
            "array",
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "面试题 17.25",
        "title_slug": "word-rectangle-lcci"
    },
    {
        "_id": "langtons-ant-lcci",
        "title_cn": "兰顿蚂蚁",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "matrix",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "58.2%",
        "frontend_id": "面试题 16.22",
        "title_slug": "langtons-ant-lcci"
    },
    {
        "_id": "sparse-similarity-lcci",
        "title_cn": "稀疏相似度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "35.9%",
        "frontend_id": "面试题 17.26",
        "title_slug": "sparse-similarity-lcci"
    },
    {
        "_id": "na-ying-bi",
        "title_cn": "拿硬币",
        "difficulty": 1,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "85.0%",
        "frontend_id": "LCP 06",
        "title_slug": "na-ying-bi"
    },
    {
        "_id": "ju-qing-hong-fa-shi-jian",
        "title_cn": "剧情触发时间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "33.6%",
        "frontend_id": "LCP 08",
        "title_slug": "ju-qing-hong-fa-shi-jian"
    },
    {
        "_id": "er94lq",
        "title_cn": "魔术排列",
        "difficulty": 2,
        "tags_q": [
            "queue",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "37.5%",
        "frontend_id": "LCP 23",
        "title_slug": "er94lq"
    },
    {
        "_id": "qie-fen-shu-zu",
        "title_cn": "切分数组",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "dynamic-programming",
            "number-theory"
        ],
        "paid_only": false,
        "ac_rate": "24.5%",
        "frontend_id": "LCP 14",
        "title_slug": "qie-fen-shu-zu"
    },
    {
        "_id": "er-cha-shu-ren-wu-diao-du",
        "title_cn": "二叉树任务调度",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "62.3%",
        "frontend_id": "LCP 10",
        "title_slug": "er-cha-shu-ren-wu-diao-du"
    },
    {
        "_id": "chuan-di-xin-xi",
        "title_cn": "传递信息",
        "difficulty": 1,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "75.2%",
        "frontend_id": "LCP 07",
        "title_slug": "chuan-di-xin-xi"
    },
    {
        "_id": "you-le-yuan-de-you-lan-ji-hua",
        "title_cn": "游乐园的游览计划",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "geometry",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "36.0%",
        "frontend_id": "LCP 16",
        "title_slug": "you-le-yuan-de-you-lan-ji-hua"
    },
    {
        "_id": "qi-wang-ge-shu-tong-ji",
        "title_cn": "期望个数统计",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "math",
            "probability-and-statistics"
        ],
        "paid_only": false,
        "ac_rate": "72.8%",
        "frontend_id": "LCP 11",
        "title_slug": "qi-wang-ge-shu-tong-ji"
    },
    {
        "_id": "xiao-zhang-shua-ti-ji-hua",
        "title_cn": "小张刷题计划",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "43.8%",
        "frontend_id": "LCP 12",
        "title_slug": "xiao-zhang-shua-ti-ji-hua"
    },
    {
        "_id": "you-le-yuan-de-mi-gong",
        "title_cn": "游乐园的迷宫",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "62.9%",
        "frontend_id": "LCP 15",
        "title_slug": "you-le-yuan-de-mi-gong"
    },
    {
        "_id": "er-cha-shu-ran-se-UGC",
        "title_cn": "二叉树染色",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "57.2%",
        "frontend_id": "LCP 34",
        "title_slug": "er-cha-shu-ran-se-UGC"
    },
    {
        "_id": "zui-xiao-tiao-yue-ci-shu",
        "title_cn": "最小跳跃次数",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "segment-tree",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "32.1%",
        "frontend_id": "LCP 09",
        "title_slug": "zui-xiao-tiao-yue-ci-shu"
    },
    {
        "_id": "zui-xiao-ju-xing-mian-ji",
        "title_cn": "最小矩形面积",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "geometry",
            "array",
            "math",
            "combinatorics",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "25.0%",
        "frontend_id": "LCP 37",
        "title_slug": "zui-xiao-ju-xing-mian-ji"
    },
    {
        "_id": "xun-bao",
        "title_cn": "寻宝",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "bitmask",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "59.3%",
        "frontend_id": "LCP 13",
        "title_slug": "xun-bao"
    },
    {
        "_id": "UlBDOe",
        "title_cn": "秋叶收藏集",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "51.7%",
        "frontend_id": "LCP 19",
        "title_slug": "UlBDOe"
    },
    {
        "_id": "5TxKeK",
        "title_cn": "数字游戏",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "LCP 24",
        "title_slug": "5TxKeK"
    },
    {
        "_id": "hSRGyL",
        "title_cn": "导航装置",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "37.1%",
        "frontend_id": "LCP 26",
        "title_slug": "hSRGyL"
    },
    {
        "_id": "meChtZ",
        "title_cn": "快速公交",
        "difficulty": 3,
        "tags_q": [
            "memoization",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "36.6%",
        "frontend_id": "LCP 20",
        "title_slug": "meChtZ"
    },
    {
        "_id": "Za25hA",
        "title_cn": "追逐游戏",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "39.3%",
        "frontend_id": "LCP 21",
        "title_slug": "Za25hA"
    },
    {
        "_id": "Uh984O",
        "title_cn": "古董键盘",
        "difficulty": 3,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "38.3%",
        "frontend_id": "LCP 25",
        "title_slug": "Uh984O"
    },
    {
        "_id": "nGK0Fy",
        "title_cn": "速算机器人",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "LCP 17",
        "title_slug": "nGK0Fy"
    },
    {
        "_id": "ccw6C7",
        "title_cn": "黑白方格画",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "35.3%",
        "frontend_id": "LCP 22",
        "title_slug": "ccw6C7"
    },
    {
        "_id": "2vYnGI",
        "title_cn": "早餐组合",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "30.7%",
        "frontend_id": "LCP 18",
        "title_slug": "2vYnGI"
    },
    {
        "_id": "4xy4Wx",
        "title_cn": "采购方案",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "32.3%",
        "frontend_id": "LCP 28",
        "title_slug": "4xy4Wx"
    },
    {
        "_id": "SNJvJP",
        "title_cn": "乐团站位",
        "difficulty": 2,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "21.3%",
        "frontend_id": "LCP 29",
        "title_slug": "SNJvJP"
    },
    {
        "_id": "Db3wC1",
        "title_cn": "变换的迷宫",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "29.9%",
        "frontend_id": "LCP 31",
        "title_slug": "Db3wC1"
    },
    {
        "_id": "t3fKg1",
        "title_cn": "批量处理任务",
        "difficulty": 3,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "42.0%",
        "frontend_id": "LCP 32",
        "title_slug": "t3fKg1"
    },
    {
        "_id": "DFPeFJ",
        "title_cn": "电动车游城市",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "49.2%",
        "frontend_id": "LCP 35",
        "title_slug": "DFPeFJ"
    },
    {
        "_id": "o8SXZn",
        "title_cn": "蓄水",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "34.8%",
        "frontend_id": "LCP 33",
        "title_slug": "o8SXZn"
    },
    {
        "_id": "Up5XYM",
        "title_cn": "最多牌组数",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "34.4%",
        "frontend_id": "LCP 36",
        "title_slug": "Up5XYM"
    },
    {
        "_id": "7rLGCR",
        "title_cn": "守卫城堡",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "LCP 38",
        "title_slug": "7rLGCR"
    },
    {
        "_id": "p0NxJO",
        "title_cn": "魔塔游戏",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "46.1%",
        "frontend_id": "LCP 30",
        "title_slug": "p0NxJO"
    },
    {
        "_id": "Ju9Xwi",
        "title_cn": "下载插件",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "math",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "53.6%",
        "frontend_id": "LCS 01",
        "title_slug": "Ju9Xwi"
    },
    {
        "_id": "WqXACV",
        "title_cn": "完成一半题目",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "hash-table",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "LCS 02",
        "title_slug": "WqXACV"
    },
    {
        "_id": "YesdPw",
        "title_cn": "主题空间",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "41.2%",
        "frontend_id": "LCS 03",
        "title_slug": "YesdPw"
    },
    {
        "_id": "xoh6Oh",
        "title_cn": "两数相除",
        "difficulty": 1,
        "tags_q": [
            "math"
        ],
        "paid_only": false,
        "ac_rate": "21.2%",
        "frontend_id": "LCR 001",
        "title_slug": "xoh6Oh"
    },
    {
        "_id": "Ygoe9J",
        "title_cn": "组合总和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "80.0%",
        "frontend_id": "LCR 081",
        "title_slug": "Ygoe9J"
    },
    {
        "_id": "w3tCBm",
        "title_cn": "比特位计数",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "78.1%",
        "frontend_id": "LCR 003",
        "title_slug": "w3tCBm"
    },
    {
        "_id": "JFETK5",
        "title_cn": "二进制求和",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "53.7%",
        "frontend_id": "LCR 002",
        "title_slug": "JFETK5"
    },
    {
        "_id": "4sjJUc",
        "title_cn": "组合总和 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "65.7%",
        "frontend_id": "LCR 082",
        "title_slug": "4sjJUc"
    },
    {
        "_id": "WGki4K",
        "title_cn": "只出现一次的数字 II",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "70.8%",
        "frontend_id": "LCR 004",
        "title_slug": "WGki4K"
    },
    {
        "_id": "VvJkup",
        "title_cn": "全排列",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "83.8%",
        "frontend_id": "LCR 083",
        "title_slug": "VvJkup"
    },
    {
        "_id": "7p8L0Z",
        "title_cn": "全排列 II ",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "68.9%",
        "frontend_id": "LCR 084",
        "title_slug": "7p8L0Z"
    },
    {
        "_id": "aseY1I",
        "title_cn": "最大单词长度乘积",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.2%",
        "frontend_id": "LCR 005",
        "title_slug": "aseY1I"
    },
    {
        "_id": "kLl5u1",
        "title_cn": "两数之和 II - 输入有序数组",
        "difficulty": 1,
        "tags_q": [
            "array",
            "two-pointers",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "67.2%",
        "frontend_id": "LCR 006",
        "title_slug": "kLl5u1"
    },
    {
        "_id": "IDBivT",
        "title_cn": "括号生成",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "84.4%",
        "frontend_id": "LCR 085",
        "title_slug": "IDBivT"
    },
    {
        "_id": "1fGaJU",
        "title_cn": "三数之和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "two-pointers",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "43.4%",
        "frontend_id": "LCR 007",
        "title_slug": "1fGaJU"
    },
    {
        "_id": "M99OJA",
        "title_cn": "分割回文串",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "75.1%",
        "frontend_id": "LCR 086",
        "title_slug": "M99OJA"
    },
    {
        "_id": "0on3uN",
        "title_cn": "复原 IP 地址",
        "difficulty": 2,
        "tags_q": [
            "string",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "63.6%",
        "frontend_id": "LCR 087",
        "title_slug": "0on3uN"
    },
    {
        "_id": "2VG8Kg",
        "title_cn": "长度最小的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.3%",
        "frontend_id": "LCR 008",
        "title_slug": "2VG8Kg"
    },
    {
        "_id": "GzCJIP",
        "title_cn": "使用最小花费爬楼梯",
        "difficulty": 1,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "71.4%",
        "frontend_id": "LCR 088",
        "title_slug": "GzCJIP"
    },
    {
        "_id": "ZVAVXX",
        "title_cn": "乘积小于 K 的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "LCR 009",
        "title_slug": "ZVAVXX"
    },
    {
        "_id": "Gu0c2T",
        "title_cn": "打家劫舍",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "59.5%",
        "frontend_id": "LCR 089",
        "title_slug": "Gu0c2T"
    },
    {
        "_id": "QTMn0o",
        "title_cn": "和为 K 的子数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "43.2%",
        "frontend_id": "LCR 010",
        "title_slug": "QTMn0o"
    },
    {
        "_id": "A1NYOS",
        "title_cn": "连续数组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "54.8%",
        "frontend_id": "LCR 011",
        "title_slug": "A1NYOS"
    },
    {
        "_id": "tvdfij",
        "title_cn": "寻找数组的中心下标",
        "difficulty": 1,
        "tags_q": [
            "array",
            "prefix-sum"
        ],
        "paid_only": false,
        "ac_rate": "67.5%",
        "frontend_id": "LCR 012",
        "title_slug": "tvdfij"
    },
    {
        "_id": "MPnaiL",
        "title_cn": "字符串的排列",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "two-pointers",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "51.3%",
        "frontend_id": "LCR 014",
        "title_slug": "MPnaiL"
    },
    {
        "_id": "VabMRr",
        "title_cn": "找到字符串中所有字母异位词",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "61.3%",
        "frontend_id": "LCR 015",
        "title_slug": "VabMRr"
    },
    {
        "_id": "wtcaE1",
        "title_cn": "无重复字符的最长子串",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "47.5%",
        "frontend_id": "LCR 016",
        "title_slug": "wtcaE1"
    },
    {
        "_id": "M1oyTv",
        "title_cn": "最小覆盖子串",
        "difficulty": 3,
        "tags_q": [
            "hash-table",
            "string",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "50.9%",
        "frontend_id": "LCR 017",
        "title_slug": "M1oyTv"
    },
    {
        "_id": "XltzEq",
        "title_cn": "验证回文串",
        "difficulty": 1,
        "tags_q": [
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.4%",
        "frontend_id": "LCR 018",
        "title_slug": "XltzEq"
    },
    {
        "_id": "RQku0D",
        "title_cn": "验证回文串 II",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "two-pointers",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "45.3%",
        "frontend_id": "LCR 019",
        "title_slug": "RQku0D"
    },
    {
        "_id": "a7VOhD",
        "title_cn": "回文子串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "LCR 020",
        "title_slug": "a7VOhD"
    },
    {
        "_id": "SLwz0R",
        "title_cn": "删除链表的倒数第 N 个结点",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "55.2%",
        "frontend_id": "LCR 021",
        "title_slug": "SLwz0R"
    },
    {
        "_id": "c32eOV",
        "title_cn": "环形链表 II",
        "difficulty": 2,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "55.7%",
        "frontend_id": "LCR 022",
        "title_slug": "c32eOV"
    },
    {
        "_id": "3u1WK4",
        "title_cn": "相交链表",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "68.5%",
        "frontend_id": "LCR 023",
        "title_slug": "3u1WK4"
    },
    {
        "_id": "UHnkqh",
        "title_cn": "反转链表",
        "difficulty": 1,
        "tags_q": [
            "recursion",
            "linked-list"
        ],
        "paid_only": false,
        "ac_rate": "75.1%",
        "frontend_id": "LCR 024",
        "title_slug": "UHnkqh"
    },
    {
        "_id": "lMSNwu",
        "title_cn": "两数相加 II",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "linked-list",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "58.1%",
        "frontend_id": "LCR 025",
        "title_slug": "lMSNwu"
    },
    {
        "_id": "LGjMqU",
        "title_cn": "重排链表",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "65.3%",
        "frontend_id": "LCR 026",
        "title_slug": "LGjMqU"
    },
    {
        "_id": "aMhZSa",
        "title_cn": "回文链表",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "recursion",
            "linked-list",
            "two-pointers"
        ],
        "paid_only": false,
        "ac_rate": "60.3%",
        "frontend_id": "LCR 027",
        "title_slug": "aMhZSa"
    },
    {
        "_id": "Qv1Da2",
        "title_cn": "扁平化多级双向链表",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "linked-list",
            "doubly-linked-list"
        ],
        "paid_only": false,
        "ac_rate": "60.2%",
        "frontend_id": "LCR 028",
        "title_slug": "Qv1Da2"
    },
    {
        "_id": "PzWKhm",
        "title_cn": "打家劫舍 II",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.9%",
        "frontend_id": "LCR 090",
        "title_slug": "PzWKhm"
    },
    {
        "_id": "JEj789",
        "title_cn": "粉刷房子",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "77.1%",
        "frontend_id": "LCR 091",
        "title_slug": "JEj789"
    },
    {
        "_id": "cyJERH",
        "title_cn": "将字符串翻转到单调递增",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "68.0%",
        "frontend_id": "LCR 092",
        "title_slug": "cyJERH"
    },
    {
        "_id": "Q91FMA",
        "title_cn": "最长的斐波那契子序列的长度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "57.4%",
        "frontend_id": "LCR 093",
        "title_slug": "Q91FMA"
    },
    {
        "_id": "omKAoA",
        "title_cn": "分割回文串 II",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.8%",
        "frontend_id": "LCR 094",
        "title_slug": "omKAoA"
    },
    {
        "_id": "dKk3P7",
        "title_cn": "有效的字母异位词",
        "difficulty": 1,
        "tags_q": [
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "LCR 032",
        "title_slug": "dKk3P7"
    },
    {
        "_id": "qJnOS7",
        "title_cn": "最长公共子序列",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "64.8%",
        "frontend_id": "LCR 095",
        "title_slug": "qJnOS7"
    },
    {
        "_id": "sfvd7V",
        "title_cn": "字母异位词分组",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "74.7%",
        "frontend_id": "LCR 033",
        "title_slug": "sfvd7V"
    },
    {
        "_id": "lwyVBB",
        "title_cn": "验证外星语词典",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.1%",
        "frontend_id": "LCR 034",
        "title_slug": "lwyVBB"
    },
    {
        "_id": "IY6buf",
        "title_cn": "交错字符串",
        "difficulty": 2,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.8%",
        "frontend_id": "LCR 096",
        "title_slug": "IY6buf"
    },
    {
        "_id": "569nqc",
        "title_cn": "最小时间差",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "string",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "66.0%",
        "frontend_id": "LCR 035",
        "title_slug": "569nqc"
    },
    {
        "_id": "8Zf90G",
        "title_cn": "逆波兰表达式求值",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "54.7%",
        "frontend_id": "LCR 036",
        "title_slug": "8Zf90G"
    },
    {
        "_id": "XagZNi",
        "title_cn": "行星碰撞",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "45.4%",
        "frontend_id": "LCR 037",
        "title_slug": "XagZNi"
    },
    {
        "_id": "iIQa4I",
        "title_cn": "每日温度",
        "difficulty": 2,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "75.6%",
        "frontend_id": "LCR 038",
        "title_slug": "iIQa4I"
    },
    {
        "_id": "0ynMMM",
        "title_cn": "柱状图中最大的矩形",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "LCR 039",
        "title_slug": "0ynMMM"
    },
    {
        "_id": "PLYXKQ",
        "title_cn": "最大矩形",
        "difficulty": 3,
        "tags_q": [
            "stack",
            "array",
            "dynamic-programming",
            "matrix",
            "monotonic-stack"
        ],
        "paid_only": false,
        "ac_rate": "58.5%",
        "frontend_id": "LCR 040",
        "title_slug": "PLYXKQ"
    },
    {
        "_id": "YaVDxD",
        "title_cn": "目标和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "LCR 102",
        "title_slug": "YaVDxD"
    },
    {
        "_id": "gaM7Ch",
        "title_cn": "零钱兑换",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "LCR 103",
        "title_slug": "gaM7Ch"
    },
    {
        "_id": "D0F0SV",
        "title_cn": "组合总和 Ⅳ",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "56.7%",
        "frontend_id": "LCR 104",
        "title_slug": "D0F0SV"
    },
    {
        "_id": "ZL6zAn",
        "title_cn": "岛屿的最大面积",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "68.8%",
        "frontend_id": "LCR 105",
        "title_slug": "ZL6zAn"
    },
    {
        "_id": "vEAB3K",
        "title_cn": "判断二分图",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "55.4%",
        "frontend_id": "LCR 106",
        "title_slug": "vEAB3K"
    },
    {
        "_id": "2bCMpM",
        "title_cn": "01 矩阵",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "50.4%",
        "frontend_id": "LCR 107",
        "title_slug": "2bCMpM"
    },
    {
        "_id": "hPov7L",
        "title_cn": "在每个树行中找最大值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "64.6%",
        "frontend_id": "LCR 044",
        "title_slug": "hPov7L"
    },
    {
        "_id": "LwUNpT",
        "title_cn": "找树左下角的值",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "78.9%",
        "frontend_id": "LCR 045",
        "title_slug": "LwUNpT"
    },
    {
        "_id": "WNC0Lk",
        "title_cn": "二叉树的右视图",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "70.0%",
        "frontend_id": "LCR 046",
        "title_slug": "WNC0Lk"
    },
    {
        "_id": "om3reC",
        "title_cn": "单词接龙",
        "difficulty": 3,
        "tags_q": [
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "58.9%",
        "frontend_id": "LCR 108",
        "title_slug": "om3reC"
    },
    {
        "_id": "pOCWxh",
        "title_cn": "二叉树剪枝",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "67.9%",
        "frontend_id": "LCR 047",
        "title_slug": "pOCWxh"
    },
    {
        "_id": "zlDJc7",
        "title_cn": "打开转盘锁",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "56.9%",
        "frontend_id": "LCR 109",
        "title_slug": "zlDJc7"
    },
    {
        "_id": "bP4bmD",
        "title_cn": "所有可能的路径",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "80.9%",
        "frontend_id": "LCR 110",
        "title_slug": "bP4bmD"
    },
    {
        "_id": "3Etpl5",
        "title_cn": "求根节点到叶节点数字之和",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "LCR 049",
        "title_slug": "3Etpl5"
    },
    {
        "_id": "6eUYwP",
        "title_cn": "路径总和 III",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "49.8%",
        "frontend_id": "LCR 050",
        "title_slug": "6eUYwP"
    },
    {
        "_id": "fpTFWP",
        "title_cn": "矩阵中的最长递增路径",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "57.6%",
        "frontend_id": "LCR 112",
        "title_slug": "fpTFWP"
    },
    {
        "_id": "jC7MId",
        "title_cn": "二叉树中的最大路径和",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "LCR 051",
        "title_slug": "jC7MId"
    },
    {
        "_id": "QA2IGt",
        "title_cn": "课程表 II",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort"
        ],
        "paid_only": false,
        "ac_rate": "56.4%",
        "frontend_id": "LCR 113",
        "title_slug": "QA2IGt"
    },
    {
        "_id": "NYBBNL",
        "title_cn": "递增顺序搜索树",
        "difficulty": 1,
        "tags_q": [
            "stack",
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "73.3%",
        "frontend_id": "LCR 052",
        "title_slug": "NYBBNL"
    },
    {
        "_id": "Jf1JuT",
        "title_cn": "火星词典",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "array",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "51.0%",
        "frontend_id": "LCR 114",
        "title_slug": "Jf1JuT"
    },
    {
        "_id": "P5rCT8",
        "title_cn": "二叉搜索树中的中序后继",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "63.0%",
        "frontend_id": "LCR 053",
        "title_slug": "P5rCT8"
    },
    {
        "_id": "ur2n8P",
        "title_cn": "序列重建",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "topological-sort",
            "array"
        ],
        "paid_only": false,
        "ac_rate": "51.4%",
        "frontend_id": "LCR 115",
        "title_slug": "ur2n8P"
    },
    {
        "_id": "w6cpku",
        "title_cn": "把二叉搜索树转换为累加树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "binary-search-tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "85.5%",
        "frontend_id": "LCR 054",
        "title_slug": "w6cpku"
    },
    {
        "_id": "H6lPxb",
        "title_cn": "相似字符串组",
        "difficulty": 3,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "61.9%",
        "frontend_id": "LCR 117",
        "title_slug": "H6lPxb"
    },
    {
        "_id": "7LpjUW",
        "title_cn": "冗余连接",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "LCR 118",
        "title_slug": "7LpjUW"
    },
    {
        "_id": "opLdQZ",
        "title_cn": "两数之和 IV - 输入二叉搜索树",
        "difficulty": 1,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "73.6%",
        "frontend_id": "LCR 056",
        "title_slug": "opLdQZ"
    },
    {
        "_id": "WhsWhI",
        "title_cn": "最长连续序列",
        "difficulty": 2,
        "tags_q": [
            "union-find",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "LCR 119",
        "title_slug": "WhsWhI"
    },
    {
        "_id": "7WqeDu",
        "title_cn": "存在重复元素 III",
        "difficulty": 2,
        "tags_q": [
            "array",
            "bucket-sort",
            "ordered-set",
            "sorting",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "34.5%",
        "frontend_id": "LCR 057",
        "title_slug": "7WqeDu"
    },
    {
        "_id": "g5c51o",
        "title_cn": "前 K 个高频元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "hash-table",
            "divide-and-conquer",
            "bucket-sort",
            "counting",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "68.1%",
        "frontend_id": "LCR 060",
        "title_slug": "g5c51o"
    },
    {
        "_id": "qn8gGX",
        "title_cn": "查找和最小的 K 对数字",
        "difficulty": 2,
        "tags_q": [
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "53.1%",
        "frontend_id": "LCR 061",
        "title_slug": "qn8gGX"
    },
    {
        "_id": "UhWRSj",
        "title_cn": "单词替换",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "71.1%",
        "frontend_id": "LCR 063",
        "title_slug": "UhWRSj"
    },
    {
        "_id": "iSwD2y",
        "title_cn": "单词的压缩编码",
        "difficulty": 2,
        "tags_q": [
            "trie",
            "array",
            "hash-table",
            "string"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "LCR 065",
        "title_slug": "iSwD2y"
    },
    {
        "_id": "ms70jA",
        "title_cn": "数组中两个数的最大异或值",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "trie",
            "array",
            "hash-table"
        ],
        "paid_only": false,
        "ac_rate": "65.5%",
        "frontend_id": "LCR 067",
        "title_slug": "ms70jA"
    },
    {
        "_id": "N6YdxV",
        "title_cn": "搜索插入位置",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "48.5%",
        "frontend_id": "LCR 068",
        "title_slug": "N6YdxV"
    },
    {
        "_id": "B1IidL",
        "title_cn": "山脉数组的峰顶索引",
        "difficulty": 1,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "70.8%",
        "frontend_id": "LCR 069",
        "title_slug": "B1IidL"
    },
    {
        "_id": "skFtm2",
        "title_cn": "有序数组中的单一元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "60.9%",
        "frontend_id": "LCR 070",
        "title_slug": "skFtm2"
    },
    {
        "_id": "cuyjEf",
        "title_cn": "按权重随机选择",
        "difficulty": 2,
        "tags_q": [
            "array",
            "math",
            "binary-search",
            "prefix-sum",
            "randomized"
        ],
        "paid_only": false,
        "ac_rate": "50.2%",
        "frontend_id": "LCR 071",
        "title_slug": "cuyjEf"
    },
    {
        "_id": "jJ0w9p",
        "title_cn": "x 的平方根",
        "difficulty": 1,
        "tags_q": [
            "math",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "42.9%",
        "frontend_id": "LCR 072",
        "title_slug": "jJ0w9p"
    },
    {
        "_id": "nZZqjQ",
        "title_cn": "爱吃香蕉的狒狒",
        "difficulty": 2,
        "tags_q": [
            "array",
            "binary-search"
        ],
        "paid_only": false,
        "ac_rate": "53.4%",
        "frontend_id": "LCR 073",
        "title_slug": "nZZqjQ"
    },
    {
        "_id": "SsGoHC",
        "title_cn": "合并区间",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "56.0%",
        "frontend_id": "LCR 074",
        "title_slug": "SsGoHC"
    },
    {
        "_id": "0H97ZC",
        "title_cn": "数组的相对排序",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting-sort",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "69.4%",
        "frontend_id": "LCR 075",
        "title_slug": "0H97ZC"
    },
    {
        "_id": "xx4gT2",
        "title_cn": "数组中的第 K 个最大元素",
        "difficulty": 2,
        "tags_q": [
            "array",
            "divide-and-conquer",
            "quickselect",
            "sorting",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "65.6%",
        "frontend_id": "LCR 076",
        "title_slug": "xx4gT2"
    },
    {
        "_id": "7WHec2",
        "title_cn": "排序链表",
        "difficulty": 2,
        "tags_q": [
            "linked-list",
            "two-pointers",
            "divide-and-conquer",
            "sorting",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "61.7%",
        "frontend_id": "LCR 077",
        "title_slug": "7WHec2"
    },
    {
        "_id": "vvXgSW",
        "title_cn": "合并 K 个升序链表",
        "difficulty": 3,
        "tags_q": [
            "linked-list",
            "divide-and-conquer",
            "heap-priority-queue",
            "merge-sort"
        ],
        "paid_only": false,
        "ac_rate": "64.7%",
        "frontend_id": "LCR 078",
        "title_slug": "vvXgSW"
    },
    {
        "_id": "TVdhkn",
        "title_cn": "子集",
        "difficulty": 2,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "84.7%",
        "frontend_id": "LCR 079",
        "title_slug": "TVdhkn"
    },
    {
        "_id": "uUsW3B",
        "title_cn": "组合",
        "difficulty": 2,
        "tags_q": [
            "array",
            "backtracking"
        ],
        "paid_only": false,
        "ac_rate": "82.3%",
        "frontend_id": "LCR 080",
        "title_slug": "uUsW3B"
    },
    {
        "_id": "2AoeFn",
        "title_cn": "不同路径",
        "difficulty": 2,
        "tags_q": [
            "math",
            "dynamic-programming",
            "combinatorics"
        ],
        "paid_only": false,
        "ac_rate": "75.6%",
        "frontend_id": "LCR 098",
        "title_slug": "2AoeFn"
    },
    {
        "_id": "bLyHh0",
        "title_cn": "省份数量",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "67.0%",
        "frontend_id": "LCR 116",
        "title_slug": "bLyHh0"
    },
    {
        "_id": "K8GULz",
        "title_cn": "环形闯关游戏",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "union-find",
            "array",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "40.7%",
        "frontend_id": "LCP 49",
        "title_slug": "K8GULz"
    },
    {
        "_id": "oPs9Bm",
        "title_cn": "入场安检",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "46.0%",
        "frontend_id": "LCP 47",
        "title_slug": "oPs9Bm"
    },
    {
        "_id": "sZ59z6",
        "title_cn": "开幕式焰火",
        "difficulty": 1,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "hash-table",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "78.3%",
        "frontend_id": "LCP 44",
        "title_slug": "sZ59z6"
    },
    {
        "_id": "uOAnQW",
        "title_cn": "心算挑战",
        "difficulty": 1,
        "tags_q": [
            "greedy",
            "array",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "31.8%",
        "frontend_id": "LCP 40",
        "title_slug": "uOAnQW"
    },
    {
        "_id": "0jQkd0",
        "title_cn": "无人机方阵",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "counting",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "55.7%",
        "frontend_id": "LCP 39",
        "title_slug": "0jQkd0"
    },
    {
        "_id": "fHi6rV",
        "title_cn": "黑白翻转棋",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "68.2%",
        "frontend_id": "LCP 41",
        "title_slug": "fHi6rV"
    },
    {
        "_id": "vFjcfV",
        "title_cn": "玩具套圈",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "hash-table",
            "math",
            "binary-search",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "28.9%",
        "frontend_id": "LCP 42",
        "title_slug": "vFjcfV"
    },
    {
        "_id": "05ZEDJ",
        "title_cn": "志愿者调配",
        "difficulty": 2,
        "tags_q": [
            "graph",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "LCP 46",
        "title_slug": "05ZEDJ"
    },
    {
        "_id": "fsa7oZ",
        "title_cn": "无限棋局",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math",
            "enumeration",
            "game-theory"
        ],
        "paid_only": false,
        "ac_rate": "27.6%",
        "frontend_id": "LCP 48",
        "title_slug": "fsa7oZ"
    },
    {
        "_id": "kplEvH",
        "title_cn": "自行车炫技赛场",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "30.6%",
        "frontend_id": "LCP 45",
        "title_slug": "kplEvH"
    },
    {
        "_id": "WHnhjV",
        "title_cn": "宝石补给",
        "difficulty": 1,
        "tags_q": [
            "array",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "75.3%",
        "frontend_id": "LCP 50",
        "title_slug": "WHnhjV"
    },
    {
        "_id": "UEcfPD",
        "title_cn": "烹饪料理",
        "difficulty": 1,
        "tags_q": [
            "bit-manipulation",
            "array",
            "backtracking",
            "enumeration"
        ],
        "paid_only": false,
        "ac_rate": "48.7%",
        "frontend_id": "LCP 51",
        "title_slug": "UEcfPD"
    },
    {
        "_id": "QO5KpG",
        "title_cn": "二叉搜索树染色",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "segment-tree",
            "binary-search-tree",
            "array",
            "binary-search",
            "binary-tree",
            "ordered-set"
        ],
        "paid_only": false,
        "ac_rate": "30.0%",
        "frontend_id": "LCP 52",
        "title_slug": "QO5KpG"
    },
    {
        "_id": "EJvmW4",
        "title_cn": "守护太空城",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "46.6%",
        "frontend_id": "LCP 53",
        "title_slug": "EJvmW4"
    },
    {
        "_id": "s5kipK",
        "title_cn": "夺回据点",
        "difficulty": 3,
        "tags_q": [
            "graph",
            "array",
            "biconnected-component"
        ],
        "paid_only": false,
        "ac_rate": "45.9%",
        "frontend_id": "LCP 54",
        "title_slug": "s5kipK"
    },
    {
        "_id": "PTXy4P",
        "title_cn": "采集果实",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "73.7%",
        "frontend_id": "LCP 55",
        "title_slug": "PTXy4P"
    },
    {
        "_id": "6UEx57",
        "title_cn": "信物传送",
        "difficulty": 2,
        "tags_q": [
            "breadth-first-search",
            "graph",
            "array",
            "matrix",
            "shortest-path",
            "heap-priority-queue"
        ],
        "paid_only": false,
        "ac_rate": "45.2%",
        "frontend_id": "LCP 56",
        "title_slug": "6UEx57"
    },
    {
        "_id": "ZbAuEH",
        "title_cn": "打地鼠",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "28.1%",
        "frontend_id": "LCP 57",
        "title_slug": "ZbAuEH"
    },
    {
        "_id": "NfY1m5",
        "title_cn": "搭桥过河",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "35.5%",
        "frontend_id": "LCP 59",
        "title_slug": "NfY1m5"
    },
    {
        "_id": "WInSav",
        "title_cn": "力扣泡泡龙",
        "difficulty": 3,
        "tags_q": [
            "tree",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "21.8%",
        "frontend_id": "LCP 60",
        "title_slug": "WInSav"
    },
    {
        "_id": "De4qBB",
        "title_cn": "积木拼接",
        "difficulty": 3,
        "tags_q": [
            "array",
            "backtracking",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "37.1%",
        "frontend_id": "LCP 58",
        "title_slug": "De4qBB"
    },
    {
        "_id": "6CE719",
        "title_cn": "气温变化趋势",
        "difficulty": 1,
        "tags_q": [
            "array"
        ],
        "paid_only": false,
        "ac_rate": "61.6%",
        "frontend_id": "LCP 61",
        "title_slug": "6CE719"
    },
    {
        "_id": "D9PW8w",
        "title_cn": "交通枢纽",
        "difficulty": 2,
        "tags_q": [
            "graph"
        ],
        "paid_only": false,
        "ac_rate": "63.1%",
        "frontend_id": "LCP 62",
        "title_slug": "D9PW8w"
    },
    {
        "_id": "3aqs1c",
        "title_cn": "舒适的湿度",
        "difficulty": 3,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "47.6%",
        "frontend_id": "LCP 65",
        "title_slug": "3aqs1c"
    },
    {
        "_id": "U7WvvU",
        "title_cn": "二叉树灯饰",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "dynamic-programming",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "37.8%",
        "frontend_id": "LCP 64",
        "title_slug": "U7WvvU"
    },
    {
        "_id": "EXvqDp",
        "title_cn": "弹珠游戏",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "graph",
            "topological-sort",
            "memoization",
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "27.7%",
        "frontend_id": "LCP 63",
        "title_slug": "EXvqDp"
    },
    {
        "_id": "600YaG",
        "title_cn": "最小展台数量",
        "difficulty": 1,
        "tags_q": [
            "array",
            "hash-table",
            "string",
            "counting"
        ],
        "paid_only": false,
        "ac_rate": "77.4%",
        "frontend_id": "LCP 66",
        "title_slug": "600YaG"
    },
    {
        "_id": "1GxJYY",
        "title_cn": "美观的花束",
        "difficulty": 2,
        "tags_q": [
            "array",
            "sliding-window"
        ],
        "paid_only": false,
        "ac_rate": "52.4%",
        "frontend_id": "LCP 68",
        "title_slug": "1GxJYY"
    },
    {
        "_id": "rMeRt2",
        "title_cn": "Hello LeetCode!",
        "difficulty": 3,
        "tags_q": [
            "bit-manipulation",
            "array",
            "string",
            "dynamic-programming",
            "bitmask"
        ],
        "paid_only": false,
        "ac_rate": "36.7%",
        "frontend_id": "LCP 69",
        "title_slug": "rMeRt2"
    },
    {
        "_id": "XxZZjK",
        "title_cn": "沙地治理",
        "difficulty": 3,
        "tags_q": [
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "30.0%",
        "frontend_id": "LCP 70",
        "title_slug": "XxZZjK"
    },
    {
        "_id": "kskhHQ",
        "title_cn": "集水器",
        "difficulty": 3,
        "tags_q": [
            "union-find",
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "57.1%",
        "frontend_id": "LCP 71",
        "title_slug": "kskhHQ"
    },
    {
        "_id": "hqCnmP",
        "title_cn": "补给马车",
        "difficulty": 1,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "67.5%",
        "frontend_id": "LCP 72",
        "title_slug": "hqCnmP"
    },
    {
        "_id": "0Zeoeg",
        "title_cn": "探险营地",
        "difficulty": 2,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "46.5%",
        "frontend_id": "LCP 73",
        "title_slug": "0Zeoeg"
    },
    {
        "_id": "xepqZ5",
        "title_cn": "最强祝福力场",
        "difficulty": 2,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "31.2%",
        "frontend_id": "LCP 74",
        "title_slug": "xepqZ5"
    },
    {
        "_id": "rdmXM7",
        "title_cn": "传送卷轴",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "38.0%",
        "frontend_id": "LCP 75",
        "title_slug": "rdmXM7"
    },
    {
        "_id": "1ybDKD",
        "title_cn": "魔法棋盘",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "LCP 76",
        "title_slug": "1ybDKD"
    },
    {
        "_id": "W2ZX4X",
        "title_cn": "符文储备",
        "difficulty": 1,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "68.7%",
        "frontend_id": "LCP 77",
        "title_slug": "W2ZX4X"
    },
    {
        "_id": "Nsibyl",
        "title_cn": "城墙防线",
        "difficulty": 2,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "46.3%",
        "frontend_id": "LCP 78",
        "title_slug": "Nsibyl"
    },
    {
        "_id": "kjpLFZ",
        "title_cn": "提取咒文",
        "difficulty": 2,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "30.0%",
        "frontend_id": "LCP 79",
        "title_slug": "kjpLFZ"
    },
    {
        "_id": "qoQAMX",
        "title_cn": "生物进化录",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "53.0%",
        "frontend_id": "LCP 80",
        "title_slug": "qoQAMX"
    },
    {
        "_id": "ryfUiz",
        "title_cn": "与非的谜题",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "50.5%",
        "frontend_id": "LCP 81",
        "title_slug": "ryfUiz"
    },
    {
        "_id": "cnHoX6",
        "title_cn": "万灵之树",
        "difficulty": 3,
        "tags_q": [],
        "paid_only": false,
        "ac_rate": "18.7%",
        "frontend_id": "LCP 82",
        "title_slug": "cnHoX6"
    },
    {
        "_id": "maximum-binary-tree-ii",
        "title_cn": "最大二叉树 II",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "69.0%",
        "frontend_id": "998",
        "title_slug": "maximum-binary-tree-ii"
    },
    {
        "_id": "maximum-number-of-darts-inside-of-a-circular-dartboard",
        "title_cn": "圆形靶内的最大飞镖数量",
        "difficulty": 3,
        "tags_q": [
            "geometry",
            "array",
            "math"
        ],
        "paid_only": false,
        "ac_rate": "38.2%",
        "frontend_id": "1453",
        "title_slug": "maximum-number-of-darts-inside-of-a-circular-dartboard"
    },
    {
        "_id": "maximum-white-tiles-covered-by-a-carpet",
        "title_cn": "毯子覆盖的最多白色砖块数",
        "difficulty": 2,
        "tags_q": [
            "greedy",
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "paid_only": false,
        "ac_rate": "33.7%",
        "frontend_id": "2271",
        "title_slug": "maximum-white-tiles-covered-by-a-carpet"
    },
    {
        "_id": "find-the-grid-of-region-average",
        "title_cn": "找出网格的区域平均强度",
        "difficulty": 2,
        "tags_q": [
            "array",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "49.4%",
        "frontend_id": "3030",
        "title_slug": "find-the-grid-of-region-average"
    },
    {
        "_id": "number-of-changing-keys",
        "title_cn": "按键变更的次数",
        "difficulty": 1,
        "tags_q": [
            "string"
        ],
        "paid_only": false,
        "ac_rate": "83.1%",
        "frontend_id": "3019",
        "title_slug": "number-of-changing-keys"
    },
    {
        "_id": "21dk04",
        "title_cn": "不同的子序列",
        "difficulty": 3,
        "tags_q": [
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "55.1%",
        "frontend_id": "LCR 097",
        "title_slug": "21dk04"
    },
    {
        "_id": "0i0mDW",
        "title_cn": "最小路径和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "paid_only": false,
        "ac_rate": "72.6%",
        "frontend_id": "LCR 099",
        "title_slug": "0i0mDW"
    },
    {
        "_id": "IlPe0q",
        "title_cn": "三角形最小路径和",
        "difficulty": 2,
        "tags_q": [
            "array",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "73.9%",
        "frontend_id": "LCR 100",
        "title_slug": "IlPe0q"
    },
    {
        "_id": "NUPfPr",
        "title_cn": "分割等和子集",
        "difficulty": 1,
        "tags_q": [
            "math",
            "string",
            "simulation"
        ],
        "paid_only": false,
        "ac_rate": "48.9%",
        "frontend_id": "LCR 101",
        "title_slug": "NUPfPr"
    },
    {
        "_id": "vlzXQL",
        "title_cn": "除法求值",
        "difficulty": 2,
        "tags_q": [
            "depth-first-search",
            "breadth-first-search",
            "union-find",
            "graph",
            "array",
            "shortest-path"
        ],
        "paid_only": false,
        "ac_rate": "64.5%",
        "frontend_id": "LCR 111",
        "title_slug": "vlzXQL"
    },
    {
        "_id": "Y1VbOX",
        "title_cn": "十字路口的交通",
        "difficulty": 3,
        "tags_q": [
            "array",
            "string",
            "dynamic-programming"
        ],
        "paid_only": false,
        "ac_rate": "52.0%",
        "frontend_id": "LCP 43",
        "title_slug": "Y1VbOX"
    },
    {
        "_id": "KnLfVT",
        "title_cn": "装饰树",
        "difficulty": 2,
        "tags_q": [
            "tree",
            "depth-first-search",
            "breadth-first-search",
            "binary-tree"
        ],
        "paid_only": false,
        "ac_rate": "86.7%",
        "frontend_id": "LCP 67",
        "title_slug": "KnLfVT"
    }
]